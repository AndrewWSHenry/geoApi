{"version":3,"sources":["gapi.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","geoapi","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","lookup","decode","elt","charCodeAt","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","push","v","arr","L","j","tmp","placeHolders","len","charAt","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","temp","extraBytes","output","Uint8Array","Array","toByteArray","fromByteArray","base64js","2","typedArraySupport","Bar","foo","constructor","subarray","byteLength","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","arg","parent","undefined","fromNumber","fromString","arguments","fromObject","that","allocate","checked","string","encoding","write","object","isBuffer","fromBuffer","isArray","fromArray","TypeError","ArrayBuffer","buffer","fromTypedArray","fromArrayBuffer","fromArrayLike","fromJsonObject","copy","array","_augment","type","data","__proto__","prototype","_isBuffer","fromPool","poolSize","rootParent","RangeError","toString","SlowBuffer","subject","buf","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","Infinity","hexSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSlice","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64","slice","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","String","fromCharCode","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","value","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","leadSurrogate","byteArray","c","hi","lo","src","dst","INSPECT_MAX_BYTES","b","compare","x","y","isEncoding","concat","list","pos","item","equals","inspect","match","join","indexOf","val","byteOffset","arrayIndexOf","foundIndex","get","console","log","readUInt8","set","writeUInt8","isFinite","swap","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target","targetStart","_set","fill","toArrayBuffer","BP","toLocaleString","base64-js","isarray","3","4","factory","canvg","RGBColor","stackBlur","getSelectorSpecificity","selector","typeCount","findMatch","regex","matches","attributeRegex","idRegex","classRegex","pseudoElementRegex","pseudoClassWithBracketsRegex","pseudoClassRegex","elementRegex","build","opts","svg","FRAMERATE","MAX_VIRTUAL_PIXELS","msg","init","ctx","uniqueId","UniqueId","Definitions","Styles","StylesSpecificity","Animations","Images","ViewPort","viewPorts","Clear","SetCurrent","width","height","RemoveCurrent","pop","Current","ComputeSize","d","sqrt","ImagesLoaded","loaded","compressSpaces","ajax","url","AJAX","XMLHttpRequest","ActiveXObject","open","send","responseText","parseXml","xml","Windows","Data","Xml","xmlDoc","Dom","XmlDocument","settings","XmlLoadSettings","prohibitDtd","loadXml","DOMParser","parser","parseFromString","async","loadXML","Property","name","getValue","hasValue","numValue","parseFloat","valueOrDefault","def","numValueOrDefault","addOpacity","opacityProp","newValue","color","ok","getDefinition","isUrlDefinition","getFillStyleDefinition","createGradient","createPattern","getHrefAttribute","pt","attribute","getDPI","viewPort","getEM","em","fontSize","Font","Parse","font","toPixels","getUnits","processPercent","toMilliseconds","toRadians","PI","textBaselineMapping","baseline","before-edge","text-before-edge","middle","central","after-edge","text-after-edge","ideographic","alphabetic","hanging","mathematical","toTextBaseline","Variants","Weights","CreateFont","fontStyle","fontVariant","fontWeight","fontFamily","inherit","split","ff","ToNumberArray","Point","angleTo","p","atan2","applyTransform","xp","yp","CreatePoint","CreatePath","path","BoundingBox","x1","y1","x2","y2","NaN","addPoint","addX","addY","addBoundingBox","bb","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","b2ac","t1","t2","isPointInBox","Transform","Type","translate","unapply","applyToPoint","rotate","angle","cx","cy","cos","sin","scale","matrix","m","transform","h","det","SkewBase","base","skewX","tan","skewY","transforms","transformType","AspectRatio","aspectRatio","desiredWidth","desiredHeight","minX","minY","refX","refY","align","meetOrSlice","scaleX","scaleY","scaleMin","scaleMax","Element","EmptyProperty","ElementBase","node","attributes","styles","stylesSpecificity","children","createIfNotExists","style","skipAncestors","ps","render","save","mask","filter","setContext","renderChildren","clearContext","restore","addChild","childNode","create","child","CreateElement","addStylesFromStyleDefinition","matchesSelector","specificity","existingSpecificity","allUppercase","RegExp","normalizeAttributeName","test","nodeType","nodeName","childNodes","captureTextNodes","text","textContent","tspan","RenderedElementBase","fs","fillStyle","strokeStyle","newLineWidth","lineWidth","lineCap","lineJoin","miterLimit","gaps","setLineDash","webkitLineDash","mozDash","lineDashOffset","webkitLineDashOffset","mozDashOffset","clip","globalAlpha","PathElementBase","beginPath","Mouse","checkPath","stroke","markers","getMarkers","marker","getBoundingBox","baseClearContext","baseSetContext","getComputedStyle","canvas","getPropertyValue","root","moveTo","lineTo","closePath","viewBox","rect","rx","ry","quadraticCurveTo","circle","arc","ellipse","KAPPA","bezierCurveTo","line","getPoints","points","polyline","polygon","basePath","PathParser","tokens","reset","command","previousCommand","control","current","angles","isEnd","isCommandOrEnd","isRelativeCommand","getToken","getScalar","nextCommand","getPoint","makeAbsolute","getAsControlPoint","getAsCurrentPoint","getReflectedControlPoint","addMarker","from","priorTo","addMarkerAngle","getMarkerPoints","getMarkerAngles","pp","newP","curr","cntrl","cp","xAxisRotation","largeArcFlag","sweepFlag","currp","cpp","centp","acos","a1","ad","dir","ah","halfWay","sx","sy","pattern","element","tempSvg","document","createElement","cctx","getContext","baseRender","point","defs","GradientBase","stops","getGradient","gradientUnits","attributesToInherit","inheritStopContainer","stopsContainer","attributeToInherit","parentOpacityProp","addParentOpacity","addColorStop","rootView","group","tempCtx","linearGradient","createLinearGradient","radialGradient","fx","fy","createRadialGradient","stop","stopColor","AnimateBase","duration","begin","maxDuration","getProperty","attributeType","attributeName","initialValue","initialUnits","removed","calcValue","update","delta","frozen","animationFrozen","animationFrozenValue","updated","to","values","progress","lb","ub","ceil","animate","animateColor","animateTransform","horizAdvX","isRTL","isArabic","fontFace","missingGlyph","glyphs","arabicForm","unicode","fontface","ascent","descent","unitsPerEm","missingglyph","glyph","textBaseline","getText","getAnchorDelta","renderChild","startI","textAnchor","measureTextRecursive","textParent","measureText","TextElementBase","getGlyph","customFont","fillText","strokeText","reverse","dx","lw","measure","textToMeasure","tref","hasText","baseRenderChildren","checkBoundingBox","onclick","onmousemove","cursor","image","href","isSvg","img","crossOrigin","onload","onerror","drawSvg","drawImage","symbol","css","cssDefs","cssDef","cssClasses","cssProps","cssClass","props","k","prop","srcs","urlStart","urlEnd","doc","fonts","getElementsByTagName","use","oldParent","cMask","maskCtx","globalCompositeOperation","fillRect","clipPath","oldBeginPath","CanvasRenderingContext2D","oldClosePath","px","py","efd","extraFilterDistance","feMorphology","feComposite","feColorMatrix","imGet","rgba","imSet","mi","m1","m2","m3","srcData","getImageData","clearRect","putImageData","feGaussianBlur","blurRadius","canvasRGBA","id","display","body","appendChild","removeChild","title","desc","MISSING","className","load","loadXmlDoc","dom","mapXY","offsetLeft","offsetTop","offsetParent","scrollX","scrollY","clientX","event","clientY","documentElement","isFirstRender","draw","parentNode","clientWidth","clientHeight","cWidth","cHeight","xRatio","yRatio","waitingForImages","intervalID","setInterval","needUpdate","hasEvents","runEvents","clearInterval","events","run","eventElements","isPointInPath","getElementById","svgTags","querySelectorAll","svgTag","insertBefore","div","innerHTML","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","jQuery","Zepto","$","is","Sizzle","dy","dw","dh","cOpts","ignoreMouse","ignoreAnimation","ignoreDimensions","ignoreClear","offsetX","offsetY","scaleWidth","scaleHeight","hasOwnProperty","rgbcolor","stackblur","5","isLat","isLon","keyCount","Object","keys","autoDelimiter","delimiters","results","forEach","delimiter","dsv","parse","count","arity","sort","auto","csv2geojson","options","callback","latfield","lonfield","crs","features","featurecollection","properties","message","fields","errors","lonf","latf","lonk","latk","sexagesimal","row","includeLatLon","geometry","coordinates","toLine","gj","reduce","aggregatedProperties","newFeature","key","toPolygon","poly","csv","tsv","6","Function","7","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","abs","LN2","8","nextTick","draining","oldQueue","queue","immediate","task","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","called","observer","createTextNode","observe","characterData","setImmediate","MessageChannel","scriptEl","onreadystatechange","setTimeout","channel","port1","onmessage","port2","postMessage","9","obj","isSlowBuffer","10","ArrayReader","index","zero","DataReader","byteAt","lastIndexOfSignature","sig","sig0","sig1","sig2","sig3","readData","size","result","./dataReader","11","_keyStr","input","utf8","chr1","chr2","chr3","enc1","enc2","enc3","enc4","12","CompressedObject","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","13","STORE","magic","compress","content","compressionOptions","uncompress","compressInputType","uncompressInputType","DEFLATE","./flate","14","utils","table","crc","getTypeOf","iTop","./utils","15","checkIndex","newIndex","setIndex","skip","readInt","readString","transformTo","readDate","dostime","Date","16","binary","createFolders","date","compression","comment","unixPermissions","dosPermissions","17","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","outputType","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","18","USE_TYPEDARRAY","Uint16Array","Uint32Array","pako","deflateRaw","level","inflateRaw","19","JSZip","files","clone","newObj","support","defaults","compressions","./base64","./compressions","./defaults","./deprecatedPublicUtils","./load","./object","./support","20","ZipEntries","zipEntries","extend","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","file","fileNameStr","decompressed","fileCommentStr","zipComment","./utf8","./zipEntries","21","22","NodeBufferReader","Uint8ArrayReader","./uint8ArrayReader","23","signature","nodeBuffer","StringWriter","Uint8ArrayWriter","getRawData","_data","getBinaryData","nodebuffer","asBinary","dataToString","asUTF8","utf8encode","ZipObject","_initialMetadata","asText","asNodeBuffer","asUint8Array","asArrayBuffer","decToHex","dec","hex","prepareFileAttrs","toUpperCase","fileAdd","dataType","forceTrailingSlash","parentFolder","folderAdd","substring","lastSlash","lastIndexOf","generateCompressedObjectFrom","generateUnixExternalFileAttr","isDir","generateDosExternalFileAttr","generateZipParts","compressedObject","platform","encodeFileName","dosTime","dosDate","useCustomEncoding","encodedFileName","utfEncodedFileName","encodedComment","utfEncodedComment","useUTF8ForFileName","useUTF8ForComment","extraFields","unicodePathExtraField","unicodeCommentExtraField","extFileAttr","versionMadeBy","getHours","getMinutes","getSeconds","getFullYear","getMonth","getDate","header","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","stream","search","filename","relativePath","fileClone","regexp","folder","newFolder","remove","kids","generate","mimeType","writer","zipData","localDirLength","centralDirLength","compressionName","zipPart","dirEnd","CENTRAL_DIRECTORY_END","typeName","append","zip","finalize","./compressedObject","./crc32","./nodeBuffer","./signature","./stringWriter","./uint8ArrayWriter","24","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","25","StringReader","26","27","arraybuffer","uint8array","blob","Blob","Builder","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","builder","getBlob","28","./arrayReader","29","30","_utf8len","string2buf","c2","m_pos","str_len","buf_len","utf8border","buf2string","c_len","utf16buf","applyFromCharCode","chunk","nextBoundary","31","identity","stringToArrayLike","arrayLikeToString","canUseApply","resultStr","arrayLikeToArrayLike","arrayFrom","arrayTo","inputType","supported","method","attr","32","loadOptions","ZipEntry","checkSignature","expectedSignature","reader","isSignature","askedIndex","currentIndex","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","decodeParamType","decodeContent","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionNeeded","zip64ExtensibleData","extraFieldId","extraFieldLength","extraFieldValue","extraDataSize","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","isGarbage","endOfCentralDirOffset","expectedEndOfCentralDirOffset","prepareReader","./nodeBufferReader","./stringReader","./zipEntry","33","jszipProto","MADE_BY_DOS","MADE_BY_UNIX","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","previousIndex","compressedFileData","prepareContent","uncompressedFileData","localExtraFieldsLength","fileNameLength","fileName","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","madeBy","extraReader","upath","findExtraFieldUnicodePath","fileNameByteArray","ucomment","findExtraFieldUnicodeComment","commentByteArray","upathField","ucommentField","34","assign","deflate","inflate","constants","./lib/deflate","./lib/inflate","./lib/utils/common","./lib/zlib/constants","35","Deflate","Z_DEFAULT_COMPRESSION","Z_DEFLATED","chunkSize","windowBits","memLevel","strategy","Z_DEFAULT_STRATEGY","opt","raw","gzip","err","ended","chunks","strm","ZStream","avail_out","status","zlib_deflate","deflateInit2","Z_OK","deflateSetHeader","dictionary","dict","strings","deflateSetDictionary","_dict_set","deflator","Z_NO_FLUSH","Z_FINISH","Z_STREAM_END","Z_SYNC_FLUSH","mode","_mode","next_in","avail_in","Buf8","next_out","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","./utils/common","./utils/strings","./zlib/deflate","./zlib/messages","./zlib/zstream","36","Inflate","zlib_inflate","inflateInit2","GZheader","inflateGetHeader","inflator","next_out_utf8","tail","utf8str","allowBufError","binstring2buf","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","arraySet","inflateEnd","ungzip","./zlib/constants","./zlib/gzheader","./zlib/inflate","37","TYPED_OK","Int32Array","sources","source","shift","fnTyped","dest","src_offs","dest_offs","fnUntyped","setTyped","on","Buf16","Buf32","38","STR_APPLY_UIA_OK","STR_APPLY_OK","__","q","./common","39","adler32","adler","s1","s2","40","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_BINARY","Z_TEXT","Z_UNKNOWN","41","makeTable","crcTable","42","errorCode","rank","flush_pending","state","pending","pending_buf","pending_out","total_out","flush_block_only","last","trees","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","read_buf","wrap","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","w_size","MIN_LOOKAHEAD","_win","wmask","w_mask","prev","strend","MAX_MATCH","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","_w_size","window_size","hash_size","head","insert","MIN_MATCH","ins_h","hash_shift","hash_mask","deflate_stored","flush","max_block_size","pending_buf_size","BS_NEED_MORE","max_start","BS_FINISH_STARTED","BS_FINISH_DONE","deflate_fast","hash_head","bflush","match_length","_tr_tally","max_lazy_match","last_lit","BS_BLOCK_DONE","deflate_slow","max_insert","prev_match","match_available","deflate_rle","deflate_huff","Config","good_length","max_lazy","nice_length","max_chain","func","lm_init","configuration_table","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","HEAP_SIZE","dyn_dtree","D_CODES","bl_tree","BL_CODES","l_desc","d_desc","bl_desc","bl_count","MAX_BITS","heap","L_CODES","heap_len","heap_max","depth","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","deflateResetKeep","data_type","INIT_STATE","BUSY_STATE","_tr_init","deflateReset","MAX_MEM_LEVEL","deflateInit","MAX_WBITS","DEF_MEM_LEVEL","old_flush","beg","FINISH_STATE","hcrc","extra","time","os","EXTRA_STATE","OS_CODE","level_flags","PRESET_DICT","NAME_STATE","COMMENT_STATE","HCRC_STATE","bstate","_tr_align","_tr_stored_block","avail","next","tmpDict","dictLength","LENGTH_CODES","LITERALS","deflateInfo","../utils/common","./adler32","./messages","./trees","43","xflags","extra_len","done","44","BAD","TYPE","_in","_out","dmax","wsize","whave","wnext","s_window","hold","bits","lcode","dcode","lmask","dmask","here","op","dist","from_source","lencode","distcode","lenbits","distbits","top","dolen","dodist","sane","45","zswap32","InflateState","havedict","flags","check","total","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","inflateResetKeep","HEAD","ENOUGH_LENS","ENOUGH_DISTS","inflateReset","inflateReset2","inflateInit","DEF_WBITS","fixedtables","virgin","sym","lenfix","distfix","inflate_table","LENS","DISTS","updatewindow","put","left","here_bits","here_op","here_val","last_bits","last_op","last_val","hbuf","order","TYPEDO","inf_leave","FLAGS","DICTID","TIME","OS","EXLEN","EXTRA","NAME","COMMENT","HCRC","DICT","CHECK","STORED","LEN_","TABLE","COPY_","COPY","LENLENS","CODES","CODELENS","LEN","inflate_fast","LIT","LENEXT","DIST","DISTEXT","MATCH","LENGTH","DONE","MEM","Z_MEM_ERROR","SYNC","dictid","inflateInfo","./inffast","./inftrees","46","MAXBITS","lbase","lext","dbase","dext","lens_index","codes","table_index","incr","low","drop","used","huff","base_index","offs","extra_index","47","0","-1","-2","-3","-4","-5","-6","48","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","_dist_code","put_short","w","send_bits","Buf_size","send_code","tree","bi_reverse","bi_flush","gen_bitlen","xbits","stree","overflow","gen_codes","next_code","tr_static_init","base_length","extra_lbits","_length_code","base_dist","extra_dbits","static_ltree","static_dtree","static_l_desc","static_d_desc","static_bl_desc","extra_blbits","MAX_BL_BITS","init_block","END_BLOCK","bi_windup","copy_block","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lc","lx","build_tree","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","build_bl_tree","max_blindex","bl_order","send_all_trees","lcodes","dcodes","blcodes","detect_data_type","black_mask","static_init_done","stored_len","STORED_BLOCK","STATIC_TREES","opt_lenb","static_lenb","DYN_TREES","DIST_CODE_LEN","49","50","INTERNAL","51","all","iterable","allResolver","resolveFromAll","outValue","resolved","handlers","resolve","promise","then","error","reject","Promise","./INTERNAL","./handlers","./promise","./reject","./resolve","52","getThen","tryCatch","resolveThenable","states","thenable","safely","FULFILLED","outcome","callFulfilled","REJECTED","callRejected","./resolveThenable","./states","./tryCatch","53","race","./all","./race","54","resolver","PENDING","unwrap","QueueItem","onRejected","onFulfilled","./queueItem","./unwrap","55","otherCallFulfilled","otherCallRejected","56","response","57","reason","58","valueType","FALSE","UNDEFINED","NULL","ZERO","EMPTYSTRING","59","safelyResolveThenable","onError","onSuccess","tryToUnwrap","60","61","62","returnValue","63","hOP","naiveLength","typeCheckKey","didTypeWarning","stack","LRUCache","_max","_lengthCalculator","_allowStale","stale","_maxAge","maxAge","_dispose","dispose","doUse","hit","_cache","isStale","del","diff","now","shiftLU","lu","_mru","_lruList","_lru","_length","_itemCount","Entry","defineProperty","mL","enumerable","lC","fn","thisp","itemCount","dump","dumpLru","has","peek","expiresAt","64","degToRad","deg","radToDeg","rad","LLtoUTM","ll","LongOrigin","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","lat","Long","lon","eccSquared","k0","LatRad","LongRad","UTMEasting","UTMNorthing","northing","round","easting","zoneNumber","zoneLetter","getLetterDesignator","UTMtoLL","utm","N1","T1","C1","R1","D","mu","phi1Rad","e1","accuracy","topRight","right","bottom","LetterDesignator","seasting","snorthing","get100kID","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","NUM_100K_SETS","column","parm","colOrigin","SET_ORIGIN_COLUMN_LETTERS","rowOrigin","SET_ORIGIN_ROW_LETTERS","colInt","rowInt","rollover","Z","I","O","V","twoLetter","mgrsString","testChar","hunK","sb","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","curCol","eastingValue","rewindMarker","curRow","northingValue","forward","inverse","mgrs","bbox","toPoint","65","dbfHeader","DataView","lastUpdated","getUint8","records","getUint32","headerLen","getUint16","recLen","dbfRowHeader","decimal","rowFuncs","textData","parseRow","rowHeaders","field","66","z","coords","warn","fromMGRS","mgrsStr","toMGRS","67","Projection","srsCode","json","parseCode","modifiedJSON","deriveConstants","ourProj","projections","projName","./deriveConstants","./extend","./parseCode","./projections","68","denorm","xin","yin","zin","axis","69","HALF_PI","sign","./sign","70","TWO_PI","SPI","71","asin","72","73","74","75","76","sinphi","77","ml","e0","e2","e3","phi","dphi","78","eccent","sin_phi","cos_phi","con","79","80","cosphi","81","ts","eccnth","atan","82","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","es","en","83","pj_mlfn","EPSLN","MAX_ITER","./pj_mlfn","84","sphi","cphi","85","86","87","esinp","exp","88","89","com","90","wgs84","towgs84","datumName","ch1903","ggrs87","nad83","nad27","nadgrids","potsdam","carthage","hermannskogel","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","91","MERIT","rf","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","WGS84","sphere","92","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","93","ft","to_meter","94","transformer","transformedArray","checkProj","proj","oProj","proj4","fromProj","toProj","coord","single","./Proj","./transform","95","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","AD_C","COS_67P5","datum","datum_type","datumCode","datum_params","map","grids","ep2","compare_datums","geodetic_to_geocentric","X","Y","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","Error_Code","geocentric_to_geodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","At_Pole","iter","genau","genau2","maxiter","geocentric_to_geodetic_noniter","W","W2","T0","S0","S1","Sin_B0","Sin3_B0","Cos_B0","Sin_p1","Cos_p1","Sum","geocentric_to_wgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","x_out","y_out","z_out","geocentric_from_wgs84","x_tmp","y_tmp","z_tmp","96","SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","checkParams","fallback","wp","src_a","src_es","dst_a","dst_es","apply_gridshift","97","parseProj","wkt","EPSG","ESRI","IAU2000","globals","./global","./projString","./wkt","98","Datum","Ellipsoid","SIXTH","RA4","RA6","datumDef","ellps","a2","b2","R_A","./constants/Datum","./constants/Ellipsoid","./datum","99","destination","property","100","GOOGLE","101","projs","Proj","add","./projections/aea","./projections/aeqd","./projections/cass","./projections/cea","./projections/eqc","./projections/eqdc","./projections/gnom","./projections/krovak","./projections/laea","./projections/lcc","./projections/mill","./projections/moll","./projections/nzmg","./projections/omerc","./projections/poly","./projections/sinu","./projections/somerc","./projections/stere","./projections/sterea","./projections/tmerc","./projections/utm","./projections/vandg","102","defaultDatum","version","../package.json","./Point","./common/toPoint","./core","./defs","./includedProjections","103","testObj","testDef","testWKT","codeWords","testProj","projStr","104","D2R","PrimeMeridian","defData","paramObj","paramName","paramVal","paramOutname","params","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","r_a","zone","south","utmSouth","from_greenwich","pm","legalAxis","./constants/PrimeMeridian","./constants/units","105","projStore","names","./projections/longlat","./projections/merc","106","msfnz","qsfnz","adjust_lon","asinz","sin_po","cos_po","ms1","qs1","ms2","qs2","t3","qs0","ns0","rh","qs","rh1","theta","phi1z","eccnts","../common/adjust_lon","../common/asinz","../common/msfnz","../common/qsfnz","107","mlfn","e0fn","e1fn","e2fn","e3fn","gN","imlfn","sin_p12","cos_p12","Mlp","Ml","tanphi","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s3","s4","s5","dlon","sinz","cosz","cosAz","B","Ee","F","../common/e0fn","../common/e1fn","../common/e2fn","../common/e3fn","../common/gN","../common/imlfn","../common/mlfn","108","adjust_lat","ml0","lam","nl","tl","al","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dl","dsq","../common/adjust_lat","109","iqsfnz","../common/iqsfnz","110","rc","dlat","111","ns","ml2","112","FORTPI","srat","phic0","ratexp","K","DEL_TOL","../common/srat","113","sin_p14","cos_p14","infinity_dist","coslon","ksp","sinc","cosc","114","s45","s90","fi0","alfa","uq","u0","k1","n0","s0","ro0","gfi","deltav","eps","ro","delta_lon","czech","fi1","115","S_POLE","N_POLE","EQUIT","OBLIQ","qp","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","sinb","cosb","phi0","cCe","sCe","rho","ab","authlat","P00","P01","P02","P10","P11","P20","APA","beta","116","tsfnz","phi2z","sin1","cos1","ts1","sin2","cos2","ts2","ts0","f0","../common/phi2z","../common/sign","../common/tsfnz","117","118","R2D","119","120","delta_theta","121","iterations","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_re1","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_re1","z_n_im1","delta_x","delta_y","z_n_re","z_n_im","num_re","num_im","den_re","den_im","den2","d_psi_n","122","no_off","no_rot","sinlat","coslat","bl","t0","fl","gl","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","vl","ul","POSITIVE_INFINITY","sp","tp","vp","up","123","mln","mlnp","ma","124","pj_enfn","pj_inv_mlfn","C_y","C_x","../common/pj_enfn","../common/pj_inv_mlfn","../common/pj_mlfn","125","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","R","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","126","ssfn_","phit","eccen","coslat0","sinlat0","cons","X0","cosX0","sinX0","sinX","cosX","ce","Chi","127","gauss","sinc0","cosc0","R2","cosl","./gauss","128","als","tq","delta_phi","max_iter","tan_phi","cs","ds","129","tmerc","dependsOn","./tmerc","130","sinth","costh","gsq","msq","xx","yy","xys","c1","c3","th1","131","datum_transform","adjust_axis","checkNotWGS","./adjust_axis","./datum_transform","132","mapit","aa","sExpr","convert","auth","every","rename","outName","inName","d2r","cleanWKT","toMeter","ratio","local","PROJECTION","UNIT","DATUM","SPHEROID","GEOGCS","renamer","lisp","JSON","unshift","133","_args","scope","escapedName","rawSpec","spec","_from","_id","_inCache","_location","_nodeVersion","_npmOperationalInternal","host","_npmUser","email","_npmVersion","_phantomChildren","_requested","_requiredBy","_resolved","_shasum","_shrinkwrap","_spec","_where","author","bugs","contributors","dependencies","description","devDependencies","browserify","chai","curl","grunt","grunt-browserify","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","istanbul","mocha","tin","directories","shasum","tarball","gitHead","homepage","jam","main","include","license","maintainers","optionalDependencies","readme","repository","scripts","134","color_string","simple_colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","color_defs","re","example","process","processor","exec","channels","toRGB","toRGBA","getHelpXML","examples","sc","setAttribute","list_item","list_color","example_div","cssText","list_item_value","135","dims","formatPair","format","dim","dirs","whole","fraction","fractionMinutes","minutes","seconds","pair","one","two","swapdim","136","binaryAjax","responseType","addEventListener","lie","137","shp","whiteList","cache","getShapefile","resp","getZip","parseZip","unzip","parseShp","parseDbf","Cache","combine","geojson","args","prj","dbf","../../is-buffer/index.js","./binaryajax","./parseShp","./toArrayBuffer","./unzip","lru-cache","parsedbf","138","isClockWise","cur","sum","polyReduce","makeParseCoord","trans","getFloat64","ParseShp","shpFuncs","rows","getRows","parsePoint","parseCoord","parseZPoint","pointXY","parsePointArray","parseZPointArray","zOffset","parseArrayGroup","partOffset","tot","curNum","pointNumber","nextNum","getInt32","parseZArrayGroup","parseMultiPoint","mins","maxs","parseZMultiPoint","geoJson","parsePolyline","numParts","parseZPolyline","polyFuncs","parsePolygon","parseZPolygon","shpFuncObj","tran","getShpCode","parseFunc","parseHeader","shpCode","view","getRow","139","arrayBuffer","140","jszip","141","blur","pixels","radius","yi","yw","r_sum","g_sum","b_sum","a_sum","r_out_sum","g_out_sum","b_out_sum","a_out_sum","r_in_sum","g_in_sum","b_in_sum","a_in_sum","pr","pg","pb","pa","rbs","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stackEnd","stackIn","stackOut","mul_sum","mul_table","shg_sum","shg_table","142","SVG","camelCase","capitalize","fullHex","compToHex","comp","proportionalSize","box","deltaTransformPoint","arrayToMatrix","parseMatrix","Matrix","ensureCentre","stringToMatrix","whitespace","matrixElements","arrayToString","il","assignNewId","SVGElement","adopt","eid","fullBox","idFromReference","reference","Doc","prepare","xmlns","xlink","svgjs","createElementNS","createSVGRect","did","modules","methods","Set","invent","config","initializer","construct","Container","instance","Nested","Gradient","namespace","setData","getAttribute","nested","native","numberAndUnit","rgb","isHex","isRgb","isCss","isBlank","isNumber","isPercent","isImage","negExp","comma","hyphen","pathLetters","isPathLetter","whitespaces","block","radians","degrees","filterSVGElements","nodes","attrs","fill-opacity","stroke-opacity","stroke-width","stroke-linejoin","stroke-linecap","opacity","stop-opacity","stop-color","font-size","font-family","text-anchor","Color","toRgb","brightness","morph","at","isColor","valueOf","lastValue","lastDestination","settle","seen","PointArray","move","getBBox","PathArray","equalCommands","pathArray","sourceArray","destinationArray","seg","paramCnt","Q","first","splice","unit","plus","number","minus","times","divide","_stroke","center","cloneNode","after","removeElement","addTo","putIn","inside","show","hide","visible","classes","hasClass","addClass","removeClass","toggleClass","parents","well","Parent","writeDataToDom","firstChild","each","lines","removeAttribute","stringify","easing","-","<>",">","<","MorphObj","Situation","reversed","reversing","delay","finish","ease","loop","loops","animations","once","FX","_target","situations","active","situation","paused","lastPos","absPos","_speed","timeToAbsPos","timestamp","absPosToTime","startAnimFrame","stopAnimFrame","animationFrame","requestAnimationFrame","step","bind","cancelAnimationFrame","startCurrent","initAnimations","dequeue","viewbox","relative","initialTransformation","matrixify","clearQueue","clearCurrent","jumpToEnd","atEnd","atStart","isAbsPos","durDivSpd","speed","pause","play","easeIt","wrapper","detail","off","during","eased","afterAll","duringAll","ignoreTime","absPosInt","lastLoop","Boolean","fire","eachAt","multiply","undo","extract","isEased","real","Text","plot","leading","ViewBox","Stop","BBox","contains","Exception","Shape","clientLeft","clientTop","TBox","ctm","tbox","RBox","getBoundingClientRect","zoom","pageXOffset","pageYOffset","rbox","merge","abcdef","transformedX","transformedY","rotation","param","around","flip","skew","createSVGMatrix","getCTM","screenCTM","getScreenCTM","createSVGPoint","matrixTransform","nodeValue","Image","setAttributeNS","rebuild","Rotate","Scale","Skew","Translate","untransform","kv","toParent","pCtm","toDoc","Transformation","inversed","_undo","deep","clear","hasChildNodes","lastChild","_defs","ungroup","Defs","flatten","we","he","wm","hm","reg","offsetWidth","offsetHeight","listeners","handlerMap","listenerId","listener","binding","ev","_svgjsListenerId","removeEventListener","Event","dispatchEvent","CustomEvent","gbox","siblings","position","previous","backward","front","before","Mask","targets","unmask","maskWith","masker","ClipPath","unclip","clipWith","clipper","gradient","Pattern","patternUnits","spof","Bare","words","Use","Rect","Circle","Ellipse","Line","Polyline","Polygon","_array","morphArray","Path","_loaded","_error","_rebuild","_build","textPath","newLined","oy","newLine","blankLineOffset","plain","Tspan","getComputedTextLength","TextPath","track","link","linkTo","Marker","ref","sugar","prefix","extension","dmove","getTotalLength","pointAt","getPointAtLength","members","elements","remember","memory","forget","_memory","select","query","bubbles","cancelable","createEvent","initCustomEvent","lastTime","vendors","currTime","getTime","timeToCall","clearTimeout","143","navigator","Terraformer","ArcGIS","decompressGeometry","coefficient","xDiffPrev","yDiffPrev","closeRing","pointsEqual","ringIsClockwise","ringToTest","pt2","rLength","pt1","orientRings","outerRing","hole","flattenMultiPolygonRings","rings","ring","coordinatesContainCoordinates","outer","inner","intersects","Tools","arraysIntersectArrays","coordinatesContainPoint","convertRingsToGeoJSON","outerRings","holes","uncontainedHoles","contained","arcgis","idAttribute","paths","compressedGeometry","OBJECTID","FID","inputSpatialReference","spatialReference","wkid","toGeographic","Primitive","sr","MercatorCRS","geometries","parseCompressedGeometry","LineString","toGeoJSON","fromGeoJSON","terraformer","144","terraformerProj4js","makeConverter","invalidProjID","outputSpatialReference","inSr","outSr","urnRegex","projFunc","applyConverter","145","calculateBounds","calculateBoundsFromArray","calculateBoundsFromNestedArrays","calculateBoundsFromNestedArrayOfArrays","calculateBoundsForFeatureCollection","calculateBoundsForGeometryCollection","lonlat","innerinner","featureCollection","extent","extents","geometryCollection","calculateEnvelope","bounds","DegreesPerRadian","RadiansPerDegree","eachPosition","positionToGeographic","EarthRadius","positionToMercator","lng","converter","noCrs","toMercator","cmp","compSort","turn","euclideanDistance","nextHullPoint","convexHull","hull","isConvex","ltz","polygonContainsPoint","edgeIntersectsEdge","b1","ua_t","ub_t","u_b","ua","closedPolygon","coordinatesEqual","na","nb","MultiPoint","MultiLineString","MultiPolygon","Feature","FeatureCollection","GeometryCollection","createCircle","interpolate","mercatorPosition","steps","GeographicCRS","excludeFromJSON","envelope","primitive","within","linestring","ls","mpoly","insertPoint","removePoint","addVertex","insertVertex","removeVertex","close","hasHoles","found","feature","recalculate","146","newLayerBundle","layerId","registerData","layerPackage","bundle","featureIdx","indexes","newLayerPackage","esriBundle","getAttribs","_attribData","layerData","defFinished","Deferred","maxId","batchSize","layerUrl","oidField","attribs","supportsLimit","loadDataBatch","createAttribSet","featureData","oidIndex","elem","idx","getLayerIndex","callerDef","esriRequest","where","outFields","returnGeometry","callbackParamName","handleAs","dataResult","moreData","exceededTransferLimit","thisDef","dataArray","loadFeatureAttribs","geoApi","defService","serviceResult","layerType","geometryType","minScale","maxScale","supportsFeatures","renderer","drawingInfo","legend","symbology","rendererToLegend","enhanceRenderer","currentVersion","pluckOptions","processFeatureLayer","layer","objectIdField","graphics","toJson","_json","layerDefinition","processDynamicLayer","lInfo","layerInfos","subLayerIds","lastIdx","loadLayerAttribsBuilder","shr","shared","lType","getLayerType","loadLayerAttribs","./shared.js","147","makeBasemaps","basemapsConfig","anchorId","setBasemap","basemapGallery","basemap","BasemapGallery","showArcGISBasemaps","basemapConfig","layers","layerConfig","BasemapLayer","Basemap","thumbnailUrl","startup","148","pinSymbol","yoffset","outline","hazeSymbol","149","circlePoint","solidLine","outlinedPoly","boundingBoxPoly","150","wrapEvents","esriObject","ourEventName","dojoName","layerEvents","151","cloneBuilder","graphic","Graphic","getLayer","getSymbol","graphicBuilder","symbolJsonUtils","fromJson","getGraphicsBuilder","graphicBundles","hilight","cloneLayerGraphic","_ret","geom","isSpatialRefEqual","localProjectGeometry","attributeBundle","symb","getGraphicSymbol","geomToGraphic","hilightBuilder","moveHilightToTop","hgl","_map","reorderLayer","graphicsLayerIds","hazeOpac","defaultSymbols","hazeOpacity","GraphicsLayer","addPin","pin","setGeometry","addHilight","_hilightGraphics","hazeJson","hazeGraphic","expand","haze","clearHilight","dojoShape","getShape","moveToBack","moveToFront","makeHilightLayer","getUnboundGraphics","./defaultHilightSymbols.json","152","initAll","debug","api","mapManager","mapPrint","esriLoaderUrl","makeDojoRequests","esriDeps","deps","oScript","oHead","./attribute.js","./basemap.js","./events.js","./hilight.js","./layer.js","./legend.js","./mapManager.js","./mapPrint.js","./proj.js","./query.js","./symbology.js","153","_defineProperty","configurable","writable","isServerFile","lowUrl","tests","some","getServerFile","srvResult","makeInfo","serviceType","makeLayerInfo","info","makeFileInfo","fileData","crawlEsriService","srvJson","mapper","Feature Layer","FeatureLayer","Raster Layer","RasterLayer","Group Layer","GroupLayer","Unknown","singleFusedMapCache","TileService","DynamicService","FeatureService","ImageService","pokeEsriService","hint","srvHandler","smartDefaults","primary","resultType","pokeFile","fileHandler","CSV","GeoJSON","Shapefile","guessType","pokeWms","WMS","predictLayerUrlBuilder","hintToFlavour","flavourToHandler","F_FILE","F_ESRI","F_WMS","infoFile","infoEsri","layerIdx","infoDynamic","groupIdx","arrayBufferToString","TextDecoder","validateGeoJson","geomMap","extractFields","formattedData","validateCSV","csvPeek","errorMessage","_ret2","fc","rowArr","guessCSVfields","validateFile","_fileHandler","findCandidates","valueRegex","nameRegex","candidates","rowIndex","latValueRegex","longValueRegex","latNameRegex","longNameRegex","latCandidates","longCandidates","long","find","serverLayerIdentifyBuilder","identParams","IdentifyParameters","reqOpts","optProp","layerIds","visibleLayers","layerOption","LAYER_OPTION_ALL","tolerance","identify","IdentifyTask","execute","assignIds","emptyID","emptyObjID","ID_FILE","OBJECTID_FILE","projectionLookup","projModule","projCode","epsgLookup","getProjection","projDef","addProjection","makeGeoJsonLayerBuilder","targetWkid","srcProj","defaultRenderers","featureTypeToRenderer","sourceProjection","generateUUID","destProj","srcLookup","destLookup","buildLayer","projectGeojson","esriJson","featureSet","MODE_SNAPSHOT","SpatialReference","colour","makeCsvLayerBuilder","csvData","csvOpts","makeGeoJsonLayer","jsonLayer","parseRows","makeShapeLayerBuilder","shapeData","getFeatureInfoBuilder","objectId","layerObj","validateLatLong","ind1","ind2","ogc","ArcGISDynamicMapServiceLayer","ArcGISImageServiceLayer","ScreenPoint","Query","TileLayer","ArcGISTiledMapServiceLayer","LayerDrawingOptions","getFeatureInfo","makeCsvLayer","makeShapeLayer","serverLayerIdentify","predictLayerUrl","./defaultRenderers.json","./layer/bbox.js","./layer/ogc.js","shpjs","terraformer-arcgis-parser","154","bboxBuilder","apiRef","targetSr","projectedExtent","projectEsriExtent","makeBoundingBox","../defaultRenderers.json","155","wmsLayer","clickEvent","layerList","req","esriMap","getMap","srList","spatialReferences","CRS","screenPoint","J","STYLES","FORMAT","imageFormat","yxList","BBOX","ymin","xmin","ymax","xmax","SRS","SERVICE","REQUEST","VERSION","WIDTH","HEIGHT","QUERY_LAYERS","LAYERS","INFO_FORMAT","parseCapabilitiesBuilder","dojoQuery","wmsEndpoint","getImmediateChild","childName","getLayers","xmlNode","nameNode","titleNode","queryable","getCapabilities","reqPromise","queryTypes","crawlLayerInfos","urlMap","li","legendURL","subLayers","getLegendUrls","liMap","Map","WmsLayer","parseCapabilities","./reversedAxis.json","156","157","_toConsumableArray","arr2","allComb","maxTrue","maxFalse","assignLayerSplits","splitPoints","splitBefore","packLayersIntoExactSections","sections","potentialSplits","requiredSplits","permutations","bestHeight","MAX_VALUE","bestPerm","heights","perm","curSec","sectionsUsed","packLayersIntoOptimalSections","_packLayersIntoExactSections","splitLayer","splitCount","traverse","items","splitSizes","itemYMax","itemYOffset","headerHeight","splits","whiteSpace","findOptimalSplit","_splitLayer","minSplits","minWhiteSpace","stepCount","_splitLayer2","allocateLayersToSections","sectionsAvailable","mapHeight","bestSectionUsage","segments","curSectionsUsed","_loop","oldSegments","normalizedLayers","worstLayerIndex","newSegments","makeLegend","TOO_MANY_LAYERS","layersPerSection","158","_slicedToArray","sliceIterator","_n","_d","_e","_s","_i","Symbol","iterator","setupMap","basemaps","lbasemap","basemapCtrl","scalebar","scalebarCtrl","Scalebar","attachTo","scalebarUnit","overviewMap","enabled","overviewMapCtrl","destroy","OverviewMap","expandFactor","BasemapControl","OverviewMapControl","ScalebarControl","setProxy","proxyUrl","esriConfig","io","mapDefault","getExtentFromJson","extentJson","Extent","findClosestLOD","lods","diffs","lod","lodIdx","getNorthArrowAngle","pointB","localProjectPoint","pointA","dLon","bearing","toFixed","getScaleRatio","mapWidth","phy1","phy2","deltaPhy","deltaLambda","distance","clipExtentCoords","mid","mapMax","mapMin","enforceBoundary","maxExtent","newExtent","getHeight","getWidth","getCenter","_clipExtentCoords","_clipExtentCoords2","_clipExtentCoords3","_clipExtentCoords32","adjusted","159","generateServerImage","printTask","PrintTask","printParams","PrintParameters","printTemplate","PrintTemplate","layout","exportOptions","dpi","showAttribution","preserveScale","template","svgLayers","hideLayers","printPromise","convertImageToCanvas","showLayers","setVisibility","generateLocalCanvas","resizeSVGElement","targetSize","targetViewbox","originalSize","baseVal","_split","_split2","ovMinX","ovMinY","ovWidth","ovHeight","originalViewbox","svgNode","entries","XML_ATTRIBUTES","_ref","_ref2","originalOptions","generationPromise","outerHTML","useCORS","renderCallback","xmlns:xlink","printLocal","printServer","canvg-origin","160","teraProj","normalizeProj","realSR","grGeoJ","grEsri","localProjectExtent","i0","i1","interpolatedPoly","projConvert","transformed","xvals","yvals","foundProj","lookupPromise","projectEsriExtentBuilder","esriServiceBuilder","ProjectParameters","gsvc","GeometryService","outSR","project","projectedExtents","sr1","sr2","esriServerProject","graphicsUtils","terraformer-proj4js","161","queryGeometryBuilder","outSpatialReference","spatialRelationship","SPATIAL_REL_INTERSECTS","queryTask","QueryTask","featureLayer","queryFeatures","queryGeometry","162","getLayerTypeBuilder","random","conversionPromise","convertImagetoDataURL","imageUri","imageType","startsWith","loadingPromise","toDataURL","163","legendLookup","legendItemPromises","legItem","label","svgcode","SIMPLE","UNIQUE_VALUE","defaultLabel","defaultsvgcode","uniqueValueInfos","uvi","CLASS_BREAKS","classBreakInfos","cbi","searchRenderer","graphicKey","field1","field2","field3","defaultSymbol","gVal","lower","minValue","classMaxValue","CONTAINER_SIZE","getGraphicIcon","renderInfo","generateWMSSymbology","symbologyItem","symbologyPromise","svgDrawImage","loader","generatePlaceholderSymbology","CONTENT_IMAGE_SIZE","CONTAINER_CENTER","font-weight","symbolToLegend","makeStroke","overrides","DEFAULT_STROKE","fitInto","elementRbox","parseEsriColour","container","esriSimpleMarkerSimbol","esriSMSPath","esriSMSCircle","_ref3","esriSMSCross","_ref4","esriSMSX","_ref5","esriSMSTriangle","_ref6","esriSMSDiamond","_ref7","esriSMSSquare","_ref8","ESRI_DASH_MAPS","esriSLSSolid","esriSLSDash","esriSLSDashDot","esriSLSLongDashDotDot","esriSLSDot","esriSLSLongDash","esriSLSLongDashDot","esriSLSShortDash","esriSLSShortDashDot","esriSLSShortDashDotDot","esriSLSShortDot","esriSLSNull","linecap","linejoin","miterlimit","DEFAULT_OUTLINE","esriSFSFills","esriSFSSolid","symbolColour","esriSFSNull","esriSFSHorizontal","symbolStroke","cellSize","esriSFSVertical","esriSFSForwardDiagonal","esriSFSBackwardDiagonal","esriSFSCross","esriSFSDiagonalCross","symbolTypes","esriSMS","outlineColour","outlineStroke","dasharray","CONTENT_SIZE","esriSLS","lineColour","lineStroke","CONTENT_PADDING","esriCLS","esriSFS","symbolFill","esriTS","esriPFS","imageData","contentType","imageWidth","xscale","imageHeight","yscale","picturePromise","esriPMS","_ref9","scrapeListRenderer","childList","buildRendererToLegend","getMapServerLegend","mapServerLegendToRenderer","serverLegend","layerIndex","layerLegend","mapServerLegendToRendererAll","_ref10","layerRenders","buildMapServerToLocalLegend","mapServerUrl","serverLegendData","fakeRenderer","getZoomLevel","scaleLimit","currentLod","lowLod","highLod","mapServerToLocalLegend","svg.js"],"mappings":"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","file":"geoapi.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.geoapi = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\nvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n},{}],2:[function(_dereq_,module,exports){\n(function (global){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = _dereq_('base64-js')\nvar ieee754 = _dereq_('ieee754')\nvar isArray = _dereq_('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  function Bar () {}\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    arr.constructor = Bar\n    return arr.foo() === 42 && // typed array instances can be augmented\n        arr.constructor === Bar && // constructor can be set\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    this.length = 0\n    this.parent = undefined\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength\n    that = Buffer._augment(new Uint8Array(array))\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n} else {\n  // pre-set for values that may exist in the future\n  Buffer.prototype.length = undefined\n  Buffer.prototype.parent = undefined\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length))\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n    that._isBuffer = true\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` is deprecated\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` is deprecated\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"base64-js\":1,\"ieee754\":7,\"isarray\":3}],3:[function(_dereq_,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n},{}],4:[function(_dereq_,module,exports){\n/*\r\n * canvg.js - Javascript SVG parser and renderer on Canvas\r\n * MIT Licensed\r\n * Gabe Lerner (gabelerner@gmail.com)\r\n * http://code.google.com/p/canvg/\r\n *\r\n * Requires: rgbcolor.js - http://www.phpied.com/rgb-color-parser-in-javascript/\r\n */\r\n (function ( global, factory ) {\r\n\r\n\t'use strict';\r\n\r\n\t// export as AMD...\r\n\tif ( typeof define !== 'undefined' && define.amd ) {\r\n\t\tdefine('canvgModule', [ 'rgbcolor', 'stackblur' ], factory );\r\n\t}\r\n\r\n\t// ...or as browserify\r\n\telse if ( typeof module !== 'undefined' && module.exports ) {\r\n\t\tmodule.exports = factory( _dereq_( 'rgbcolor' ), _dereq_( 'stackblur' ) );\r\n\t}\r\n\r\n\tglobal.canvg = factory( global.RGBColor, global.stackBlur );\r\n\r\n}( typeof window !== 'undefined' ? window : this, function ( RGBColor, stackBlur ) {\r\n\r\n\t// canvg(target, s)\r\n\t// empty parameters: replace all 'svg' elements on page with 'canvas' elements\r\n\t// target: canvas element or the id of a canvas element\r\n\t// s: svg string, url to svg file, or xml document\r\n\t// opts: optional hash of options\r\n\t//\t\t ignoreMouse: true => ignore mouse events\r\n\t//\t\t ignoreAnimation: true => ignore animations\r\n\t//\t\t ignoreDimensions: true => does not try to resize canvas\r\n\t//\t\t ignoreClear: true => does not clear canvas\r\n\t//\t\t offsetX: int => draws at a x offset\r\n\t//\t\t offsetY: int => draws at a y offset\r\n\t//\t\t scaleWidth: int => scales horizontally to width\r\n\t//\t\t scaleHeight: int => scales vertically to height\r\n\t//\t\t renderCallback: function => will call the function after the first render is completed\r\n\t//\t\t forceRedraw: function => will call the function on every frame, if it returns true, will redraw\r\n\tvar canvg = function (target, s, opts) {\r\n\t\t// no parameters\r\n\t\tif (target == null && s == null && opts == null) {\r\n\t\t\tvar svgTags = document.querySelectorAll('svg');\r\n\t\t\tfor (var i=0; i<svgTags.length; i++) {\r\n\t\t\t\tvar svgTag = svgTags[i];\r\n\t\t\t\tvar c = document.createElement('canvas');\r\n\t\t\t\tc.width = svgTag.clientWidth;\r\n\t\t\t\tc.height = svgTag.clientHeight;\r\n\t\t\t\tsvgTag.parentNode.insertBefore(c, svgTag);\r\n\t\t\t\tsvgTag.parentNode.removeChild(svgTag);\r\n\t\t\t\tvar div = document.createElement('div');\r\n\t\t\t\tdiv.appendChild(svgTag);\r\n\t\t\t\tcanvg(c, div.innerHTML);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof target == 'string') {\r\n\t\t\ttarget = document.getElementById(target);\r\n\t\t}\r\n\r\n\t\t// store class on canvas\r\n\t\tif (target.svg != null) target.svg.stop();\r\n\t\tvar svg = build(opts || {});\r\n\t\t// on i.e. 8 for flash canvas, we can't assign the property so check for it\r\n\t\tif (!(target.childNodes.length == 1 && target.childNodes[0].nodeName == 'OBJECT')) target.svg = svg;\r\n\r\n\t\tvar ctx = target.getContext('2d');\r\n\t\tif (typeof s.documentElement != 'undefined') {\r\n\t\t\t// load from xml doc\r\n\t\t\tsvg.loadXmlDoc(ctx, s);\r\n\t\t}\r\n\t\telse if (s.substr(0,1) == '<') {\r\n\t\t\t// load from xml string\r\n\t\t\tsvg.loadXml(ctx, s);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// load from url\r\n\t\t\tsvg.load(ctx, s);\r\n\t\t}\r\n\t}\r\n\r\n\t// see https://developer.mozilla.org/en-US/docs/Web/API/Element.matches\r\n\tvar matchesSelector;\r\n\tif (typeof Element.prototype.matches != 'undefined') {\r\n\t\tmatchesSelector = function(node, selector) {\r\n\t\t\treturn node.matches(selector);\r\n\t\t};\r\n\t} else if (typeof Element.prototype.webkitMatchesSelector != 'undefined') {\r\n\t\tmatchesSelector = function(node, selector) {\r\n\t\t\treturn node.webkitMatchesSelector(selector);\r\n\t\t};\r\n\t} else if (typeof Element.prototype.mozMatchesSelector != 'undefined') {\r\n\t\tmatchesSelector = function(node, selector) {\r\n\t\t\treturn node.mozMatchesSelector(selector);\r\n\t\t};\r\n\t} else if (typeof Element.prototype.msMatchesSelector != 'undefined') {\r\n\t\tmatchesSelector = function(node, selector) {\r\n\t\t\treturn node.msMatchesSelector(selector);\r\n\t\t};\r\n\t} else if (typeof Element.prototype.oMatchesSelector != 'undefined') {\r\n\t\tmatchesSelector = function(node, selector) {\r\n\t\t\treturn node.oMatchesSelector(selector);\r\n\t\t};\r\n\t} else {\r\n\t\t// requires Sizzle: https://github.com/jquery/sizzle/wiki/Sizzle-Documentation\r\n\t\t// or jQuery: http://jquery.com/download/\r\n\t\t// or Zepto: http://zeptojs.com/#\r\n\t\t// without it, this is a ReferenceError\r\n\r\n\t\tif (typeof jQuery === 'function' || typeof Zepto === 'function') {\r\n\t\t\tmatchesSelector = function (node, selector) {\r\n\t\t\t\treturn $(node).is(selector);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (typeof matchesSelector === 'undefined') {\r\n\t\t\tmatchesSelector = Sizzle.matchesSelector;\r\n\t\t}\r\n\t}\r\n\r\n\t// slightly modified version of https://github.com/keeganstreet/specificity/blob/master/specificity.js\r\n\tvar attributeRegex = /(\\[[^\\]]+\\])/g;\r\n\tvar idRegex = /(#[^\\s\\+>~\\.\\[:]+)/g;\r\n\tvar classRegex = /(\\.[^\\s\\+>~\\.\\[:]+)/g;\r\n\tvar pseudoElementRegex = /(::[^\\s\\+>~\\.\\[:]+|:first-line|:first-letter|:before|:after)/gi;\r\n\tvar pseudoClassWithBracketsRegex = /(:[\\w-]+\\([^\\)]*\\))/gi;\r\n\tvar pseudoClassRegex = /(:[^\\s\\+>~\\.\\[:]+)/g;\r\n\tvar elementRegex = /([^\\s\\+>~\\.\\[:]+)/g;\r\n\tfunction getSelectorSpecificity(selector) {\r\n\t\tvar typeCount = [0, 0, 0];\r\n\t\tvar findMatch = function(regex, type) {\r\n\t\t\tvar matches = selector.match(regex);\r\n\t\t\tif (matches == null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttypeCount[type] += matches.length;\r\n\t\t\tselector = selector.replace(regex, ' ');\r\n\t\t};\r\n\r\n\t\tselector = selector.replace(/:not\\(([^\\)]*)\\)/g, '     $1 ');\r\n\t\tselector = selector.replace(/{[\\s\\S]*/gm, ' ');\r\n\t\tfindMatch(attributeRegex, 1);\r\n\t\tfindMatch(idRegex, 0);\r\n\t\tfindMatch(classRegex, 1);\r\n\t\tfindMatch(pseudoElementRegex, 2);\r\n\t\tfindMatch(pseudoClassWithBracketsRegex, 1);\r\n\t\tfindMatch(pseudoClassRegex, 1);\r\n\t\tselector = selector.replace(/[\\*\\s\\+>~]/g, ' ');\r\n\t\tselector = selector.replace(/[#\\.]/g, ' ');\r\n\t\tfindMatch(elementRegex, 2);\r\n\t\treturn typeCount.join('');\r\n\t}\r\n\r\n\tfunction build(opts) {\r\n\t\tvar svg = { opts: opts };\r\n\r\n\t\tsvg.FRAMERATE = 30;\r\n\t\tsvg.MAX_VIRTUAL_PIXELS = 30000;\r\n\r\n\t\tsvg.log = function(msg) {};\r\n\t\tif (svg.opts['log'] == true && typeof console != 'undefined') {\r\n\t\t\tsvg.log = function(msg) { console.log(msg); };\r\n\t\t};\r\n\r\n\t\t// globals\r\n\t\tsvg.init = function(ctx) {\r\n\t\t\tvar uniqueId = 0;\r\n\t\t\tsvg.UniqueId = function () { uniqueId++; return 'canvg' + uniqueId;\t};\r\n\t\t\tsvg.Definitions = {};\r\n\t\t\tsvg.Styles = {};\r\n\t\t\tsvg.StylesSpecificity = {};\r\n\t\t\tsvg.Animations = [];\r\n\t\t\tsvg.Images = [];\r\n\t\t\tsvg.ctx = ctx;\r\n\t\t\tsvg.ViewPort = new (function () {\r\n\t\t\t\tthis.viewPorts = [];\r\n\t\t\t\tthis.Clear = function() { this.viewPorts = []; }\r\n\t\t\t\tthis.SetCurrent = function(width, height) { this.viewPorts.push({ width: width, height: height }); }\r\n\t\t\t\tthis.RemoveCurrent = function() { this.viewPorts.pop(); }\r\n\t\t\t\tthis.Current = function() { return this.viewPorts[this.viewPorts.length - 1]; }\r\n\t\t\t\tthis.width = function() { return this.Current().width; }\r\n\t\t\t\tthis.height = function() { return this.Current().height; }\r\n\t\t\t\tthis.ComputeSize = function(d) {\r\n\t\t\t\t\tif (d != null && typeof d == 'number') return d;\r\n\t\t\t\t\tif (d == 'x') return this.width();\r\n\t\t\t\t\tif (d == 'y') return this.height();\r\n\t\t\t\t\treturn Math.sqrt(Math.pow(this.width(), 2) + Math.pow(this.height(), 2)) / Math.sqrt(2);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tsvg.init();\r\n\r\n\t\t// images loaded\r\n\t\tsvg.ImagesLoaded = function() {\r\n\t\t\tfor (var i=0; i<svg.Images.length; i++) {\r\n\t\t\t\tif (!svg.Images[i].loaded) return false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// trim\r\n\t\tsvg.trim = function(s) { return s.replace(/^\\s+|\\s+$/g, ''); }\r\n\r\n\t\t// compress spaces\r\n\t\tsvg.compressSpaces = function(s) { return s.replace(/[\\s\\r\\t\\n]+/gm,' '); }\r\n\r\n\t\t// ajax\r\n\t\tsvg.ajax = function(url) {\r\n\t\t\tvar AJAX;\r\n\t\t\tif(window.XMLHttpRequest){AJAX=new XMLHttpRequest();}\r\n\t\t\telse{AJAX=new ActiveXObject('Microsoft.XMLHTTP');}\r\n\t\t\tif(AJAX){\r\n\t\t\t   AJAX.open('GET',url,false);\r\n\t\t\t   AJAX.send(null);\r\n\t\t\t   return AJAX.responseText;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// parse xml\r\n\t\tsvg.parseXml = function(xml) {\r\n\t\t\tif (typeof Windows != 'undefined' && typeof Windows.Data != 'undefined' && typeof Windows.Data.Xml != 'undefined') {\r\n\t\t\t\tvar xmlDoc = new Windows.Data.Xml.Dom.XmlDocument();\r\n\t\t\t\tvar settings = new Windows.Data.Xml.Dom.XmlLoadSettings();\r\n\t\t\t\tsettings.prohibitDtd = false;\r\n\t\t\t\txmlDoc.loadXml(xml, settings);\r\n\t\t\t\treturn xmlDoc;\r\n\t\t\t}\r\n\t\t\telse if (window.DOMParser)\r\n\t\t\t{\r\n\t\t\t\tvar parser = new DOMParser();\r\n\t\t\t\treturn parser.parseFromString(xml, 'text/xml');\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\txml = xml.replace(/<!DOCTYPE svg[^>]*>/, '');\r\n\t\t\t\tvar xmlDoc = new ActiveXObject('Microsoft.XMLDOM');\r\n\t\t\t\txmlDoc.async = 'false';\r\n\t\t\t\txmlDoc.loadXML(xml);\r\n\t\t\t\treturn xmlDoc;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsvg.Property = function(name, value) {\r\n\t\t\tthis.name = name;\r\n\t\t\tthis.value = value;\r\n\t\t}\r\n\t\t\tsvg.Property.prototype.getValue = function() {\r\n\t\t\t\treturn this.value;\r\n\t\t\t}\r\n\r\n\t\t\tsvg.Property.prototype.hasValue = function() {\r\n\t\t\t\treturn (this.value != null && this.value !== '');\r\n\t\t\t}\r\n\r\n\t\t\t// return the numerical value of the property\r\n\t\t\tsvg.Property.prototype.numValue = function() {\r\n\t\t\t\tif (!this.hasValue()) return 0;\r\n\r\n\t\t\t\tvar n = parseFloat(this.value);\r\n\t\t\t\tif ((this.value + '').match(/%$/)) {\r\n\t\t\t\t\tn = n / 100.0;\r\n\t\t\t\t}\r\n\t\t\t\treturn n;\r\n\t\t\t}\r\n\r\n\t\t\tsvg.Property.prototype.valueOrDefault = function(def) {\r\n\t\t\t\tif (this.hasValue()) return this.value;\r\n\t\t\t\treturn def;\r\n\t\t\t}\r\n\r\n\t\t\tsvg.Property.prototype.numValueOrDefault = function(def) {\r\n\t\t\t\tif (this.hasValue()) return this.numValue();\r\n\t\t\t\treturn def;\r\n\t\t\t}\r\n\r\n\t\t\t// color extensions\r\n\t\t\t\t// augment the current color value with the opacity\r\n\t\t\t\tsvg.Property.prototype.addOpacity = function(opacityProp) {\r\n\t\t\t\t\tvar newValue = this.value;\r\n\t\t\t\t\tif (opacityProp.value != null && opacityProp.value != '' && typeof this.value == 'string') { // can only add opacity to colors, not patterns\r\n\t\t\t\t\t\tvar color = new RGBColor(this.value);\r\n\t\t\t\t\t\tif (color.ok) {\r\n\t\t\t\t\t\t\tnewValue = 'rgba(' + color.r + ', ' + color.g + ', ' + color.b + ', ' + opacityProp.numValue() + ')';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn new svg.Property(this.name, newValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t// definition extensions\r\n\t\t\t\t// get the definition from the definitions table\r\n\t\t\t\tsvg.Property.prototype.getDefinition = function() {\r\n\t\t\t\t\tvar name = this.value.match(/#([^\\)'\"]+)/);\r\n\t\t\t\t\tif (name) { name = name[1]; }\r\n\t\t\t\t\tif (!name) { name = this.value; }\r\n\t\t\t\t\treturn svg.Definitions[name];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsvg.Property.prototype.isUrlDefinition = function() {\r\n\t\t\t\t\treturn this.value.indexOf('url(') == 0\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsvg.Property.prototype.getFillStyleDefinition = function(e, opacityProp) {\r\n\t\t\t\t\tvar def = this.getDefinition();\r\n\r\n\t\t\t\t\t// gradient\r\n\t\t\t\t\tif (def != null && def.createGradient) {\r\n\t\t\t\t\t\treturn def.createGradient(svg.ctx, e, opacityProp);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// pattern\r\n\t\t\t\t\tif (def != null && def.createPattern) {\r\n\t\t\t\t\t\tif (def.getHrefAttribute().hasValue()) {\r\n\t\t\t\t\t\t\tvar pt = def.attribute('patternTransform');\r\n\t\t\t\t\t\t\tdef = def.getHrefAttribute().getDefinition();\r\n\t\t\t\t\t\t\tif (pt.hasValue()) { def.attribute('patternTransform', true).value = pt.value; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn def.createPattern(svg.ctx, e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t// length extensions\r\n\t\t\t\tsvg.Property.prototype.getDPI = function(viewPort) {\r\n\t\t\t\t\treturn 96.0; // TODO: compute?\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsvg.Property.prototype.getEM = function(viewPort) {\r\n\t\t\t\t\tvar em = 12;\r\n\r\n\t\t\t\t\tvar fontSize = new svg.Property('fontSize', svg.Font.Parse(svg.ctx.font).fontSize);\r\n\t\t\t\t\tif (fontSize.hasValue()) em = fontSize.toPixels(viewPort);\r\n\r\n\t\t\t\t\treturn em;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsvg.Property.prototype.getUnits = function() {\r\n\t\t\t\t\tvar s = this.value+'';\r\n\t\t\t\t\treturn s.replace(/[0-9\\.\\-]/g,'');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// get the length as pixels\r\n\t\t\t\tsvg.Property.prototype.toPixels = function(viewPort, processPercent) {\r\n\t\t\t\t\tif (!this.hasValue()) return 0;\r\n\t\t\t\t\tvar s = this.value+'';\r\n\t\t\t\t\tif (s.match(/em$/)) return this.numValue() * this.getEM(viewPort);\r\n\t\t\t\t\tif (s.match(/ex$/)) return this.numValue() * this.getEM(viewPort) / 2.0;\r\n\t\t\t\t\tif (s.match(/px$/)) return this.numValue();\r\n\t\t\t\t\tif (s.match(/pt$/)) return this.numValue() * this.getDPI(viewPort) * (1.0 / 72.0);\r\n\t\t\t\t\tif (s.match(/pc$/)) return this.numValue() * 15;\r\n\t\t\t\t\tif (s.match(/cm$/)) return this.numValue() * this.getDPI(viewPort) / 2.54;\r\n\t\t\t\t\tif (s.match(/mm$/)) return this.numValue() * this.getDPI(viewPort) / 25.4;\r\n\t\t\t\t\tif (s.match(/in$/)) return this.numValue() * this.getDPI(viewPort);\r\n\t\t\t\t\tif (s.match(/%$/)) return this.numValue() * svg.ViewPort.ComputeSize(viewPort);\r\n\t\t\t\t\tvar n = this.numValue();\r\n\t\t\t\t\tif (processPercent && n < 1.0) return n * svg.ViewPort.ComputeSize(viewPort);\r\n\t\t\t\t\treturn n;\r\n\t\t\t\t}\r\n\r\n\t\t\t// time extensions\r\n\t\t\t\t// get the time as milliseconds\r\n\t\t\t\tsvg.Property.prototype.toMilliseconds = function() {\r\n\t\t\t\t\tif (!this.hasValue()) return 0;\r\n\t\t\t\t\tvar s = this.value+'';\r\n\t\t\t\t\tif (s.match(/s$/)) return this.numValue() * 1000;\r\n\t\t\t\t\tif (s.match(/ms$/)) return this.numValue();\r\n\t\t\t\t\treturn this.numValue();\r\n\t\t\t\t}\r\n\r\n\t\t\t// angle extensions\r\n\t\t\t\t// get the angle as radians\r\n\t\t\t\tsvg.Property.prototype.toRadians = function() {\r\n\t\t\t\t\tif (!this.hasValue()) return 0;\r\n\t\t\t\t\tvar s = this.value+'';\r\n\t\t\t\t\tif (s.match(/deg$/)) return this.numValue() * (Math.PI / 180.0);\r\n\t\t\t\t\tif (s.match(/grad$/)) return this.numValue() * (Math.PI / 200.0);\r\n\t\t\t\t\tif (s.match(/rad$/)) return this.numValue();\r\n\t\t\t\t\treturn this.numValue() * (Math.PI / 180.0);\r\n\t\t\t\t}\r\n\r\n\t\t\t// text extensions\r\n\t\t\t\t// get the text baseline\r\n\t\t\t\tvar textBaselineMapping = {\r\n\t\t\t\t\t'baseline': 'alphabetic',\r\n\t\t\t\t\t'before-edge': 'top',\r\n\t\t\t\t\t'text-before-edge': 'top',\r\n\t\t\t\t\t'middle': 'middle',\r\n\t\t\t\t\t'central': 'middle',\r\n\t\t\t\t\t'after-edge': 'bottom',\r\n\t\t\t\t\t'text-after-edge': 'bottom',\r\n\t\t\t\t\t'ideographic': 'ideographic',\r\n\t\t\t\t\t'alphabetic': 'alphabetic',\r\n\t\t\t\t\t'hanging': 'hanging',\r\n\t\t\t\t\t'mathematical': 'alphabetic'\r\n\t\t\t\t};\r\n\t\t\t\tsvg.Property.prototype.toTextBaseline = function () {\r\n\t\t\t\t\tif (!this.hasValue()) return null;\r\n\t\t\t\t\treturn textBaselineMapping[this.value];\r\n\t\t\t\t}\r\n\r\n\t\t// fonts\r\n\t\tsvg.Font = new (function() {\r\n\t\t\tthis.Styles = 'normal|italic|oblique|inherit';\r\n\t\t\tthis.Variants = 'normal|small-caps|inherit';\r\n\t\t\tthis.Weights = 'normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit';\r\n\r\n\t\t\tthis.CreateFont = function(fontStyle, fontVariant, fontWeight, fontSize, fontFamily, inherit) {\r\n\t\t\t\tvar f = inherit != null ? this.Parse(inherit) : this.CreateFont('', '', '', '', '', svg.ctx.font);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tfontFamily: fontFamily || f.fontFamily,\r\n\t\t\t\t\tfontSize: fontSize || f.fontSize,\r\n\t\t\t\t\tfontStyle: fontStyle || f.fontStyle,\r\n\t\t\t\t\tfontWeight: fontWeight || f.fontWeight,\r\n\t\t\t\t\tfontVariant: fontVariant || f.fontVariant,\r\n\t\t\t\t\ttoString: function () { return [this.fontStyle, this.fontVariant, this.fontWeight, this.fontSize, this.fontFamily].join(' ') }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar that = this;\r\n\t\t\tthis.Parse = function(s) {\r\n\t\t\t\tvar f = {};\r\n\t\t\t\tvar d = svg.trim(svg.compressSpaces(s || '')).split(' ');\r\n\t\t\t\tvar set = { fontSize: false, fontStyle: false, fontWeight: false, fontVariant: false }\r\n\t\t\t\tvar ff = '';\r\n\t\t\t\tfor (var i=0; i<d.length; i++) {\r\n\t\t\t\t\tif (!set.fontStyle && that.Styles.indexOf(d[i]) != -1) { if (d[i] != 'inherit') f.fontStyle = d[i]; set.fontStyle = true; }\r\n\t\t\t\t\telse if (!set.fontVariant && that.Variants.indexOf(d[i]) != -1) { if (d[i] != 'inherit') f.fontVariant = d[i]; set.fontStyle = set.fontVariant = true;\t}\r\n\t\t\t\t\telse if (!set.fontWeight && that.Weights.indexOf(d[i]) != -1) {\tif (d[i] != 'inherit') f.fontWeight = d[i]; set.fontStyle = set.fontVariant = set.fontWeight = true; }\r\n\t\t\t\t\telse if (!set.fontSize) { if (d[i] != 'inherit') f.fontSize = d[i].split('/')[0]; set.fontStyle = set.fontVariant = set.fontWeight = set.fontSize = true; }\r\n\t\t\t\t\telse { if (d[i] != 'inherit') ff += d[i]; }\r\n\t\t\t\t} if (ff != '') f.fontFamily = ff;\r\n\t\t\t\treturn f;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// points and paths\r\n\t\tsvg.ToNumberArray = function(s) {\r\n\t\t\tvar a = svg.trim(svg.compressSpaces((s || '').replace(/,/g, ' '))).split(' ');\r\n\t\t\tfor (var i=0; i<a.length; i++) {\r\n\t\t\t\ta[i] = parseFloat(a[i]);\r\n\t\t\t}\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tsvg.Point = function(x, y) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t}\r\n\t\t\tsvg.Point.prototype.angleTo = function(p) {\r\n\t\t\t\treturn Math.atan2(p.y - this.y, p.x - this.x);\r\n\t\t\t}\r\n\r\n\t\t\tsvg.Point.prototype.applyTransform = function(v) {\r\n\t\t\t\tvar xp = this.x * v[0] + this.y * v[2] + v[4];\r\n\t\t\t\tvar yp = this.x * v[1] + this.y * v[3] + v[5];\r\n\t\t\t\tthis.x = xp;\r\n\t\t\t\tthis.y = yp;\r\n\t\t\t}\r\n\r\n\t\tsvg.CreatePoint = function(s) {\r\n\t\t\tvar a = svg.ToNumberArray(s);\r\n\t\t\treturn new svg.Point(a[0], a[1]);\r\n\t\t}\r\n\t\tsvg.CreatePath = function(s) {\r\n\t\t\tvar a = svg.ToNumberArray(s);\r\n\t\t\tvar path = [];\r\n\t\t\tfor (var i=0; i<a.length; i+=2) {\r\n\t\t\t\tpath.push(new svg.Point(a[i], a[i+1]));\r\n\t\t\t}\r\n\t\t\treturn path;\r\n\t\t}\r\n\r\n\t\t// bounding box\r\n\t\tsvg.BoundingBox = function(x1, y1, x2, y2) { // pass in initial points if you want\r\n\t\t\tthis.x1 = Number.NaN;\r\n\t\t\tthis.y1 = Number.NaN;\r\n\t\t\tthis.x2 = Number.NaN;\r\n\t\t\tthis.y2 = Number.NaN;\r\n\r\n\t\t\tthis.x = function() { return this.x1; }\r\n\t\t\tthis.y = function() { return this.y1; }\r\n\t\t\tthis.width = function() { return this.x2 - this.x1; }\r\n\t\t\tthis.height = function() { return this.y2 - this.y1; }\r\n\r\n\t\t\tthis.addPoint = function(x, y) {\r\n\t\t\t\tif (x != null) {\r\n\t\t\t\t\tif (isNaN(this.x1) || isNaN(this.x2)) {\r\n\t\t\t\t\t\tthis.x1 = x;\r\n\t\t\t\t\t\tthis.x2 = x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (x < this.x1) this.x1 = x;\r\n\t\t\t\t\tif (x > this.x2) this.x2 = x;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (y != null) {\r\n\t\t\t\t\tif (isNaN(this.y1) || isNaN(this.y2)) {\r\n\t\t\t\t\t\tthis.y1 = y;\r\n\t\t\t\t\t\tthis.y2 = y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (y < this.y1) this.y1 = y;\r\n\t\t\t\t\tif (y > this.y2) this.y2 = y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.addX = function(x) { this.addPoint(x, null); }\r\n\t\t\tthis.addY = function(y) { this.addPoint(null, y); }\r\n\r\n\t\t\tthis.addBoundingBox = function(bb) {\r\n\t\t\t\tthis.addPoint(bb.x1, bb.y1);\r\n\t\t\t\tthis.addPoint(bb.x2, bb.y2);\r\n\t\t\t}\r\n\r\n\t\t\tthis.addQuadraticCurve = function(p0x, p0y, p1x, p1y, p2x, p2y) {\r\n\t\t\t\tvar cp1x = p0x + 2/3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\r\n\t\t\t\tvar cp1y = p0y + 2/3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\r\n\t\t\t\tvar cp2x = cp1x + 1/3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\r\n\t\t\t\tvar cp2y = cp1y + 1/3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\r\n\t\t\t\tthis.addBezierCurve(p0x, p0y, cp1x, cp2x, cp1y,\tcp2y, p2x, p2y);\r\n\t\t\t}\r\n\r\n\t\t\tthis.addBezierCurve = function(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\r\n\t\t\t\t// from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\r\n\t\t\t\tvar p0 = [p0x, p0y], p1 = [p1x, p1y], p2 = [p2x, p2y], p3 = [p3x, p3y];\r\n\t\t\t\tthis.addPoint(p0[0], p0[1]);\r\n\t\t\t\tthis.addPoint(p3[0], p3[1]);\r\n\r\n\t\t\t\tfor (i=0; i<=1; i++) {\r\n\t\t\t\t\tvar f = function(t) {\r\n\t\t\t\t\t\treturn Math.pow(1-t, 3) * p0[i]\r\n\t\t\t\t\t\t+ 3 * Math.pow(1-t, 2) * t * p1[i]\r\n\t\t\t\t\t\t+ 3 * (1-t) * Math.pow(t, 2) * p2[i]\r\n\t\t\t\t\t\t+ Math.pow(t, 3) * p3[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n\t\t\t\t\tvar a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n\t\t\t\t\tvar c = 3 * p1[i] - 3 * p0[i];\r\n\r\n\t\t\t\t\tif (a == 0) {\r\n\t\t\t\t\t\tif (b == 0) continue;\r\n\t\t\t\t\t\tvar t = -c / b;\r\n\t\t\t\t\t\tif (0 < t && t < 1) {\r\n\t\t\t\t\t\t\tif (i == 0) this.addX(f(t));\r\n\t\t\t\t\t\t\tif (i == 1) this.addY(f(t));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar b2ac = Math.pow(b, 2) - 4 * c * a;\r\n\t\t\t\t\tif (b2ac < 0) continue;\r\n\t\t\t\t\tvar t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\r\n\t\t\t\t\tif (0 < t1 && t1 < 1) {\r\n\t\t\t\t\t\tif (i == 0) this.addX(f(t1));\r\n\t\t\t\t\t\tif (i == 1) this.addY(f(t1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\r\n\t\t\t\t\tif (0 < t2 && t2 < 1) {\r\n\t\t\t\t\t\tif (i == 0) this.addX(f(t2));\r\n\t\t\t\t\t\tif (i == 1) this.addY(f(t2));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.isPointInBox = function(x, y) {\r\n\t\t\t\treturn (this.x1 <= x && x <= this.x2 && this.y1 <= y && y <= this.y2);\r\n\t\t\t}\r\n\r\n\t\t\tthis.addPoint(x1, y1);\r\n\t\t\tthis.addPoint(x2, y2);\r\n\t\t}\r\n\r\n\t\t// transforms\r\n\t\tsvg.Transform = function(v) {\r\n\t\t\tvar that = this;\r\n\t\t\tthis.Type = {}\r\n\r\n\t\t\t// translate\r\n\t\t\tthis.Type.translate = function(s) {\r\n\t\t\t\tthis.p = svg.CreatePoint(s);\r\n\t\t\t\tthis.apply = function(ctx) {\r\n\t\t\t\t\tctx.translate(this.p.x || 0.0, this.p.y || 0.0);\r\n\t\t\t\t}\r\n\t\t\t\tthis.unapply = function(ctx) {\r\n\t\t\t\t\tctx.translate(-1.0 * this.p.x || 0.0, -1.0 * this.p.y || 0.0);\r\n\t\t\t\t}\r\n\t\t\t\tthis.applyToPoint = function(p) {\r\n\t\t\t\t\tp.applyTransform([1, 0, 0, 1, this.p.x || 0.0, this.p.y || 0.0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// rotate\r\n\t\t\tthis.Type.rotate = function(s) {\r\n\t\t\t\tvar a = svg.ToNumberArray(s);\r\n\t\t\t\tthis.angle = new svg.Property('angle', a[0]);\r\n\t\t\t\tthis.cx = a[1] || 0;\r\n\t\t\t\tthis.cy = a[2] || 0;\r\n\t\t\t\tthis.apply = function(ctx) {\r\n\t\t\t\t\tctx.translate(this.cx, this.cy);\r\n\t\t\t\t\tctx.rotate(this.angle.toRadians());\r\n\t\t\t\t\tctx.translate(-this.cx, -this.cy);\r\n\t\t\t\t}\r\n\t\t\t\tthis.unapply = function(ctx) {\r\n\t\t\t\t\tctx.translate(this.cx, this.cy);\r\n\t\t\t\t\tctx.rotate(-1.0 * this.angle.toRadians());\r\n\t\t\t\t\tctx.translate(-this.cx, -this.cy);\r\n\t\t\t\t}\r\n\t\t\t\tthis.applyToPoint = function(p) {\r\n\t\t\t\t\tvar a = this.angle.toRadians();\r\n\t\t\t\t\tp.applyTransform([1, 0, 0, 1, this.p.x || 0.0, this.p.y || 0.0]);\r\n\t\t\t\t\tp.applyTransform([Math.cos(a), Math.sin(a), -Math.sin(a), Math.cos(a), 0, 0]);\r\n\t\t\t\t\tp.applyTransform([1, 0, 0, 1, -this.p.x || 0.0, -this.p.y || 0.0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.Type.scale = function(s) {\r\n\t\t\t\tthis.p = svg.CreatePoint(s);\r\n\t\t\t\tthis.apply = function(ctx) {\r\n\t\t\t\t\tctx.scale(this.p.x || 1.0, this.p.y || this.p.x || 1.0);\r\n\t\t\t\t}\r\n\t\t\t\tthis.unapply = function(ctx) {\r\n\t\t\t\t\tctx.scale(1.0 / this.p.x || 1.0, 1.0 / this.p.y || this.p.x || 1.0);\r\n\t\t\t\t}\r\n\t\t\t\tthis.applyToPoint = function(p) {\r\n\t\t\t\t\tp.applyTransform([this.p.x || 0.0, 0, 0, this.p.y || 0.0, 0, 0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.Type.matrix = function(s) {\r\n\t\t\t\tthis.m = svg.ToNumberArray(s);\r\n\t\t\t\tthis.apply = function(ctx) {\r\n\t\t\t\t\tctx.transform(this.m[0], this.m[1], this.m[2], this.m[3], this.m[4], this.m[5]);\r\n\t\t\t\t}\r\n\t\t\t\tthis.unapply = function(ctx) {\r\n\t\t\t\t\tvar a = this.m[0];\r\n\t\t\t\t\tvar b = this.m[2];\r\n\t\t\t\t\tvar c = this.m[4];\r\n\t\t\t\t\tvar d = this.m[1];\r\n\t\t\t\t\tvar e = this.m[3];\r\n\t\t\t\t\tvar f = this.m[5];\r\n\t\t\t\t\tvar g = 0.0;\r\n\t\t\t\t\tvar h = 0.0;\r\n\t\t\t\t\tvar i = 1.0;\r\n\t\t\t\t\tvar det = 1 / (a*(e*i-f*h)-b*(d*i-f*g)+c*(d*h-e*g));\r\n\t\t\t\t\tctx.transform(\r\n\t\t\t\t\t\tdet*(e*i-f*h),\r\n\t\t\t\t\t\tdet*(f*g-d*i),\r\n\t\t\t\t\t\tdet*(c*h-b*i),\r\n\t\t\t\t\t\tdet*(a*i-c*g),\r\n\t\t\t\t\t\tdet*(b*f-c*e),\r\n\t\t\t\t\t\tdet*(c*d-a*f)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tthis.applyToPoint = function(p) {\r\n\t\t\t\t\tp.applyTransform(this.m);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.Type.SkewBase = function(s) {\r\n\t\t\t\tthis.base = that.Type.matrix;\r\n\t\t\t\tthis.base(s);\r\n\t\t\t\tthis.angle = new svg.Property('angle', s);\r\n\t\t\t}\r\n\t\t\tthis.Type.SkewBase.prototype = new this.Type.matrix;\r\n\r\n\t\t\tthis.Type.skewX = function(s) {\r\n\t\t\t\tthis.base = that.Type.SkewBase;\r\n\t\t\t\tthis.base(s);\r\n\t\t\t\tthis.m = [1, 0, Math.tan(this.angle.toRadians()), 1, 0, 0];\r\n\t\t\t}\r\n\t\t\tthis.Type.skewX.prototype = new this.Type.SkewBase;\r\n\r\n\t\t\tthis.Type.skewY = function(s) {\r\n\t\t\t\tthis.base = that.Type.SkewBase;\r\n\t\t\t\tthis.base(s);\r\n\t\t\t\tthis.m = [1, Math.tan(this.angle.toRadians()), 0, 1, 0, 0];\r\n\t\t\t}\r\n\t\t\tthis.Type.skewY.prototype = new this.Type.SkewBase;\r\n\r\n\t\t\tthis.transforms = [];\r\n\r\n\t\t\tthis.apply = function(ctx) {\r\n\t\t\t\tfor (var i=0; i<this.transforms.length; i++) {\r\n\t\t\t\t\tthis.transforms[i].apply(ctx);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.unapply = function(ctx) {\r\n\t\t\t\tfor (var i=this.transforms.length-1; i>=0; i--) {\r\n\t\t\t\t\tthis.transforms[i].unapply(ctx);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.applyToPoint = function(p) {\r\n\t\t\t\tfor (var i=0; i<this.transforms.length; i++) {\r\n\t\t\t\t\tthis.transforms[i].applyToPoint(p);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar data = svg.trim(svg.compressSpaces(v)).replace(/\\)([a-zA-Z])/g, ') $1').replace(/\\)(\\s?,\\s?)/g,') ').split(/\\s(?=[a-z])/);\r\n\t\t\tfor (var i=0; i<data.length; i++) {\r\n\t\t\t\tvar type = svg.trim(data[i].split('(')[0]);\r\n\t\t\t\tvar s = data[i].split('(')[1].replace(')','');\r\n\t\t\t\tvar transformType = this.Type[type];\r\n\t\t\t\tif (typeof transformType != 'undefined') {\r\n\t\t\t\t\tvar transform = new transformType(s);\r\n\t\t\t\t\ttransform.type = type;\r\n\t\t\t\t\tthis.transforms.push(transform);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// aspect ratio\r\n\t\tsvg.AspectRatio = function(ctx, aspectRatio, width, desiredWidth, height, desiredHeight, minX, minY, refX, refY) {\r\n\t\t\t// aspect ratio - http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\r\n\t\t\taspectRatio = svg.compressSpaces(aspectRatio);\r\n\t\t\taspectRatio = aspectRatio.replace(/^defer\\s/,''); // ignore defer\r\n\t\t\tvar align = aspectRatio.split(' ')[0] || 'xMidYMid';\r\n\t\t\tvar meetOrSlice = aspectRatio.split(' ')[1] || 'meet';\r\n\r\n\t\t\t// calculate scale\r\n\t\t\tvar scaleX = width / desiredWidth;\r\n\t\t\tvar scaleY = height / desiredHeight;\r\n\t\t\tvar scaleMin = Math.min(scaleX, scaleY);\r\n\t\t\tvar scaleMax = Math.max(scaleX, scaleY);\r\n\t\t\tif (meetOrSlice == 'meet') { desiredWidth *= scaleMin; desiredHeight *= scaleMin; }\r\n\t\t\tif (meetOrSlice == 'slice') { desiredWidth *= scaleMax; desiredHeight *= scaleMax; }\r\n\r\n\t\t\trefX = new svg.Property('refX', refX);\r\n\t\t\trefY = new svg.Property('refY', refY);\r\n\t\t\tif (refX.hasValue() && refY.hasValue()) {\r\n\t\t\t\tctx.translate(-scaleMin * refX.toPixels('x'), -scaleMin * refY.toPixels('y'));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// align\r\n\t\t\t\tif (align.match(/^xMid/) && ((meetOrSlice == 'meet' && scaleMin == scaleY) || (meetOrSlice == 'slice' && scaleMax == scaleY))) ctx.translate(width / 2.0 - desiredWidth / 2.0, 0);\r\n\t\t\t\tif (align.match(/YMid$/) && ((meetOrSlice == 'meet' && scaleMin == scaleX) || (meetOrSlice == 'slice' && scaleMax == scaleX))) ctx.translate(0, height / 2.0 - desiredHeight / 2.0);\r\n\t\t\t\tif (align.match(/^xMax/) && ((meetOrSlice == 'meet' && scaleMin == scaleY) || (meetOrSlice == 'slice' && scaleMax == scaleY))) ctx.translate(width - desiredWidth, 0);\r\n\t\t\t\tif (align.match(/YMax$/) && ((meetOrSlice == 'meet' && scaleMin == scaleX) || (meetOrSlice == 'slice' && scaleMax == scaleX))) ctx.translate(0, height - desiredHeight);\r\n\t\t\t}\r\n\r\n\t\t\t// scale\r\n\t\t\tif (align == 'none') ctx.scale(scaleX, scaleY);\r\n\t\t\telse if (meetOrSlice == 'meet') ctx.scale(scaleMin, scaleMin);\r\n\t\t\telse if (meetOrSlice == 'slice') ctx.scale(scaleMax, scaleMax);\r\n\r\n\t\t\t// translate\r\n\t\t\tctx.translate(minX == null ? 0 : -minX, minY == null ? 0 : -minY);\r\n\t\t}\r\n\r\n\t\t// elements\r\n\t\tsvg.Element = {}\r\n\r\n\t\tsvg.EmptyProperty = new svg.Property('EMPTY', '');\r\n\r\n\t\tsvg.Element.ElementBase = function(node) {\r\n\t\t\tthis.attributes = {};\r\n\t\t\tthis.styles = {};\r\n\t\t\tthis.stylesSpecificity = {};\r\n\t\t\tthis.children = [];\r\n\r\n\t\t\t// get or create attribute\r\n\t\t\tthis.attribute = function(name, createIfNotExists) {\r\n\t\t\t\tvar a = this.attributes[name];\r\n\t\t\t\tif (a != null) return a;\r\n\r\n\t\t\t\tif (createIfNotExists == true) { a = new svg.Property(name, ''); this.attributes[name] = a; }\r\n\t\t\t\treturn a || svg.EmptyProperty;\r\n\t\t\t}\r\n\r\n\t\t\tthis.getHrefAttribute = function() {\r\n\t\t\t\tfor (var a in this.attributes) {\r\n\t\t\t\t\tif (a == 'href' || a.match(/:href$/)) {\r\n\t\t\t\t\t\treturn this.attributes[a];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn svg.EmptyProperty;\r\n\t\t\t}\r\n\r\n\t\t\t// get or create style, crawls up node tree\r\n\t\t\tthis.style = function(name, createIfNotExists, skipAncestors) {\r\n\t\t\t\tvar s = this.styles[name];\r\n\t\t\t\tif (s != null) return s;\r\n\r\n\t\t\t\tvar a = this.attribute(name);\r\n\t\t\t\tif (a != null && a.hasValue()) {\r\n\t\t\t\t\tthis.styles[name] = a; // move up to me to cache\r\n\t\t\t\t\treturn a;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (skipAncestors != true) {\r\n\t\t\t\t\tvar p = this.parent;\r\n\t\t\t\t\tif (p != null) {\r\n\t\t\t\t\t\tvar ps = p.style(name);\r\n\t\t\t\t\t\tif (ps != null && ps.hasValue()) {\r\n\t\t\t\t\t\t\treturn ps;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (createIfNotExists == true) { s = new svg.Property(name, ''); this.styles[name] = s; }\r\n\t\t\t\treturn s || svg.EmptyProperty;\r\n\t\t\t}\r\n\r\n\t\t\t// base render\r\n\t\t\tthis.render = function(ctx) {\r\n\t\t\t\t// don't render display=none\r\n\t\t\t\tif (this.style('display').value == 'none') return;\r\n\r\n\t\t\t\t// don't render visibility=hidden\r\n\t\t\t\tif (this.style('visibility').value == 'hidden') return;\r\n\r\n\t\t\t\tctx.save();\r\n\t\t\t\tif (this.style('mask').hasValue()) { // mask\r\n\t\t\t\t\tvar mask = this.style('mask').getDefinition();\r\n\t\t\t\t\tif (mask != null) mask.apply(ctx, this);\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.style('filter').hasValue()) { // filter\r\n\t\t\t\t\tvar filter = this.style('filter').getDefinition();\r\n\t\t\t\t\tif (filter != null) filter.apply(ctx, this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.setContext(ctx);\r\n\t\t\t\t\tthis.renderChildren(ctx);\r\n\t\t\t\t\tthis.clearContext(ctx);\r\n\t\t\t\t}\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\r\n\t\t\t// base set context\r\n\t\t\tthis.setContext = function(ctx) {\r\n\t\t\t\t// OVERRIDE ME!\r\n\t\t\t}\r\n\r\n\t\t\t// base clear context\r\n\t\t\tthis.clearContext = function(ctx) {\r\n\t\t\t\t// OVERRIDE ME!\r\n\t\t\t}\r\n\r\n\t\t\t// base render children\r\n\t\t\tthis.renderChildren = function(ctx) {\r\n\t\t\t\tfor (var i=0; i<this.children.length; i++) {\r\n\t\t\t\t\tthis.children[i].render(ctx);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.addChild = function(childNode, create) {\r\n\t\t\t\tvar child = childNode;\r\n\t\t\t\tif (create) child = svg.CreateElement(childNode);\r\n\t\t\t\tchild.parent = this;\r\n\t\t\t\tif (child.type != 'title') { this.children.push(child);\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.addStylesFromStyleDefinition = function () {\r\n\t\t\t\t// add styles\r\n\t\t\t\tfor (var selector in svg.Styles) {\r\n\t\t\t\t\tif (selector[0] != '@' && matchesSelector(node, selector)) {\r\n\t\t\t\t\t\tvar styles = svg.Styles[selector];\r\n\t\t\t\t\t\tvar specificity = svg.StylesSpecificity[selector];\r\n\t\t\t\t\t\tif (styles != null) {\r\n\t\t\t\t\t\t\tfor (var name in styles) {\r\n\t\t\t\t\t\t\t\tvar existingSpecificity = this.stylesSpecificity[name];\r\n\t\t\t\t\t\t\t\tif (typeof existingSpecificity == 'undefined') {\r\n\t\t\t\t\t\t\t\t\texistingSpecificity = '000';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (specificity > existingSpecificity) {\r\n\t\t\t\t\t\t\t\t\tthis.styles[name] = styles[name];\r\n\t\t\t\t\t\t\t\t\tthis.stylesSpecificity[name] = specificity;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t// Microsoft Edge fix\r\n\t\t\tvar allUppercase = new RegExp(\"^[A-Z\\-]+$\");\r\n\t\t\tvar normalizeAttributeName = function (name) {\r\n\t\t\t\tif (allUppercase.test(name)) {\r\n\t\t\t\t\treturn name.toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t\treturn name;\r\n\t\t\t};\r\n\r\n\t\t\tif (node != null && node.nodeType == 1) { //ELEMENT_NODE\r\n\t\t\t\t// add attributes\r\n\t\t\t\tfor (var i=0; i<node.attributes.length; i++) {\r\n\t\t\t\t\tvar attribute = node.attributes[i];\r\n\t\t\t\t\tvar nodeName = normalizeAttributeName(attribute.nodeName);\r\n\t\t\t\t\tthis.attributes[nodeName] = new svg.Property(nodeName, attribute.value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.addStylesFromStyleDefinition();\r\n\r\n\t\t\t\t// add inline styles\r\n\t\t\t\tif (this.attribute('style').hasValue()) {\r\n\t\t\t\t\tvar styles = this.attribute('style').value.split(';');\r\n\t\t\t\t\tfor (var i=0; i<styles.length; i++) {\r\n\t\t\t\t\t\tif (svg.trim(styles[i]) != '') {\r\n\t\t\t\t\t\t\tvar style = styles[i].split(':');\r\n\t\t\t\t\t\t\tvar name = svg.trim(style[0]);\r\n\t\t\t\t\t\t\tvar value = svg.trim(style[1]);\r\n\t\t\t\t\t\t\tthis.styles[name] = new svg.Property(name, value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// add id\r\n\t\t\t\tif (this.attribute('id').hasValue()) {\r\n\t\t\t\t\tif (svg.Definitions[this.attribute('id').value] == null) {\r\n\t\t\t\t\t\tsvg.Definitions[this.attribute('id').value] = this;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// add children\r\n\t\t\t\tfor (var i=0; i<node.childNodes.length; i++) {\r\n\t\t\t\t\tvar childNode = node.childNodes[i];\r\n\t\t\t\t\tif (childNode.nodeType == 1) this.addChild(childNode, true); //ELEMENT_NODE\r\n\t\t\t\t\tif (this.captureTextNodes && (childNode.nodeType == 3 || childNode.nodeType == 4)) {\r\n\t\t\t\t\t\tvar text = childNode.value || childNode.text || childNode.textContent || '';\r\n\t\t\t\t\t\tif (svg.compressSpaces(text) != '') {\r\n\t\t\t\t\t\t\tthis.addChild(new svg.Element.tspan(childNode), false); // TEXT_NODE\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsvg.Element.RenderedElementBase = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.setContext = function(ctx) {\r\n\t\t\t\t// fill\r\n\t\t\t\tif (this.style('fill').isUrlDefinition()) {\r\n\t\t\t\t\tvar fs = this.style('fill').getFillStyleDefinition(this, this.style('fill-opacity'));\r\n\t\t\t\t\tif (fs != null) ctx.fillStyle = fs;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.style('fill').hasValue()) {\r\n\t\t\t\t\tvar fillStyle = this.style('fill');\r\n\t\t\t\t\tif (fillStyle.value == 'currentColor') fillStyle.value = this.style('color').value;\r\n\t\t\t\t\tif (fillStyle.value != 'inherit') ctx.fillStyle = (fillStyle.value == 'none' ? 'rgba(0,0,0,0)' : fillStyle.value);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.style('fill-opacity').hasValue()) {\r\n\t\t\t\t\tvar fillStyle = new svg.Property('fill', ctx.fillStyle);\r\n\t\t\t\t\tfillStyle = fillStyle.addOpacity(this.style('fill-opacity'));\r\n\t\t\t\t\tctx.fillStyle = fillStyle.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// stroke\r\n\t\t\t\tif (this.style('stroke').isUrlDefinition()) {\r\n\t\t\t\t\tvar fs = this.style('stroke').getFillStyleDefinition(this, this.style('stroke-opacity'));\r\n\t\t\t\t\tif (fs != null) ctx.strokeStyle = fs;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.style('stroke').hasValue()) {\r\n\t\t\t\t\tvar strokeStyle = this.style('stroke');\r\n\t\t\t\t\tif (strokeStyle.value == 'currentColor') strokeStyle.value = this.style('color').value;\r\n\t\t\t\t\tif (strokeStyle.value != 'inherit') ctx.strokeStyle = (strokeStyle.value == 'none' ? 'rgba(0,0,0,0)' : strokeStyle.value);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.style('stroke-opacity').hasValue()) {\r\n\t\t\t\t\tvar strokeStyle = new svg.Property('stroke', ctx.strokeStyle);\r\n\t\t\t\t\tstrokeStyle = strokeStyle.addOpacity(this.style('stroke-opacity'));\r\n\t\t\t\t\tctx.strokeStyle = strokeStyle.value;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.style('stroke-width').hasValue()) {\r\n\t\t\t\t\tvar newLineWidth = this.style('stroke-width').toPixels();\r\n\t\t\t\t\tctx.lineWidth = newLineWidth == 0 ? 0.001 : newLineWidth; // browsers don't respect 0\r\n\t\t\t    }\r\n\t\t\t\tif (this.style('stroke-linecap').hasValue()) ctx.lineCap = this.style('stroke-linecap').value;\r\n\t\t\t\tif (this.style('stroke-linejoin').hasValue()) ctx.lineJoin = this.style('stroke-linejoin').value;\r\n\t\t\t\tif (this.style('stroke-miterlimit').hasValue()) ctx.miterLimit = this.style('stroke-miterlimit').value;\r\n\t\t\t\tif (this.style('stroke-dasharray').hasValue() && this.style('stroke-dasharray').value != 'none') {\r\n\t\t\t\t\tvar gaps = svg.ToNumberArray(this.style('stroke-dasharray').value);\r\n\t\t\t\t\tif (typeof ctx.setLineDash != 'undefined') { ctx.setLineDash(gaps); }\r\n\t\t\t\t\telse if (typeof ctx.webkitLineDash != 'undefined') { ctx.webkitLineDash = gaps; }\r\n\t\t\t\t\telse if (typeof ctx.mozDash != 'undefined' && !(gaps.length==1 && gaps[0]==0)) { ctx.mozDash = gaps; }\r\n\r\n\t\t\t\t\tvar offset = this.style('stroke-dashoffset').numValueOrDefault(1);\r\n\t\t\t\t\tif (typeof ctx.lineDashOffset != 'undefined') { ctx.lineDashOffset = offset; }\r\n\t\t\t\t\telse if (typeof ctx.webkitLineDashOffset != 'undefined') { ctx.webkitLineDashOffset = offset; }\r\n\t\t\t\t\telse if (typeof ctx.mozDashOffset != 'undefined') { ctx.mozDashOffset = offset; }\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// font\r\n\t\t\t\tif (typeof ctx.font != 'undefined') {\r\n\t\t\t\t\tctx.font = svg.Font.CreateFont(\r\n\t\t\t\t\t\tthis.style('font-style').value,\r\n\t\t\t\t\t\tthis.style('font-variant').value,\r\n\t\t\t\t\t\tthis.style('font-weight').value,\r\n\t\t\t\t\t\tthis.style('font-size').hasValue() ? this.style('font-size').toPixels() + 'px' : '',\r\n\t\t\t\t\t\tthis.style('font-family').value).toString();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// transform\r\n\t\t\t\tif (this.style('transform', false, true).hasValue()) {\r\n\t\t\t\t\tvar transform = new svg.Transform(this.style('transform', false, true).value);\r\n\t\t\t\t\ttransform.apply(ctx);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// clip\r\n\t\t\t\tif (this.style('clip-path', false, true).hasValue()) {\r\n\t\t\t\t\tvar clip = this.style('clip-path', false, true).getDefinition();\r\n\t\t\t\t\tif (clip != null) clip.apply(ctx);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// opacity\r\n\t\t\t\tif (this.style('opacity').hasValue()) {\r\n\t\t\t\t\tctx.globalAlpha = this.style('opacity').numValue();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.RenderedElementBase.prototype = new svg.Element.ElementBase;\r\n\r\n\t\tsvg.Element.PathElementBase = function(node) {\r\n\t\t\tthis.base = svg.Element.RenderedElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.path = function(ctx) {\r\n\t\t\t\tif (ctx != null) ctx.beginPath();\r\n\t\t\t\treturn new svg.BoundingBox();\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderChildren = function(ctx) {\r\n\t\t\t\tthis.path(ctx);\r\n\t\t\t\tsvg.Mouse.checkPath(this, ctx);\r\n\t\t\t\tif (ctx.fillStyle != '') {\r\n\t\t\t\t\tif (this.style('fill-rule').valueOrDefault('inherit') != 'inherit') { ctx.fill(this.style('fill-rule').value); }\r\n\t\t\t\t\telse { ctx.fill(); }\r\n\t\t\t\t}\r\n\t\t\t\tif (ctx.strokeStyle != '') ctx.stroke();\r\n\r\n\t\t\t\tvar markers = this.getMarkers();\r\n\t\t\t\tif (markers != null) {\r\n\t\t\t\t\tif (this.style('marker-start').isUrlDefinition()) {\r\n\t\t\t\t\t\tvar marker = this.style('marker-start').getDefinition();\r\n\t\t\t\t\t\tmarker.render(ctx, markers[0][0], markers[0][1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.style('marker-mid').isUrlDefinition()) {\r\n\t\t\t\t\t\tvar marker = this.style('marker-mid').getDefinition();\r\n\t\t\t\t\t\tfor (var i=1;i<markers.length-1;i++) {\r\n\t\t\t\t\t\t\tmarker.render(ctx, markers[i][0], markers[i][1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.style('marker-end').isUrlDefinition()) {\r\n\t\t\t\t\t\tvar marker = this.style('marker-end').getDefinition();\r\n\t\t\t\t\t\tmarker.render(ctx, markers[markers.length-1][0], markers[markers.length-1][1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.getBoundingBox = function() {\r\n\t\t\t\treturn this.path();\r\n\t\t\t}\r\n\r\n\t\t\tthis.getMarkers = function() {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.PathElementBase.prototype = new svg.Element.RenderedElementBase;\r\n\r\n\t\t// svg element\r\n\t\tsvg.Element.svg = function(node) {\r\n\t\t\tthis.base = svg.Element.RenderedElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.baseClearContext = this.clearContext;\r\n\t\t\tthis.clearContext = function(ctx) {\r\n\t\t\t\tthis.baseClearContext(ctx);\r\n\t\t\t\tsvg.ViewPort.RemoveCurrent();\r\n\t\t\t}\r\n\r\n\t\t\tthis.baseSetContext = this.setContext;\r\n\t\t\tthis.setContext = function(ctx) {\r\n\t\t\t\t// initial values and defaults\r\n\t\t\t\tctx.strokeStyle = 'rgba(0,0,0,0)';\r\n\t\t\t\tctx.lineCap = 'butt';\r\n\t\t\t\tctx.lineJoin = 'miter';\r\n\t\t\t\tctx.miterLimit = 4;\r\n\t\t\t\tif (typeof ctx.font != 'undefined' && typeof window.getComputedStyle != 'undefined') {\r\n\t\t\t\t\tctx.font = window.getComputedStyle(ctx.canvas).getPropertyValue('font');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.baseSetContext(ctx);\r\n\r\n\t\t\t\t// create new view port\r\n\t\t\t\tif (!this.attribute('x').hasValue()) this.attribute('x', true).value = 0;\r\n\t\t\t\tif (!this.attribute('y').hasValue()) this.attribute('y', true).value = 0;\r\n\t\t\t\tctx.translate(this.attribute('x').toPixels('x'), this.attribute('y').toPixels('y'));\r\n\r\n\t\t\t\tvar width = svg.ViewPort.width();\r\n\t\t\t\tvar height = svg.ViewPort.height();\r\n\r\n\t\t\t\tif (!this.attribute('width').hasValue()) this.attribute('width', true).value = '100%';\r\n\t\t\t\tif (!this.attribute('height').hasValue()) this.attribute('height', true).value = '100%';\r\n\t\t\t\tif (typeof this.root == 'undefined') {\r\n\t\t\t\t\twidth = this.attribute('width').toPixels('x');\r\n\t\t\t\t\theight = this.attribute('height').toPixels('y');\r\n\r\n\t\t\t\t\tvar x = 0;\r\n\t\t\t\t\tvar y = 0;\r\n\t\t\t\t\tif (this.attribute('refX').hasValue() && this.attribute('refY').hasValue()) {\r\n\t\t\t\t\t\tx = -this.attribute('refX').toPixels('x');\r\n\t\t\t\t\t\ty = -this.attribute('refY').toPixels('y');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.attribute('overflow').valueOrDefault('hidden') != 'visible') {\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.moveTo(x, y);\r\n\t\t\t\t\t\tctx.lineTo(width, y);\r\n\t\t\t\t\t\tctx.lineTo(width, height);\r\n\t\t\t\t\t\tctx.lineTo(x, height);\r\n\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\tctx.clip();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsvg.ViewPort.SetCurrent(width, height);\r\n\r\n\t\t\t\t// viewbox\r\n\t\t\t\tif (this.attribute('viewBox').hasValue()) {\r\n\t\t\t\t\tvar viewBox = svg.ToNumberArray(this.attribute('viewBox').value);\r\n\t\t\t\t\tvar minX = viewBox[0];\r\n\t\t\t\t\tvar minY = viewBox[1];\r\n\t\t\t\t\twidth = viewBox[2];\r\n\t\t\t\t\theight = viewBox[3];\r\n\r\n\t\t\t\t\tsvg.AspectRatio(ctx,\r\n\t\t\t\t\t\t\t\t\tthis.attribute('preserveAspectRatio').value,\r\n\t\t\t\t\t\t\t\t\tsvg.ViewPort.width(),\r\n\t\t\t\t\t\t\t\t\twidth,\r\n\t\t\t\t\t\t\t\t\tsvg.ViewPort.height(),\r\n\t\t\t\t\t\t\t\t\theight,\r\n\t\t\t\t\t\t\t\t\tminX,\r\n\t\t\t\t\t\t\t\t\tminY,\r\n\t\t\t\t\t\t\t\t\tthis.attribute('refX').value,\r\n\t\t\t\t\t\t\t\t\tthis.attribute('refY').value);\r\n\r\n\t\t\t\t\tsvg.ViewPort.RemoveCurrent();\r\n\t\t\t\t\tsvg.ViewPort.SetCurrent(viewBox[2], viewBox[3]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.svg.prototype = new svg.Element.RenderedElementBase;\r\n\r\n\t\t// rect element\r\n\t\tsvg.Element.rect = function(node) {\r\n\t\t\tthis.base = svg.Element.PathElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.path = function(ctx) {\r\n\t\t\t\tvar x = this.attribute('x').toPixels('x');\r\n\t\t\t\tvar y = this.attribute('y').toPixels('y');\r\n\t\t\t\tvar width = this.attribute('width').toPixels('x');\r\n\t\t\t\tvar height = this.attribute('height').toPixels('y');\r\n\t\t\t\tvar rx = this.attribute('rx').toPixels('x');\r\n\t\t\t\tvar ry = this.attribute('ry').toPixels('y');\r\n\t\t\t\tif (this.attribute('rx').hasValue() && !this.attribute('ry').hasValue()) ry = rx;\r\n\t\t\t\tif (this.attribute('ry').hasValue() && !this.attribute('rx').hasValue()) rx = ry;\r\n\t\t\t\trx = Math.min(rx, width / 2.0);\r\n\t\t\t\try = Math.min(ry, height / 2.0);\r\n\t\t\t\tif (ctx != null) {\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x + rx, y);\r\n\t\t\t\t\tctx.lineTo(x + width - rx, y);\r\n\t\t\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry)\r\n\t\t\t\t\tctx.lineTo(x + width, y + height - ry);\r\n\t\t\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height)\r\n\t\t\t\t\tctx.lineTo(x + rx, y + height);\r\n\t\t\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry)\r\n\t\t\t\t\tctx.lineTo(x, y + ry);\r\n\t\t\t\t\tctx.quadraticCurveTo(x, y, x + rx, y)\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new svg.BoundingBox(x, y, x + width, y + height);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.rect.prototype = new svg.Element.PathElementBase;\r\n\r\n\t\t// circle element\r\n\t\tsvg.Element.circle = function(node) {\r\n\t\t\tthis.base = svg.Element.PathElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.path = function(ctx) {\r\n\t\t\t\tvar cx = this.attribute('cx').toPixels('x');\r\n\t\t\t\tvar cy = this.attribute('cy').toPixels('y');\r\n\t\t\t\tvar r = this.attribute('r').toPixels();\r\n\r\n\t\t\t\tif (ctx != null) {\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.arc(cx, cy, r, 0, Math.PI * 2, true);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new svg.BoundingBox(cx - r, cy - r, cx + r, cy + r);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.circle.prototype = new svg.Element.PathElementBase;\r\n\r\n\t\t// ellipse element\r\n\t\tsvg.Element.ellipse = function(node) {\r\n\t\t\tthis.base = svg.Element.PathElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.path = function(ctx) {\r\n\t\t\t\tvar KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);\r\n\t\t\t\tvar rx = this.attribute('rx').toPixels('x');\r\n\t\t\t\tvar ry = this.attribute('ry').toPixels('y');\r\n\t\t\t\tvar cx = this.attribute('cx').toPixels('x');\r\n\t\t\t\tvar cy = this.attribute('cy').toPixels('y');\r\n\r\n\t\t\t\tif (ctx != null) {\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(cx, cy - ry);\r\n\t\t\t\t\tctx.bezierCurveTo(cx + (KAPPA * rx), cy - ry,  cx + rx, cy - (KAPPA * ry), cx + rx, cy);\r\n\t\t\t\t\tctx.bezierCurveTo(cx + rx, cy + (KAPPA * ry), cx + (KAPPA * rx), cy + ry, cx, cy + ry);\r\n\t\t\t\t\tctx.bezierCurveTo(cx - (KAPPA * rx), cy + ry, cx - rx, cy + (KAPPA * ry), cx - rx, cy);\r\n\t\t\t\t\tctx.bezierCurveTo(cx - rx, cy - (KAPPA * ry), cx - (KAPPA * rx), cy - ry, cx, cy - ry);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new svg.BoundingBox(cx - rx, cy - ry, cx + rx, cy + ry);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.ellipse.prototype = new svg.Element.PathElementBase;\r\n\r\n\t\t// line element\r\n\t\tsvg.Element.line = function(node) {\r\n\t\t\tthis.base = svg.Element.PathElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.getPoints = function() {\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew svg.Point(this.attribute('x1').toPixels('x'), this.attribute('y1').toPixels('y')),\r\n\t\t\t\t\tnew svg.Point(this.attribute('x2').toPixels('x'), this.attribute('y2').toPixels('y'))];\r\n\t\t\t}\r\n\r\n\t\t\tthis.path = function(ctx) {\r\n\t\t\t\tvar points = this.getPoints();\r\n\r\n\t\t\t\tif (ctx != null) {\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(points[0].x, points[0].y);\r\n\t\t\t\t\tctx.lineTo(points[1].x, points[1].y);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new svg.BoundingBox(points[0].x, points[0].y, points[1].x, points[1].y);\r\n\t\t\t}\r\n\r\n\t\t\tthis.getMarkers = function() {\r\n\t\t\t\tvar points = this.getPoints();\r\n\t\t\t\tvar a = points[0].angleTo(points[1]);\r\n\t\t\t\treturn [[points[0], a], [points[1], a]];\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.line.prototype = new svg.Element.PathElementBase;\r\n\r\n\t\t// polyline element\r\n\t\tsvg.Element.polyline = function(node) {\r\n\t\t\tthis.base = svg.Element.PathElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.points = svg.CreatePath(this.attribute('points').value);\r\n\t\t\tthis.path = function(ctx) {\r\n\t\t\t\tvar bb = new svg.BoundingBox(this.points[0].x, this.points[0].y);\r\n\t\t\t\tif (ctx != null) {\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(this.points[0].x, this.points[0].y);\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i=1; i<this.points.length; i++) {\r\n\t\t\t\t\tbb.addPoint(this.points[i].x, this.points[i].y);\r\n\t\t\t\t\tif (ctx != null) ctx.lineTo(this.points[i].x, this.points[i].y);\r\n\t\t\t\t}\r\n\t\t\t\treturn bb;\r\n\t\t\t}\r\n\r\n\t\t\tthis.getMarkers = function() {\r\n\t\t\t\tvar markers = [];\r\n\t\t\t\tfor (var i=0; i<this.points.length - 1; i++) {\r\n\t\t\t\t\tmarkers.push([this.points[i], this.points[i].angleTo(this.points[i+1])]);\r\n\t\t\t\t}\r\n\t\t\t\tif (markers.length > 0) {\r\n\t\t\t\t\tmarkers.push([this.points[this.points.length-1], markers[markers.length-1][1]]);\r\n\t\t\t\t}\r\n\t\t\t\treturn markers;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.polyline.prototype = new svg.Element.PathElementBase;\r\n\r\n\t\t// polygon element\r\n\t\tsvg.Element.polygon = function(node) {\r\n\t\t\tthis.base = svg.Element.polyline;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.basePath = this.path;\r\n\t\t\tthis.path = function(ctx) {\r\n\t\t\t\tvar bb = this.basePath(ctx);\r\n\t\t\t\tif (ctx != null) {\r\n\t\t\t\t\tctx.lineTo(this.points[0].x, this.points[0].y);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t}\r\n\t\t\t\treturn bb;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.polygon.prototype = new svg.Element.polyline;\r\n\r\n\t\t// path element\r\n\t\tsvg.Element.path = function(node) {\r\n\t\t\tthis.base = svg.Element.PathElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tvar d = this.attribute('d').value;\r\n\t\t\t// TODO: convert to real lexer based on http://www.w3.org/TR/SVG11/paths.html#PathDataBNF\r\n\t\t\td = d.replace(/,/gm,' '); // get rid of all commas\r\n\t\t\t// As the end of a match can also be the start of the next match, we need to run this replace twice.\r\n\t\t\tfor(var i=0; i<2; i++)\r\n\t\t\t\td = d.replace(/([MmZzLlHhVvCcSsQqTtAa])([^\\s])/gm,'$1 $2'); // suffix commands with spaces\r\n\t\t\td = d.replace(/([^\\s])([MmZzLlHhVvCcSsQqTtAa])/gm,'$1 $2'); // prefix commands with spaces\r\n\t\t\td = d.replace(/([0-9])([+\\-])/gm,'$1 $2'); // separate digits on +- signs\r\n\t\t\t// Again, we need to run this twice to find all occurances\r\n\t\t\tfor(var i=0; i<2; i++)\r\n\t\t\t\td = d.replace(/(\\.[0-9]*)(\\.)/gm,'$1 $2'); // separate digits when they start with a comma\r\n\t\t\td = d.replace(/([Aa](\\s+[0-9]+){3})\\s+([01])\\s*([01])/gm,'$1 $3 $4 '); // shorthand elliptical arc path syntax\r\n\t\t\td = svg.compressSpaces(d); // compress multiple spaces\r\n\t\t\td = svg.trim(d);\r\n\t\t\tthis.PathParser = new (function(d) {\r\n\t\t\t\tthis.tokens = d.split(' ');\r\n\r\n\t\t\t\tthis.reset = function() {\r\n\t\t\t\t\tthis.i = -1;\r\n\t\t\t\t\tthis.command = '';\r\n\t\t\t\t\tthis.previousCommand = '';\r\n\t\t\t\t\tthis.start = new svg.Point(0, 0);\r\n\t\t\t\t\tthis.control = new svg.Point(0, 0);\r\n\t\t\t\t\tthis.current = new svg.Point(0, 0);\r\n\t\t\t\t\tthis.points = [];\r\n\t\t\t\t\tthis.angles = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.isEnd = function() {\r\n\t\t\t\t\treturn this.i >= this.tokens.length - 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.isCommandOrEnd = function() {\r\n\t\t\t\t\tif (this.isEnd()) return true;\r\n\t\t\t\t\treturn this.tokens[this.i + 1].match(/^[A-Za-z]$/) != null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.isRelativeCommand = function() {\r\n\t\t\t\t\tswitch(this.command)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase 'm':\r\n\t\t\t\t\t\tcase 'l':\r\n\t\t\t\t\t\tcase 'h':\r\n\t\t\t\t\t\tcase 'v':\r\n\t\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\tcase 's':\r\n\t\t\t\t\t\tcase 'q':\r\n\t\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\tcase 'a':\r\n\t\t\t\t\t\tcase 'z':\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getToken = function() {\r\n\t\t\t\t\tthis.i++;\r\n\t\t\t\t\treturn this.tokens[this.i];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getScalar = function() {\r\n\t\t\t\t\treturn parseFloat(this.getToken());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.nextCommand = function() {\r\n\t\t\t\t\tthis.previousCommand = this.command;\r\n\t\t\t\t\tthis.command = this.getToken();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getPoint = function() {\r\n\t\t\t\t\tvar p = new svg.Point(this.getScalar(), this.getScalar());\r\n\t\t\t\t\treturn this.makeAbsolute(p);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getAsControlPoint = function() {\r\n\t\t\t\t\tvar p = this.getPoint();\r\n\t\t\t\t\tthis.control = p;\r\n\t\t\t\t\treturn p;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getAsCurrentPoint = function() {\r\n\t\t\t\t\tvar p = this.getPoint();\r\n\t\t\t\t\tthis.current = p;\r\n\t\t\t\t\treturn p;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getReflectedControlPoint = function() {\r\n\t\t\t\t\tif (this.previousCommand.toLowerCase() != 'c' &&\r\n\t\t\t\t\t    this.previousCommand.toLowerCase() != 's' &&\r\n\t\t\t\t\t\tthis.previousCommand.toLowerCase() != 'q' &&\r\n\t\t\t\t\t\tthis.previousCommand.toLowerCase() != 't' ){\r\n\t\t\t\t\t\treturn this.current;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// reflect point\r\n\t\t\t\t\tvar p = new svg.Point(2 * this.current.x - this.control.x, 2 * this.current.y - this.control.y);\r\n\t\t\t\t\treturn p;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.makeAbsolute = function(p) {\r\n\t\t\t\t\tif (this.isRelativeCommand()) {\r\n\t\t\t\t\t\tp.x += this.current.x;\r\n\t\t\t\t\t\tp.y += this.current.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn p;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.addMarker = function(p, from, priorTo) {\r\n\t\t\t\t\t// if the last angle isn't filled in because we didn't have this point yet ...\r\n\t\t\t\t\tif (priorTo != null && this.angles.length > 0 && this.angles[this.angles.length-1] == null) {\r\n\t\t\t\t\t\tthis.angles[this.angles.length-1] = this.points[this.points.length-1].angleTo(priorTo);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.addMarkerAngle(p, from == null ? null : from.angleTo(p));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.addMarkerAngle = function(p, a) {\r\n\t\t\t\t\tthis.points.push(p);\r\n\t\t\t\t\tthis.angles.push(a);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getMarkerPoints = function() { return this.points; }\r\n\t\t\t\tthis.getMarkerAngles = function() {\r\n\t\t\t\t\tfor (var i=0; i<this.angles.length; i++) {\r\n\t\t\t\t\t\tif (this.angles[i] == null) {\r\n\t\t\t\t\t\t\tfor (var j=i+1; j<this.angles.length; j++) {\r\n\t\t\t\t\t\t\t\tif (this.angles[j] != null) {\r\n\t\t\t\t\t\t\t\t\tthis.angles[i] = this.angles[j];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.angles;\r\n\t\t\t\t}\r\n\t\t\t})(d);\r\n\r\n\t\t\tthis.path = function(ctx) {\r\n\t\t\t\tvar pp = this.PathParser;\r\n\t\t\t\tpp.reset();\r\n\r\n\t\t\t\tvar bb = new svg.BoundingBox();\r\n\t\t\t\tif (ctx != null) ctx.beginPath();\r\n\t\t\t\twhile (!pp.isEnd()) {\r\n\t\t\t\t\tpp.nextCommand();\r\n\t\t\t\t\tswitch (pp.command) {\r\n\t\t\t\t\tcase 'M':\r\n\t\t\t\t\tcase 'm':\r\n\t\t\t\t\t\tvar p = pp.getAsCurrentPoint();\r\n\t\t\t\t\t\tpp.addMarker(p);\r\n\t\t\t\t\t\tbb.addPoint(p.x, p.y);\r\n\t\t\t\t\t\tif (ctx != null) ctx.moveTo(p.x, p.y);\r\n\t\t\t\t\t\tpp.start = pp.current;\r\n\t\t\t\t\t\twhile (!pp.isCommandOrEnd()) {\r\n\t\t\t\t\t\t\tvar p = pp.getAsCurrentPoint();\r\n\t\t\t\t\t\t\tpp.addMarker(p, pp.start);\r\n\t\t\t\t\t\t\tbb.addPoint(p.x, p.y);\r\n\t\t\t\t\t\t\tif (ctx != null) ctx.lineTo(p.x, p.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'L':\r\n\t\t\t\t\tcase 'l':\r\n\t\t\t\t\t\twhile (!pp.isCommandOrEnd()) {\r\n\t\t\t\t\t\t\tvar c = pp.current;\r\n\t\t\t\t\t\t\tvar p = pp.getAsCurrentPoint();\r\n\t\t\t\t\t\t\tpp.addMarker(p, c);\r\n\t\t\t\t\t\t\tbb.addPoint(p.x, p.y);\r\n\t\t\t\t\t\t\tif (ctx != null) ctx.lineTo(p.x, p.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'H':\r\n\t\t\t\t\tcase 'h':\r\n\t\t\t\t\t\twhile (!pp.isCommandOrEnd()) {\r\n\t\t\t\t\t\t\tvar newP = new svg.Point((pp.isRelativeCommand() ? pp.current.x : 0) + pp.getScalar(), pp.current.y);\r\n\t\t\t\t\t\t\tpp.addMarker(newP, pp.current);\r\n\t\t\t\t\t\t\tpp.current = newP;\r\n\t\t\t\t\t\t\tbb.addPoint(pp.current.x, pp.current.y);\r\n\t\t\t\t\t\t\tif (ctx != null) ctx.lineTo(pp.current.x, pp.current.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'V':\r\n\t\t\t\t\tcase 'v':\r\n\t\t\t\t\t\twhile (!pp.isCommandOrEnd()) {\r\n\t\t\t\t\t\t\tvar newP = new svg.Point(pp.current.x, (pp.isRelativeCommand() ? pp.current.y : 0) + pp.getScalar());\r\n\t\t\t\t\t\t\tpp.addMarker(newP, pp.current);\r\n\t\t\t\t\t\t\tpp.current = newP;\r\n\t\t\t\t\t\t\tbb.addPoint(pp.current.x, pp.current.y);\r\n\t\t\t\t\t\t\tif (ctx != null) ctx.lineTo(pp.current.x, pp.current.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'C':\r\n\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\twhile (!pp.isCommandOrEnd()) {\r\n\t\t\t\t\t\t\tvar curr = pp.current;\r\n\t\t\t\t\t\t\tvar p1 = pp.getPoint();\r\n\t\t\t\t\t\t\tvar cntrl = pp.getAsControlPoint();\r\n\t\t\t\t\t\t\tvar cp = pp.getAsCurrentPoint();\r\n\t\t\t\t\t\t\tpp.addMarker(cp, cntrl, p1);\r\n\t\t\t\t\t\t\tbb.addBezierCurve(curr.x, curr.y, p1.x, p1.y, cntrl.x, cntrl.y, cp.x, cp.y);\r\n\t\t\t\t\t\t\tif (ctx != null) ctx.bezierCurveTo(p1.x, p1.y, cntrl.x, cntrl.y, cp.x, cp.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'S':\r\n\t\t\t\t\tcase 's':\r\n\t\t\t\t\t\twhile (!pp.isCommandOrEnd()) {\r\n\t\t\t\t\t\t\tvar curr = pp.current;\r\n\t\t\t\t\t\t\tvar p1 = pp.getReflectedControlPoint();\r\n\t\t\t\t\t\t\tvar cntrl = pp.getAsControlPoint();\r\n\t\t\t\t\t\t\tvar cp = pp.getAsCurrentPoint();\r\n\t\t\t\t\t\t\tpp.addMarker(cp, cntrl, p1);\r\n\t\t\t\t\t\t\tbb.addBezierCurve(curr.x, curr.y, p1.x, p1.y, cntrl.x, cntrl.y, cp.x, cp.y);\r\n\t\t\t\t\t\t\tif (ctx != null) ctx.bezierCurveTo(p1.x, p1.y, cntrl.x, cntrl.y, cp.x, cp.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Q':\r\n\t\t\t\t\tcase 'q':\r\n\t\t\t\t\t\twhile (!pp.isCommandOrEnd()) {\r\n\t\t\t\t\t\t\tvar curr = pp.current;\r\n\t\t\t\t\t\t\tvar cntrl = pp.getAsControlPoint();\r\n\t\t\t\t\t\t\tvar cp = pp.getAsCurrentPoint();\r\n\t\t\t\t\t\t\tpp.addMarker(cp, cntrl, cntrl);\r\n\t\t\t\t\t\t\tbb.addQuadraticCurve(curr.x, curr.y, cntrl.x, cntrl.y, cp.x, cp.y);\r\n\t\t\t\t\t\t\tif (ctx != null) ctx.quadraticCurveTo(cntrl.x, cntrl.y, cp.x, cp.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'T':\r\n\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\twhile (!pp.isCommandOrEnd()) {\r\n\t\t\t\t\t\t\tvar curr = pp.current;\r\n\t\t\t\t\t\t\tvar cntrl = pp.getReflectedControlPoint();\r\n\t\t\t\t\t\t\tpp.control = cntrl;\r\n\t\t\t\t\t\t\tvar cp = pp.getAsCurrentPoint();\r\n\t\t\t\t\t\t\tpp.addMarker(cp, cntrl, cntrl);\r\n\t\t\t\t\t\t\tbb.addQuadraticCurve(curr.x, curr.y, cntrl.x, cntrl.y, cp.x, cp.y);\r\n\t\t\t\t\t\t\tif (ctx != null) ctx.quadraticCurveTo(cntrl.x, cntrl.y, cp.x, cp.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'A':\r\n\t\t\t\t\tcase 'a':\r\n\t\t\t\t\t\twhile (!pp.isCommandOrEnd()) {\r\n\t\t\t\t\t\t    var curr = pp.current;\r\n\t\t\t\t\t\t\tvar rx = pp.getScalar();\r\n\t\t\t\t\t\t\tvar ry = pp.getScalar();\r\n\t\t\t\t\t\t\tvar xAxisRotation = pp.getScalar() * (Math.PI / 180.0);\r\n\t\t\t\t\t\t\tvar largeArcFlag = pp.getScalar();\r\n\t\t\t\t\t\t\tvar sweepFlag = pp.getScalar();\r\n\t\t\t\t\t\t\tvar cp = pp.getAsCurrentPoint();\r\n\r\n\t\t\t\t\t\t\t// Conversion from endpoint to center parameterization\r\n\t\t\t\t\t\t\t// http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\r\n\t\t\t\t\t\t\t// x1', y1'\r\n\t\t\t\t\t\t\tvar currp = new svg.Point(\r\n\t\t\t\t\t\t\t\tMath.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\r\n\t\t\t\t\t\t\t\t-Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t// adjust radii\r\n\t\t\t\t\t\t\tvar l = Math.pow(currp.x,2)/Math.pow(rx,2)+Math.pow(currp.y,2)/Math.pow(ry,2);\r\n\t\t\t\t\t\t\tif (l > 1) {\r\n\t\t\t\t\t\t\t\trx *= Math.sqrt(l);\r\n\t\t\t\t\t\t\t\try *= Math.sqrt(l);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// cx', cy'\r\n\t\t\t\t\t\t\tvar s = (largeArcFlag == sweepFlag ? -1 : 1) * Math.sqrt(\r\n\t\t\t\t\t\t\t\t((Math.pow(rx,2)*Math.pow(ry,2))-(Math.pow(rx,2)*Math.pow(currp.y,2))-(Math.pow(ry,2)*Math.pow(currp.x,2))) /\r\n\t\t\t\t\t\t\t\t(Math.pow(rx,2)*Math.pow(currp.y,2)+Math.pow(ry,2)*Math.pow(currp.x,2))\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (isNaN(s)) s = 0;\r\n\t\t\t\t\t\t\tvar cpp = new svg.Point(s * rx * currp.y / ry, s * -ry * currp.x / rx);\r\n\t\t\t\t\t\t\t// cx, cy\r\n\t\t\t\t\t\t\tvar centp = new svg.Point(\r\n\t\t\t\t\t\t\t\t(curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\r\n\t\t\t\t\t\t\t\t(curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t// vector magnitude\r\n\t\t\t\t\t\t\tvar m = function(v) { return Math.sqrt(Math.pow(v[0],2) + Math.pow(v[1],2)); }\r\n\t\t\t\t\t\t\t// ratio between two vectors\r\n\t\t\t\t\t\t\tvar r = function(u, v) { return (u[0]*v[0]+u[1]*v[1]) / (m(u)*m(v)) }\r\n\t\t\t\t\t\t\t// angle between two vectors\r\n\t\t\t\t\t\t\tvar a = function(u, v) { return (u[0]*v[1] < u[1]*v[0] ? -1 : 1) * Math.acos(r(u,v)); }\r\n\t\t\t\t\t\t\t// initial angle\r\n\t\t\t\t\t\t\tvar a1 = a([1,0], [(currp.x-cpp.x)/rx,(currp.y-cpp.y)/ry]);\r\n\t\t\t\t\t\t\t// angle delta\r\n\t\t\t\t\t\t\tvar u = [(currp.x-cpp.x)/rx,(currp.y-cpp.y)/ry];\r\n\t\t\t\t\t\t\tvar v = [(-currp.x-cpp.x)/rx,(-currp.y-cpp.y)/ry];\r\n\t\t\t\t\t\t\tvar ad = a(u, v);\r\n\t\t\t\t\t\t\tif (r(u,v) <= -1) ad = Math.PI;\r\n\t\t\t\t\t\t\tif (r(u,v) >= 1) ad = 0;\r\n\r\n\t\t\t\t\t\t\t// for markers\r\n\t\t\t\t\t\t\tvar dir = 1 - sweepFlag ? 1.0 : -1.0;\r\n\t\t\t\t\t\t\tvar ah = a1 + dir * (ad / 2.0);\r\n\t\t\t\t\t\t\tvar halfWay = new svg.Point(\r\n\t\t\t\t\t\t\t\tcentp.x + rx * Math.cos(ah),\r\n\t\t\t\t\t\t\t\tcentp.y + ry * Math.sin(ah)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tpp.addMarkerAngle(halfWay, ah - dir * Math.PI / 2);\r\n\t\t\t\t\t\t\tpp.addMarkerAngle(cp, ah - dir * Math.PI);\r\n\r\n\t\t\t\t\t\t\tbb.addPoint(cp.x, cp.y); // TODO: this is too naive, make it better\r\n\t\t\t\t\t\t\tif (ctx != null) {\r\n\t\t\t\t\t\t\t\tvar r = rx > ry ? rx : ry;\r\n\t\t\t\t\t\t\t\tvar sx = rx > ry ? 1 : rx / ry;\r\n\t\t\t\t\t\t\t\tvar sy = rx > ry ? ry / rx : 1;\r\n\r\n\t\t\t\t\t\t\t\tctx.translate(centp.x, centp.y);\r\n\t\t\t\t\t\t\t\tctx.rotate(xAxisRotation);\r\n\t\t\t\t\t\t\t\tctx.scale(sx, sy);\r\n\t\t\t\t\t\t\t\tctx.arc(0, 0, r, a1, a1 + ad, 1 - sweepFlag);\r\n\t\t\t\t\t\t\t\tctx.scale(1/sx, 1/sy);\r\n\t\t\t\t\t\t\t\tctx.rotate(-xAxisRotation);\r\n\t\t\t\t\t\t\t\tctx.translate(-centp.x, -centp.y);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Z':\r\n\t\t\t\t\tcase 'z':\r\n\t\t\t\t\t\tif (ctx != null) ctx.closePath();\r\n\t\t\t\t\t\tpp.current = pp.start;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn bb;\r\n\t\t\t}\r\n\r\n\t\t\tthis.getMarkers = function() {\r\n\t\t\t\tvar points = this.PathParser.getMarkerPoints();\r\n\t\t\t\tvar angles = this.PathParser.getMarkerAngles();\r\n\r\n\t\t\t\tvar markers = [];\r\n\t\t\t\tfor (var i=0; i<points.length; i++) {\r\n\t\t\t\t\tmarkers.push([points[i], angles[i]]);\r\n\t\t\t\t}\r\n\t\t\t\treturn markers;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.path.prototype = new svg.Element.PathElementBase;\r\n\r\n\t\t// pattern element\r\n\t\tsvg.Element.pattern = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.createPattern = function(ctx, element) {\r\n\t\t\t\tvar width = this.attribute('width').toPixels('x', true);\r\n\t\t\t\tvar height = this.attribute('height').toPixels('y', true);\r\n\r\n\t\t\t\t// render me using a temporary svg element\r\n\t\t\t\tvar tempSvg = new svg.Element.svg();\r\n\t\t\t\ttempSvg.attributes['viewBox'] = new svg.Property('viewBox', this.attribute('viewBox').value);\r\n\t\t\t\ttempSvg.attributes['width'] = new svg.Property('width', width + 'px');\r\n\t\t\t\ttempSvg.attributes['height'] = new svg.Property('height', height + 'px');\r\n\t\t\t\ttempSvg.attributes['transform'] = new svg.Property('transform', this.attribute('patternTransform').value);\r\n\t\t\t\ttempSvg.children = this.children;\r\n\r\n\t\t\t\tvar c = document.createElement('canvas');\r\n\t\t\t\tc.width = width;\r\n\t\t\t\tc.height = height;\r\n\t\t\t\tvar cctx = c.getContext('2d');\r\n\t\t\t\tif (this.attribute('x').hasValue() && this.attribute('y').hasValue()) {\r\n\t\t\t\t\tcctx.translate(this.attribute('x').toPixels('x', true), this.attribute('y').toPixels('y', true));\r\n\t\t\t\t}\r\n\t\t\t\t// render 3x3 grid so when we transform there's no white space on edges\r\n\t\t\t\tfor (var x=-1; x<=1; x++) {\r\n\t\t\t\t\tfor (var y=-1; y<=1; y++) {\r\n\t\t\t\t\t\tcctx.save();\r\n\t\t\t\t\t\ttempSvg.attributes['x'] = new svg.Property('x', x * c.width);\r\n\t\t\t\t\t\ttempSvg.attributes['y'] = new svg.Property('y', y * c.height);\r\n\t\t\t\t\t\ttempSvg.render(cctx);\r\n\t\t\t\t\t\tcctx.restore();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar pattern = ctx.createPattern(c, 'repeat');\r\n\t\t\t\treturn pattern;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.pattern.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// marker element\r\n\t\tsvg.Element.marker = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.baseRender = this.render;\r\n\t\t\tthis.render = function(ctx, point, angle) {\r\n\t\t\t\tctx.translate(point.x, point.y);\r\n\t\t\t\tif (this.attribute('orient').valueOrDefault('auto') == 'auto') ctx.rotate(angle);\r\n\t\t\t\tif (this.attribute('markerUnits').valueOrDefault('strokeWidth') == 'strokeWidth') ctx.scale(ctx.lineWidth, ctx.lineWidth);\r\n\t\t\t\tctx.save();\r\n\r\n\t\t\t\t// render me using a temporary svg element\r\n\t\t\t\tvar tempSvg = new svg.Element.svg();\r\n\t\t\t\ttempSvg.attributes['viewBox'] = new svg.Property('viewBox', this.attribute('viewBox').value);\r\n\t\t\t\ttempSvg.attributes['refX'] = new svg.Property('refX', this.attribute('refX').value);\r\n\t\t\t\ttempSvg.attributes['refY'] = new svg.Property('refY', this.attribute('refY').value);\r\n\t\t\t\ttempSvg.attributes['width'] = new svg.Property('width', this.attribute('markerWidth').value);\r\n\t\t\t\ttempSvg.attributes['height'] = new svg.Property('height', this.attribute('markerHeight').value);\r\n\t\t\t\ttempSvg.attributes['fill'] = new svg.Property('fill', this.attribute('fill').valueOrDefault('black'));\r\n\t\t\t\ttempSvg.attributes['stroke'] = new svg.Property('stroke', this.attribute('stroke').valueOrDefault('none'));\r\n\t\t\t\ttempSvg.children = this.children;\r\n\t\t\t\ttempSvg.render(ctx);\r\n\r\n\t\t\t\tctx.restore();\r\n\t\t\t\tif (this.attribute('markerUnits').valueOrDefault('strokeWidth') == 'strokeWidth') ctx.scale(1/ctx.lineWidth, 1/ctx.lineWidth);\r\n\t\t\t\tif (this.attribute('orient').valueOrDefault('auto') == 'auto') ctx.rotate(-angle);\r\n\t\t\t\tctx.translate(-point.x, -point.y);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.marker.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// definitions element\r\n\t\tsvg.Element.defs = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.render = function(ctx) {\r\n\t\t\t\t// NOOP\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.defs.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// base for gradients\r\n\t\tsvg.Element.GradientBase = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.stops = [];\r\n\t\t\tfor (var i=0; i<this.children.length; i++) {\r\n\t\t\t\tvar child = this.children[i];\r\n\t\t\t\tif (child.type == 'stop') this.stops.push(child);\r\n\t\t\t}\r\n\r\n\t\t\tthis.getGradient = function() {\r\n\t\t\t\t// OVERRIDE ME!\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.gradientUnits = function () {\r\n\t\t\t\treturn this.attribute('gradientUnits').valueOrDefault('objectBoundingBox');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.attributesToInherit = ['gradientUnits'];\r\n\t\t\t\r\n\t\t\tthis.inheritStopContainer = function (stopsContainer) {\r\n\t\t\t\tfor (var i=0; i<this.attributesToInherit.length; i++) {\r\n\t\t\t\t\tvar attributeToInherit = this.attributesToInherit[i];\r\n\t\t\t\t\tif (!this.attribute(attributeToInherit).hasValue() && stopsContainer.attribute(attributeToInherit).hasValue()) {\r\n\t\t\t\t\t\tthis.attribute(attributeToInherit, true).value = stopsContainer.attribute(attributeToInherit).value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.createGradient = function(ctx, element, parentOpacityProp) {\r\n\t\t\t\tvar stopsContainer = this;\r\n\t\t\t\tif (this.getHrefAttribute().hasValue()) {\r\n\t\t\t\t\tstopsContainer = this.getHrefAttribute().getDefinition();\r\n\t\t\t\t\tthis.inheritStopContainer(stopsContainer);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar addParentOpacity = function (color) {\r\n\t\t\t\t\tif (parentOpacityProp.hasValue()) {\r\n\t\t\t\t\t\tvar p = new svg.Property('color', color);\r\n\t\t\t\t\t\treturn p.addOpacity(parentOpacityProp).value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn color;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar g = this.getGradient(ctx, element);\r\n\t\t\t\tif (g == null) return addParentOpacity(stopsContainer.stops[stopsContainer.stops.length - 1].color);\r\n\t\t\t\tfor (var i=0; i<stopsContainer.stops.length; i++) {\r\n\t\t\t\t\tg.addColorStop(stopsContainer.stops[i].offset, addParentOpacity(stopsContainer.stops[i].color));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.attribute('gradientTransform').hasValue()) {\r\n\t\t\t\t\t// render as transformed pattern on temporary canvas\r\n\t\t\t\t\tvar rootView = svg.ViewPort.viewPorts[0];\r\n\r\n\t\t\t\t\tvar rect = new svg.Element.rect();\r\n\t\t\t\t\trect.attributes['x'] = new svg.Property('x', -svg.MAX_VIRTUAL_PIXELS/3.0);\r\n\t\t\t\t\trect.attributes['y'] = new svg.Property('y', -svg.MAX_VIRTUAL_PIXELS/3.0);\r\n\t\t\t\t\trect.attributes['width'] = new svg.Property('width', svg.MAX_VIRTUAL_PIXELS);\r\n\t\t\t\t\trect.attributes['height'] = new svg.Property('height', svg.MAX_VIRTUAL_PIXELS);\r\n\r\n\t\t\t\t\tvar group = new svg.Element.g();\r\n\t\t\t\t\tgroup.attributes['transform'] = new svg.Property('transform', this.attribute('gradientTransform').value);\r\n\t\t\t\t\tgroup.children = [ rect ];\r\n\r\n\t\t\t\t\tvar tempSvg = new svg.Element.svg();\r\n\t\t\t\t\ttempSvg.attributes['x'] = new svg.Property('x', 0);\r\n\t\t\t\t\ttempSvg.attributes['y'] = new svg.Property('y', 0);\r\n\t\t\t\t\ttempSvg.attributes['width'] = new svg.Property('width', rootView.width);\r\n\t\t\t\t\ttempSvg.attributes['height'] = new svg.Property('height', rootView.height);\r\n\t\t\t\t\ttempSvg.children = [ group ];\r\n\r\n\t\t\t\t\tvar c = document.createElement('canvas');\r\n\t\t\t\t\tc.width = rootView.width;\r\n\t\t\t\t\tc.height = rootView.height;\r\n\t\t\t\t\tvar tempCtx = c.getContext('2d');\r\n\t\t\t\t\ttempCtx.fillStyle = g;\r\n\t\t\t\t\ttempSvg.render(tempCtx);\r\n\t\t\t\t\treturn tempCtx.createPattern(c, 'no-repeat');\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn g;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.GradientBase.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// linear gradient element\r\n\t\tsvg.Element.linearGradient = function(node) {\r\n\t\t\tthis.base = svg.Element.GradientBase;\r\n\t\t\tthis.base(node);\r\n\t\t\t\r\n\t\t\tthis.attributesToInherit.push('x1');\r\n\t\t\tthis.attributesToInherit.push('y1');\r\n\t\t\tthis.attributesToInherit.push('x2');\r\n\t\t\tthis.attributesToInherit.push('y2');\r\n\r\n\t\t\tthis.getGradient = function(ctx, element) {\r\n\t\t\t\tvar bb = this.gradientUnits() == 'objectBoundingBox' ? element.getBoundingBox() : null;\r\n\r\n\t\t\t\tif (!this.attribute('x1').hasValue()\r\n\t\t\t\t && !this.attribute('y1').hasValue()\r\n\t\t\t\t && !this.attribute('x2').hasValue()\r\n\t\t\t\t && !this.attribute('y2').hasValue()) {\r\n\t\t\t\t\tthis.attribute('x1', true).value = 0;\r\n\t\t\t\t\tthis.attribute('y1', true).value = 0;\r\n\t\t\t\t\tthis.attribute('x2', true).value = 1;\r\n\t\t\t\t\tthis.attribute('y2', true).value = 0;\r\n\t\t\t\t }\r\n\r\n\t\t\t\tvar x1 = (this.gradientUnits() == 'objectBoundingBox'\r\n\t\t\t\t\t? bb.x() + bb.width() * this.attribute('x1').numValue()\r\n\t\t\t\t\t: this.attribute('x1').toPixels('x'));\r\n\t\t\t\tvar y1 = (this.gradientUnits() == 'objectBoundingBox'\r\n\t\t\t\t\t? bb.y() + bb.height() * this.attribute('y1').numValue()\r\n\t\t\t\t\t: this.attribute('y1').toPixels('y'));\r\n\t\t\t\tvar x2 = (this.gradientUnits() == 'objectBoundingBox'\r\n\t\t\t\t\t? bb.x() + bb.width() * this.attribute('x2').numValue()\r\n\t\t\t\t\t: this.attribute('x2').toPixels('x'));\r\n\t\t\t\tvar y2 = (this.gradientUnits() == 'objectBoundingBox'\r\n\t\t\t\t\t? bb.y() + bb.height() * this.attribute('y2').numValue()\r\n\t\t\t\t\t: this.attribute('y2').toPixels('y'));\r\n\r\n\t\t\t\tif (x1 == x2 && y1 == y2) return null;\r\n\t\t\t\treturn ctx.createLinearGradient(x1, y1, x2, y2);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.linearGradient.prototype = new svg.Element.GradientBase;\r\n\r\n\t\t// radial gradient element\r\n\t\tsvg.Element.radialGradient = function(node) {\r\n\t\t\tthis.base = svg.Element.GradientBase;\r\n\t\t\tthis.base(node);\r\n\t\t\t\r\n\t\t\tthis.attributesToInherit.push('cx');\r\n\t\t\tthis.attributesToInherit.push('cy');\r\n\t\t\tthis.attributesToInherit.push('r');\r\n\t\t\tthis.attributesToInherit.push('fx');\r\n\t\t\tthis.attributesToInherit.push('fy');\r\n\r\n\t\t\tthis.getGradient = function(ctx, element) {\r\n\t\t\t\tvar bb = element.getBoundingBox();\r\n\r\n\t\t\t\tif (!this.attribute('cx').hasValue()) this.attribute('cx', true).value = '50%';\r\n\t\t\t\tif (!this.attribute('cy').hasValue()) this.attribute('cy', true).value = '50%';\r\n\t\t\t\tif (!this.attribute('r').hasValue()) this.attribute('r', true).value = '50%';\r\n\r\n\t\t\t\tvar cx = (this.gradientUnits() == 'objectBoundingBox'\r\n\t\t\t\t\t? bb.x() + bb.width() * this.attribute('cx').numValue()\r\n\t\t\t\t\t: this.attribute('cx').toPixels('x'));\r\n\t\t\t\tvar cy = (this.gradientUnits() == 'objectBoundingBox'\r\n\t\t\t\t\t? bb.y() + bb.height() * this.attribute('cy').numValue()\r\n\t\t\t\t\t: this.attribute('cy').toPixels('y'));\r\n\r\n\t\t\t\tvar fx = cx;\r\n\t\t\t\tvar fy = cy;\r\n\t\t\t\tif (this.attribute('fx').hasValue()) {\r\n\t\t\t\t\tfx = (this.gradientUnits() == 'objectBoundingBox'\r\n\t\t\t\t\t? bb.x() + bb.width() * this.attribute('fx').numValue()\r\n\t\t\t\t\t: this.attribute('fx').toPixels('x'));\r\n\t\t\t\t}\r\n\t\t\t\tif (this.attribute('fy').hasValue()) {\r\n\t\t\t\t\tfy = (this.gradientUnits() == 'objectBoundingBox'\r\n\t\t\t\t\t? bb.y() + bb.height() * this.attribute('fy').numValue()\r\n\t\t\t\t\t: this.attribute('fy').toPixels('y'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar r = (this.gradientUnits() == 'objectBoundingBox'\r\n\t\t\t\t\t? (bb.width() + bb.height()) / 2.0 * this.attribute('r').numValue()\r\n\t\t\t\t\t: this.attribute('r').toPixels());\r\n\r\n\t\t\t\treturn ctx.createRadialGradient(fx, fy, 0, cx, cy, r);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.radialGradient.prototype = new svg.Element.GradientBase;\r\n\r\n\t\t// gradient stop element\r\n\t\tsvg.Element.stop = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.offset = this.attribute('offset').numValue();\r\n\t\t\tif (this.offset < 0) this.offset = 0;\r\n\t\t\tif (this.offset > 1) this.offset = 1;\r\n\r\n\t\t\tvar stopColor = this.style('stop-color', true);\r\n\t\t\tif (stopColor.value === '') stopColor.value = '#000';\r\n\t\t\tif (this.style('stop-opacity').hasValue()) stopColor = stopColor.addOpacity(this.style('stop-opacity'));\r\n\t\t\tthis.color = stopColor.value;\r\n\t\t}\r\n\t\tsvg.Element.stop.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// animation base element\r\n\t\tsvg.Element.AnimateBase = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tsvg.Animations.push(this);\r\n\r\n\t\t\tthis.duration = 0.0;\r\n\t\t\tthis.begin = this.attribute('begin').toMilliseconds();\r\n\t\t\tthis.maxDuration = this.begin + this.attribute('dur').toMilliseconds();\r\n\r\n\t\t\tthis.getProperty = function() {\r\n\t\t\t\tvar attributeType = this.attribute('attributeType').value;\r\n\t\t\t\tvar attributeName = this.attribute('attributeName').value;\r\n\r\n\t\t\t\tif (attributeType == 'CSS') {\r\n\t\t\t\t\treturn this.parent.style(attributeName, true);\r\n\t\t\t\t}\r\n\t\t\t\treturn this.parent.attribute(attributeName, true);\r\n\t\t\t};\r\n\r\n\t\t\tthis.initialValue = null;\r\n\t\t\tthis.initialUnits = '';\r\n\t\t\tthis.removed = false;\r\n\r\n\t\t\tthis.calcValue = function() {\r\n\t\t\t\t// OVERRIDE ME!\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n\t\t\tthis.update = function(delta) {\r\n\t\t\t\t// set initial value\r\n\t\t\t\tif (this.initialValue == null) {\r\n\t\t\t\t\tthis.initialValue = this.getProperty().value;\r\n\t\t\t\t\tthis.initialUnits = this.getProperty().getUnits();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if we're past the end time\r\n\t\t\t\tif (this.duration > this.maxDuration) {\r\n\t\t\t\t\t// loop for indefinitely repeating animations\r\n\t\t\t\t\tif (this.attribute('repeatCount').value == 'indefinite'\r\n\t\t\t\t\t || this.attribute('repeatDur').value == 'indefinite') {\r\n\t\t\t\t\t\tthis.duration = 0.0\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (this.attribute('fill').valueOrDefault('remove') == 'freeze' && !this.frozen) {\r\n\t\t\t\t\t\tthis.frozen = true;\r\n\t\t\t\t\t\tthis.parent.animationFrozen = true;\r\n\t\t\t\t\t\tthis.parent.animationFrozenValue = this.getProperty().value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (this.attribute('fill').valueOrDefault('remove') == 'remove' && !this.removed) {\r\n\t\t\t\t\t\tthis.removed = true;\r\n\t\t\t\t\t\tthis.getProperty().value = this.parent.animationFrozen ? this.parent.animationFrozenValue : this.initialValue;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.duration = this.duration + delta;\r\n\r\n\t\t\t\t// if we're past the begin time\r\n\t\t\t\tvar updated = false;\r\n\t\t\t\tif (this.begin < this.duration) {\r\n\t\t\t\t\tvar newValue = this.calcValue(); // tween\r\n\r\n\t\t\t\t\tif (this.attribute('type').hasValue()) {\r\n\t\t\t\t\t\t// for transform, etc.\r\n\t\t\t\t\t\tvar type = this.attribute('type').value;\r\n\t\t\t\t\t\tnewValue = type + '(' + newValue + ')';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.getProperty().value = newValue;\r\n\t\t\t\t\tupdated = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn updated;\r\n\t\t\t}\r\n\r\n\t\t\tthis.from = this.attribute('from');\r\n\t\t\tthis.to = this.attribute('to');\r\n\t\t\tthis.values = this.attribute('values');\r\n\t\t\tif (this.values.hasValue()) this.values.value = this.values.value.split(';');\r\n\r\n\t\t\t// fraction of duration we've covered\r\n\t\t\tthis.progress = function() {\r\n\t\t\t\tvar ret = { progress: (this.duration - this.begin) / (this.maxDuration - this.begin) };\r\n\t\t\t\tif (this.values.hasValue()) {\r\n\t\t\t\t\tvar p = ret.progress * (this.values.value.length - 1);\r\n\t\t\t\t\tvar lb = Math.floor(p), ub = Math.ceil(p);\r\n\t\t\t\t\tret.from = new svg.Property('from', parseFloat(this.values.value[lb]));\r\n\t\t\t\t\tret.to = new svg.Property('to', parseFloat(this.values.value[ub]));\r\n\t\t\t\t\tret.progress = (p - lb) / (ub - lb);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tret.from = this.from;\r\n\t\t\t\t\tret.to = this.to;\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.AnimateBase.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// animate element\r\n\t\tsvg.Element.animate = function(node) {\r\n\t\t\tthis.base = svg.Element.AnimateBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.calcValue = function() {\r\n\t\t\t\tvar p = this.progress();\r\n\r\n\t\t\t\t// tween value linearly\r\n\t\t\t\tvar newValue = p.from.numValue() + (p.to.numValue() - p.from.numValue()) * p.progress;\r\n\t\t\t\treturn newValue + this.initialUnits;\r\n\t\t\t};\r\n\t\t}\r\n\t\tsvg.Element.animate.prototype = new svg.Element.AnimateBase;\r\n\r\n\t\t// animate color element\r\n\t\tsvg.Element.animateColor = function(node) {\r\n\t\t\tthis.base = svg.Element.AnimateBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.calcValue = function() {\r\n\t\t\t\tvar p = this.progress();\r\n\t\t\t\tvar from = new RGBColor(p.from.value);\r\n\t\t\t\tvar to = new RGBColor(p.to.value);\r\n\r\n\t\t\t\tif (from.ok && to.ok) {\r\n\t\t\t\t\t// tween color linearly\r\n\t\t\t\t\tvar r = from.r + (to.r - from.r) * p.progress;\r\n\t\t\t\t\tvar g = from.g + (to.g - from.g) * p.progress;\r\n\t\t\t\t\tvar b = from.b + (to.b - from.b) * p.progress;\r\n\t\t\t\t\treturn 'rgb('+parseInt(r,10)+','+parseInt(g,10)+','+parseInt(b,10)+')';\r\n\t\t\t\t}\r\n\t\t\t\treturn this.attribute('from').value;\r\n\t\t\t};\r\n\t\t}\r\n\t\tsvg.Element.animateColor.prototype = new svg.Element.AnimateBase;\r\n\r\n\t\t// animate transform element\r\n\t\tsvg.Element.animateTransform = function(node) {\r\n\t\t\tthis.base = svg.Element.AnimateBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.calcValue = function() {\r\n\t\t\t\tvar p = this.progress();\r\n\r\n\t\t\t\t// tween value linearly\r\n\t\t\t\tvar from = svg.ToNumberArray(p.from.value);\r\n\t\t\t\tvar to = svg.ToNumberArray(p.to.value);\r\n\t\t\t\tvar newValue = '';\r\n\t\t\t\tfor (var i=0; i<from.length; i++) {\r\n\t\t\t\t\tnewValue += from[i] + (to[i] - from[i]) * p.progress + ' ';\r\n\t\t\t\t}\r\n\t\t\t\treturn newValue;\r\n\t\t\t};\r\n\t\t}\r\n\t\tsvg.Element.animateTransform.prototype = new svg.Element.animate;\r\n\r\n\t\t// font element\r\n\t\tsvg.Element.font = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.horizAdvX = this.attribute('horiz-adv-x').numValue();\r\n\r\n\t\t\tthis.isRTL = false;\r\n\t\t\tthis.isArabic = false;\r\n\t\t\tthis.fontFace = null;\r\n\t\t\tthis.missingGlyph = null;\r\n\t\t\tthis.glyphs = [];\r\n\t\t\tfor (var i=0; i<this.children.length; i++) {\r\n\t\t\t\tvar child = this.children[i];\r\n\t\t\t\tif (child.type == 'font-face') {\r\n\t\t\t\t\tthis.fontFace = child;\r\n\t\t\t\t\tif (child.style('font-family').hasValue()) {\r\n\t\t\t\t\t\tsvg.Definitions[child.style('font-family').value] = this;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (child.type == 'missing-glyph') this.missingGlyph = child;\r\n\t\t\t\telse if (child.type == 'glyph') {\r\n\t\t\t\t\tif (child.arabicForm != '') {\r\n\t\t\t\t\t\tthis.isRTL = true;\r\n\t\t\t\t\t\tthis.isArabic = true;\r\n\t\t\t\t\t\tif (typeof this.glyphs[child.unicode] == 'undefined') this.glyphs[child.unicode] = [];\r\n\t\t\t\t\t\tthis.glyphs[child.unicode][child.arabicForm] = child;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.glyphs[child.unicode] = child;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.font.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// font-face element\r\n\t\tsvg.Element.fontface = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.ascent = this.attribute('ascent').value;\r\n\t\t\tthis.descent = this.attribute('descent').value;\r\n\t\t\tthis.unitsPerEm = this.attribute('units-per-em').numValue();\r\n\t\t}\r\n\t\tsvg.Element.fontface.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// missing-glyph element\r\n\t\tsvg.Element.missingglyph = function(node) {\r\n\t\t\tthis.base = svg.Element.path;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.horizAdvX = 0;\r\n\t\t}\r\n\t\tsvg.Element.missingglyph.prototype = new svg.Element.path;\r\n\r\n\t\t// glyph element\r\n\t\tsvg.Element.glyph = function(node) {\r\n\t\t\tthis.base = svg.Element.path;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.horizAdvX = this.attribute('horiz-adv-x').numValue();\r\n\t\t\tthis.unicode = this.attribute('unicode').value;\r\n\t\t\tthis.arabicForm = this.attribute('arabic-form').value;\r\n\t\t}\r\n\t\tsvg.Element.glyph.prototype = new svg.Element.path;\r\n\r\n\t\t// text element\r\n\t\tsvg.Element.text = function(node) {\r\n\t\t\tthis.captureTextNodes = true;\r\n\t\t\tthis.base = svg.Element.RenderedElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.baseSetContext = this.setContext;\r\n\t\t\tthis.setContext = function(ctx) {\r\n\t\t\t\tthis.baseSetContext(ctx);\r\n\r\n\t\t\t\tvar textBaseline = this.style('dominant-baseline').toTextBaseline();\r\n\t\t\t\tif (textBaseline == null) textBaseline = this.style('alignment-baseline').toTextBaseline();\r\n\t\t\t\tif (textBaseline != null) ctx.textBaseline = textBaseline;\r\n\t\t\t}\r\n\r\n\t\t\tthis.getBoundingBox = function () {\r\n\t\t\t\tvar x = this.attribute('x').toPixels('x');\r\n\t\t\t\tvar y = this.attribute('y').toPixels('y');\r\n\t\t\t\tvar fontSize = this.parent.style('font-size').numValueOrDefault(svg.Font.Parse(svg.ctx.font).fontSize);\r\n\t\t\t\treturn new svg.BoundingBox(x, y - fontSize, x + Math.floor(fontSize * 2.0 / 3.0) * this.children[0].getText().length, y);\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderChildren = function(ctx) {\r\n\t\t\t\tthis.x = this.attribute('x').toPixels('x');\r\n\t\t\t\tthis.y = this.attribute('y').toPixels('y');\r\n\t\t\t\tif (this.attribute('dx').hasValue()) this.x += this.attribute('dx').toPixels('x');\r\n\t\t\t\tif (this.attribute('dy').hasValue()) this.y += this.attribute('dy').toPixels('y');\r\n\t\t\t\tthis.x += this.getAnchorDelta(ctx, this, 0);\r\n\t\t\t\tfor (var i=0; i<this.children.length; i++) {\r\n\t\t\t\t\tthis.renderChild(ctx, this, this, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.getAnchorDelta = function (ctx, parent, startI) {\r\n\t\t\t\tvar textAnchor = this.style('text-anchor').valueOrDefault('start');\r\n\t\t\t\tif (textAnchor != 'start') {\r\n\t\t\t\t\tvar width = 0;\r\n\t\t\t\t\tfor (var i=startI; i<parent.children.length; i++) {\r\n\t\t\t\t\t\tvar child = parent.children[i];\r\n\t\t\t\t\t\tif (i > startI && child.attribute('x').hasValue()) break; // new group\r\n\t\t\t\t\t\twidth += child.measureTextRecursive(ctx);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn -1 * (textAnchor == 'end' ? width : width / 2.0);\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderChild = function(ctx, textParent, parent, i) {\r\n\t\t\t\tvar child = parent.children[i];\r\n\t\t\t\tif (child.attribute('x').hasValue()) {\r\n\t\t\t\t\tchild.x = child.attribute('x').toPixels('x') + textParent.getAnchorDelta(ctx, parent, i);\r\n\t\t\t\t\tif (child.attribute('dx').hasValue()) child.x += child.attribute('dx').toPixels('x');\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (child.attribute('dx').hasValue()) textParent.x += child.attribute('dx').toPixels('x');\r\n\t\t\t\t\tchild.x = textParent.x;\r\n\t\t\t\t}\r\n\t\t\t\ttextParent.x = child.x + child.measureText(ctx);\r\n\r\n\t\t\t\tif (child.attribute('y').hasValue()) {\r\n\t\t\t\t\tchild.y = child.attribute('y').toPixels('y');\r\n\t\t\t\t\tif (child.attribute('dy').hasValue()) child.y += child.attribute('dy').toPixels('y');\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (child.attribute('dy').hasValue()) textParent.y += child.attribute('dy').toPixels('y');\r\n\t\t\t\t\tchild.y = textParent.y;\r\n\t\t\t\t}\r\n\t\t\t\ttextParent.y = child.y;\r\n\r\n\t\t\t\tchild.render(ctx);\r\n\r\n\t\t\t\tfor (var i=0; i<child.children.length; i++) {\r\n\t\t\t\t\ttextParent.renderChild(ctx, textParent, child, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.text.prototype = new svg.Element.RenderedElementBase;\r\n\r\n\t\t// text base\r\n\t\tsvg.Element.TextElementBase = function(node) {\r\n\t\t\tthis.base = svg.Element.RenderedElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.getGlyph = function(font, text, i) {\r\n\t\t\t\tvar c = text[i];\r\n\t\t\t\tvar glyph = null;\r\n\t\t\t\tif (font.isArabic) {\r\n\t\t\t\t\tvar arabicForm = 'isolated';\r\n\t\t\t\t\tif ((i==0 || text[i-1]==' ') && i<text.length-2 && text[i+1]!=' ') arabicForm = 'terminal';\r\n\t\t\t\t\tif (i>0 && text[i-1]!=' ' && i<text.length-2 && text[i+1]!=' ') arabicForm = 'medial';\r\n\t\t\t\t\tif (i>0 && text[i-1]!=' ' && (i == text.length-1 || text[i+1]==' ')) arabicForm = 'initial';\r\n\t\t\t\t\tif (typeof font.glyphs[c] != 'undefined') {\r\n\t\t\t\t\t\tglyph = font.glyphs[c][arabicForm];\r\n\t\t\t\t\t\tif (glyph == null && font.glyphs[c].type == 'glyph') glyph = font.glyphs[c];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tglyph = font.glyphs[c];\r\n\t\t\t\t}\r\n\t\t\t\tif (glyph == null) glyph = font.missingGlyph;\r\n\t\t\t\treturn glyph;\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderChildren = function(ctx) {\r\n\t\t\t\tvar customFont = this.parent.style('font-family').getDefinition();\r\n\t\t\t\tif (customFont != null) {\r\n\t\t\t\t\tvar fontSize = this.parent.style('font-size').numValueOrDefault(svg.Font.Parse(svg.ctx.font).fontSize);\r\n\t\t\t\t\tvar fontStyle = this.parent.style('font-style').valueOrDefault(svg.Font.Parse(svg.ctx.font).fontStyle);\r\n\t\t\t\t\tvar text = this.getText();\r\n\t\t\t\t\tif (customFont.isRTL) text = text.split(\"\").reverse().join(\"\");\r\n\r\n\t\t\t\t\tvar dx = svg.ToNumberArray(this.parent.attribute('dx').value);\r\n\t\t\t\t\tfor (var i=0; i<text.length; i++) {\r\n\t\t\t\t\t\tvar glyph = this.getGlyph(customFont, text, i);\r\n\t\t\t\t\t\tvar scale = fontSize / customFont.fontFace.unitsPerEm;\r\n\t\t\t\t\t\tctx.translate(this.x, this.y);\r\n\t\t\t\t\t\tctx.scale(scale, -scale);\r\n\t\t\t\t\t\tvar lw = ctx.lineWidth;\r\n\t\t\t\t\t\tctx.lineWidth = ctx.lineWidth * customFont.fontFace.unitsPerEm / fontSize;\r\n\t\t\t\t\t\tif (fontStyle == 'italic') ctx.transform(1, 0, .4, 1, 0, 0);\r\n\t\t\t\t\t\tglyph.render(ctx);\r\n\t\t\t\t\t\tif (fontStyle == 'italic') ctx.transform(1, 0, -.4, 1, 0, 0);\r\n\t\t\t\t\t\tctx.lineWidth = lw;\r\n\t\t\t\t\t\tctx.scale(1/scale, -1/scale);\r\n\t\t\t\t\t\tctx.translate(-this.x, -this.y);\r\n\r\n\t\t\t\t\t\tthis.x += fontSize * (glyph.horizAdvX || customFont.horizAdvX) / customFont.fontFace.unitsPerEm;\r\n\t\t\t\t\t\tif (typeof dx[i] != 'undefined' && !isNaN(dx[i])) {\r\n\t\t\t\t\t\t\tthis.x += dx[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ctx.fillStyle != '') ctx.fillText(svg.compressSpaces(this.getText()), this.x, this.y);\r\n\t\t\t\tif (ctx.strokeStyle != '') ctx.strokeText(svg.compressSpaces(this.getText()), this.x, this.y);\r\n\t\t\t}\r\n\r\n\t\t\tthis.getText = function() {\r\n\t\t\t\t// OVERRIDE ME\r\n\t\t\t}\r\n\r\n\t\t\tthis.measureTextRecursive = function(ctx) {\r\n\t\t\t\tvar width = this.measureText(ctx);\r\n\t\t\t\tfor (var i=0; i<this.children.length; i++) {\r\n\t\t\t\t\twidth += this.children[i].measureTextRecursive(ctx);\r\n\t\t\t\t}\r\n\t\t\t\treturn width;\r\n\t\t\t}\r\n\r\n\t\t\tthis.measureText = function(ctx) {\r\n\t\t\t\tvar customFont = this.parent.style('font-family').getDefinition();\r\n\t\t\t\tif (customFont != null) {\r\n\t\t\t\t\tvar fontSize = this.parent.style('font-size').numValueOrDefault(svg.Font.Parse(svg.ctx.font).fontSize);\r\n\t\t\t\t\tvar measure = 0;\r\n\t\t\t\t\tvar text = this.getText();\r\n\t\t\t\t\tif (customFont.isRTL) text = text.split(\"\").reverse().join(\"\");\r\n\t\t\t\t\tvar dx = svg.ToNumberArray(this.parent.attribute('dx').value);\r\n\t\t\t\t\tfor (var i=0; i<text.length; i++) {\r\n\t\t\t\t\t\tvar glyph = this.getGlyph(customFont, text, i);\r\n\t\t\t\t\t\tmeasure += (glyph.horizAdvX || customFont.horizAdvX) * fontSize / customFont.fontFace.unitsPerEm;\r\n\t\t\t\t\t\tif (typeof dx[i] != 'undefined' && !isNaN(dx[i])) {\r\n\t\t\t\t\t\t\tmeasure += dx[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn measure;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar textToMeasure = svg.compressSpaces(this.getText());\r\n\t\t\t\tif (!ctx.measureText) return textToMeasure.length * 10;\r\n\r\n\t\t\t\tctx.save();\r\n\t\t\t\tthis.setContext(ctx);\r\n\t\t\t\tvar width = ctx.measureText(textToMeasure).width;\r\n\t\t\t\tctx.restore();\r\n\t\t\t\treturn width;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.TextElementBase.prototype = new svg.Element.RenderedElementBase;\r\n\r\n\t\t// tspan\r\n\t\tsvg.Element.tspan = function(node) {\r\n\t\t\tthis.captureTextNodes = true;\r\n\t\t\tthis.base = svg.Element.TextElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.text = svg.compressSpaces(node.value || node.text || node.textContent || '');\r\n\t\t\tthis.getText = function() {\r\n\t\t\t\t// if this node has children, then they own the text\r\n\t\t\t\tif (this.children.length > 0) { return ''; }\r\n\t\t\t\treturn this.text;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.tspan.prototype = new svg.Element.TextElementBase;\r\n\r\n\t\t// tref\r\n\t\tsvg.Element.tref = function(node) {\r\n\t\t\tthis.base = svg.Element.TextElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.getText = function() {\r\n\t\t\t\tvar element = this.getHrefAttribute().getDefinition();\r\n\t\t\t\tif (element != null) return element.children[0].getText();\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.tref.prototype = new svg.Element.TextElementBase;\r\n\r\n\t\t// a element\r\n\t\tsvg.Element.a = function(node) {\r\n\t\t\tthis.base = svg.Element.TextElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.hasText = node.childNodes.length > 0;\r\n\t\t\tfor (var i=0; i<node.childNodes.length; i++) {\r\n\t\t\t\tif (node.childNodes[i].nodeType != 3) this.hasText = false;\r\n\t\t\t}\r\n\r\n\t\t\t// this might contain text\r\n\t\t\tthis.text = this.hasText ? node.childNodes[0].value : '';\r\n\t\t\tthis.getText = function() {\r\n\t\t\t\treturn this.text;\r\n\t\t\t}\r\n\r\n\t\t\tthis.baseRenderChildren = this.renderChildren;\r\n\t\t\tthis.renderChildren = function(ctx) {\r\n\t\t\t\tif (this.hasText) {\r\n\t\t\t\t\t// render as text element\r\n\t\t\t\t\tthis.baseRenderChildren(ctx);\r\n\t\t\t\t\tvar fontSize = new svg.Property('fontSize', svg.Font.Parse(svg.ctx.font).fontSize);\r\n\t\t\t\t\tsvg.Mouse.checkBoundingBox(this, new svg.BoundingBox(this.x, this.y - fontSize.toPixels('y'), this.x + this.measureText(ctx), this.y));\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.children.length > 0) {\r\n\t\t\t\t\t// render as temporary group\r\n\t\t\t\t\tvar g = new svg.Element.g();\r\n\t\t\t\t\tg.children = this.children;\r\n\t\t\t\t\tg.parent = this;\r\n\t\t\t\t\tg.render(ctx);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.onclick = function() {\r\n\t\t\t\twindow.open(this.getHrefAttribute().value);\r\n\t\t\t}\r\n\r\n\t\t\tthis.onmousemove = function() {\r\n\t\t\t\tsvg.ctx.canvas.style.cursor = 'pointer';\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.a.prototype = new svg.Element.TextElementBase;\r\n\r\n\t\t// image element\r\n\t\tsvg.Element.image = function(node) {\r\n\t\t\tthis.base = svg.Element.RenderedElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tvar href = this.getHrefAttribute().value;\r\n\t\t\tif (href == '') { return; }\r\n\t\t\tvar isSvg = href.match(/\\.svg$/)\r\n\r\n\t\t\tsvg.Images.push(this);\r\n\t\t\tthis.loaded = false;\r\n\t\t\tif (!isSvg) {\r\n\t\t\t\tthis.img = document.createElement('img');\r\n\t\t\t\tif (svg.opts['useCORS'] == true) { this.img.crossOrigin = 'Anonymous'; }\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tthis.img.onload = function() { self.loaded = true; }\r\n\t\t\t\tthis.img.onerror = function() { svg.log('ERROR: image \"' + href + '\" not found'); self.loaded = true; }\r\n\t\t\t\tthis.img.src = href;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.img = svg.ajax(href);\r\n\t\t\t\tthis.loaded = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderChildren = function(ctx) {\r\n\t\t\t\tvar x = this.attribute('x').toPixels('x');\r\n\t\t\t\tvar y = this.attribute('y').toPixels('y');\r\n\r\n\t\t\t\tvar width = this.attribute('width').toPixels('x');\r\n\t\t\t\tvar height = this.attribute('height').toPixels('y');\r\n\t\t\t\tif (width == 0 || height == 0) return;\r\n\r\n\t\t\t\tctx.save();\r\n\t\t\t\tif (isSvg) {\r\n\t\t\t\t\tctx.drawSvg(this.img, x, y, width, height);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tctx.translate(x, y);\r\n\t\t\t\t\tsvg.AspectRatio(ctx,\r\n\t\t\t\t\t\t\t\t\tthis.attribute('preserveAspectRatio').value,\r\n\t\t\t\t\t\t\t\t\twidth,\r\n\t\t\t\t\t\t\t\t\tthis.img.width,\r\n\t\t\t\t\t\t\t\t\theight,\r\n\t\t\t\t\t\t\t\t\tthis.img.height,\r\n\t\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\t\t0);\r\n\t\t\t\t\tctx.drawImage(this.img, 0, 0);\r\n\t\t\t\t}\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\r\n\t\t\tthis.getBoundingBox = function() {\r\n\t\t\t\tvar x = this.attribute('x').toPixels('x');\r\n\t\t\t\tvar y = this.attribute('y').toPixels('y');\r\n\t\t\t\tvar width = this.attribute('width').toPixels('x');\r\n\t\t\t\tvar height = this.attribute('height').toPixels('y');\r\n\t\t\t\treturn new svg.BoundingBox(x, y, x + width, y + height);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.image.prototype = new svg.Element.RenderedElementBase;\r\n\r\n\t\t// group element\r\n\t\tsvg.Element.g = function(node) {\r\n\t\t\tthis.base = svg.Element.RenderedElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.getBoundingBox = function() {\r\n\t\t\t\tvar bb = new svg.BoundingBox();\r\n\t\t\t\tfor (var i=0; i<this.children.length; i++) {\r\n\t\t\t\t\tbb.addBoundingBox(this.children[i].getBoundingBox());\r\n\t\t\t\t}\r\n\t\t\t\treturn bb;\r\n\t\t\t};\r\n\t\t}\r\n\t\tsvg.Element.g.prototype = new svg.Element.RenderedElementBase;\r\n\r\n\t\t// symbol element\r\n\t\tsvg.Element.symbol = function(node) {\r\n\t\t\tthis.base = svg.Element.RenderedElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.render = function(ctx) {\r\n\t\t\t\t// NO RENDER\r\n\t\t\t};\r\n\t\t}\r\n\t\tsvg.Element.symbol.prototype = new svg.Element.RenderedElementBase;\r\n\r\n\t\t// style element\r\n\t\tsvg.Element.style = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\t// text, or spaces then CDATA\r\n\t\t\tvar css = ''\r\n\t\t\tfor (var i=0; i<node.childNodes.length; i++) {\r\n\t\t\t  css += node.childNodes[i].data;\r\n\t\t\t}\r\n\t\t\tcss = css.replace(/(\\/\\*([^*]|[\\r\\n]|(\\*+([^*\\/]|[\\r\\n])))*\\*+\\/)|(^[\\s]*\\/\\/.*)/gm, ''); // remove comments\r\n\t\t\tcss = svg.compressSpaces(css); // replace whitespace\r\n\t\t\tvar cssDefs = css.split('}');\r\n\t\t\tfor (var i=0; i<cssDefs.length; i++) {\r\n\t\t\t\tif (svg.trim(cssDefs[i]) != '') {\r\n\t\t\t\t\tvar cssDef = cssDefs[i].split('{');\r\n\t\t\t\t\tvar cssClasses = cssDef[0].split(',');\r\n\t\t\t\t\tvar cssProps = cssDef[1].split(';');\r\n\t\t\t\t\tfor (var j=0; j<cssClasses.length; j++) {\r\n\t\t\t\t\t\tvar cssClass = svg.trim(cssClasses[j]);\r\n\t\t\t\t\t\tif (cssClass != '') {\r\n\t\t\t\t\t\t\tvar props = svg.Styles[cssClass] || {};\r\n\t\t\t\t\t\t\tfor (var k=0; k<cssProps.length; k++) {\r\n\t\t\t\t\t\t\t\tvar prop = cssProps[k].indexOf(':');\r\n\t\t\t\t\t\t\t\tvar name = cssProps[k].substr(0, prop);\r\n\t\t\t\t\t\t\t\tvar value = cssProps[k].substr(prop + 1, cssProps[k].length - prop);\r\n\t\t\t\t\t\t\t\tif (name != null && value != null) {\r\n\t\t\t\t\t\t\t\t\tprops[svg.trim(name)] = new svg.Property(svg.trim(name), svg.trim(value));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsvg.Styles[cssClass] = props;\r\n\t\t\t\t\t\t\tsvg.StylesSpecificity[cssClass] = getSelectorSpecificity(cssClass);\r\n\t\t\t\t\t\t\tif (cssClass == '@font-face') {\r\n\t\t\t\t\t\t\t\tvar fontFamily = props['font-family'].value.replace(/\"/g,'');\r\n\t\t\t\t\t\t\t\tvar srcs = props['src'].value.split(',');\r\n\t\t\t\t\t\t\t\tfor (var s=0; s<srcs.length; s++) {\r\n\t\t\t\t\t\t\t\t\tif (srcs[s].indexOf('format(\"svg\")') > 0) {\r\n\t\t\t\t\t\t\t\t\t\tvar urlStart = srcs[s].indexOf('url');\r\n\t\t\t\t\t\t\t\t\t\tvar urlEnd = srcs[s].indexOf(')', urlStart);\r\n\t\t\t\t\t\t\t\t\t\tvar url = srcs[s].substr(urlStart + 5, urlEnd - urlStart - 6);\r\n\t\t\t\t\t\t\t\t\t\tvar doc = svg.parseXml(svg.ajax(url));\r\n\t\t\t\t\t\t\t\t\t\tvar fonts = doc.getElementsByTagName('font');\r\n\t\t\t\t\t\t\t\t\t\tfor (var f=0; f<fonts.length; f++) {\r\n\t\t\t\t\t\t\t\t\t\t\tvar font = svg.CreateElement(fonts[f]);\r\n\t\t\t\t\t\t\t\t\t\t\tsvg.Definitions[fontFamily] = font;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.style.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// use element\r\n\t\tsvg.Element.use = function(node) {\r\n\t\t\tthis.base = svg.Element.RenderedElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.baseSetContext = this.setContext;\r\n\t\t\tthis.setContext = function(ctx) {\r\n\t\t\t\tthis.baseSetContext(ctx);\r\n\t\t\t\tif (this.attribute('x').hasValue()) ctx.translate(this.attribute('x').toPixels('x'), 0);\r\n\t\t\t\tif (this.attribute('y').hasValue()) ctx.translate(0, this.attribute('y').toPixels('y'));\r\n\t\t\t}\r\n\r\n\t\t\tvar element = this.getHrefAttribute().getDefinition();\r\n\r\n\t\t\tthis.path = function(ctx) {\r\n\t\t\t\tif (element != null) element.path(ctx);\r\n\t\t\t}\r\n\r\n\t\t\tthis.getBoundingBox = function() {\r\n\t\t\t\tif (element != null) return element.getBoundingBox();\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderChildren = function(ctx) {\r\n\t\t\t\tif (element != null) {\r\n\t\t\t\t\tvar tempSvg = element;\r\n\t\t\t\t\tif (element.type == 'symbol') {\r\n\t\t\t\t\t\t// render me using a temporary svg element in symbol cases (http://www.w3.org/TR/SVG/struct.html#UseElement)\r\n\t\t\t\t\t\ttempSvg = new svg.Element.svg();\r\n\t\t\t\t\t\ttempSvg.type = 'svg';\r\n\t\t\t\t\t\ttempSvg.attributes['viewBox'] = new svg.Property('viewBox', element.attribute('viewBox').value);\r\n\t\t\t\t\t\ttempSvg.attributes['preserveAspectRatio'] = new svg.Property('preserveAspectRatio', element.attribute('preserveAspectRatio').value);\r\n\t\t\t\t\t\ttempSvg.attributes['overflow'] = new svg.Property('overflow', element.attribute('overflow').value);\r\n\t\t\t\t\t\ttempSvg.children = element.children;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tempSvg.type == 'svg') {\r\n\t\t\t\t\t\t// if symbol or svg, inherit width/height from me\r\n\t\t\t\t\t\tif (this.attribute('width').hasValue()) tempSvg.attributes['width'] = new svg.Property('width', this.attribute('width').value);\r\n\t\t\t\t\t\tif (this.attribute('height').hasValue()) tempSvg.attributes['height'] = new svg.Property('height', this.attribute('height').value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar oldParent = tempSvg.parent;\r\n\t\t\t\t\ttempSvg.parent = null;\r\n\t\t\t\t\ttempSvg.render(ctx);\r\n\t\t\t\t\ttempSvg.parent = oldParent;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.use.prototype = new svg.Element.RenderedElementBase;\r\n\r\n\t\t// mask element\r\n\t\tsvg.Element.mask = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.apply = function(ctx, element) {\r\n\t\t\t\t// render as temp svg\r\n\t\t\t\tvar x = this.attribute('x').toPixels('x');\r\n\t\t\t\tvar y = this.attribute('y').toPixels('y');\r\n\t\t\t\tvar width = this.attribute('width').toPixels('x');\r\n\t\t\t\tvar height = this.attribute('height').toPixels('y');\r\n\r\n\t\t\t\tif (width == 0 && height == 0) {\r\n\t\t\t\t\tvar bb = new svg.BoundingBox();\r\n\t\t\t\t\tfor (var i=0; i<this.children.length; i++) {\r\n\t\t\t\t\t\tbb.addBoundingBox(this.children[i].getBoundingBox());\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar x = Math.floor(bb.x1);\r\n\t\t\t\t\tvar y = Math.floor(bb.y1);\r\n\t\t\t\t\tvar width = Math.floor(bb.width());\r\n\t\t\t\t\tvar\theight = Math.floor(bb.height());\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// temporarily remove mask to avoid recursion\r\n\t\t\t\tvar mask = element.attribute('mask').value;\r\n\t\t\t\telement.attribute('mask').value = '';\r\n\r\n\t\t\t\t\tvar cMask = document.createElement('canvas');\r\n\t\t\t\t\tcMask.width = x + width;\r\n\t\t\t\t\tcMask.height = y + height;\r\n\t\t\t\t\tvar maskCtx = cMask.getContext('2d');\r\n\t\t\t\t\tthis.renderChildren(maskCtx);\r\n\r\n\t\t\t\t\tvar c = document.createElement('canvas');\r\n\t\t\t\t\tc.width = x + width;\r\n\t\t\t\t\tc.height = y + height;\r\n\t\t\t\t\tvar tempCtx = c.getContext('2d');\r\n\t\t\t\t\telement.render(tempCtx);\r\n\t\t\t\t\ttempCtx.globalCompositeOperation = 'destination-in';\r\n\t\t\t\t\ttempCtx.fillStyle = maskCtx.createPattern(cMask, 'no-repeat');\r\n\t\t\t\t\ttempCtx.fillRect(0, 0, x + width, y + height);\r\n\r\n\t\t\t\t\tctx.fillStyle = tempCtx.createPattern(c, 'no-repeat');\r\n\t\t\t\t\tctx.fillRect(0, 0, x + width, y + height);\r\n\r\n\t\t\t\t// reassign mask\r\n\t\t\t\telement.attribute('mask').value = mask;\r\n\t\t\t}\r\n\r\n\t\t\tthis.render = function(ctx) {\r\n\t\t\t\t// NO RENDER\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.mask.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// clip element\r\n\t\tsvg.Element.clipPath = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.apply = function(ctx) {\r\n\t\t\t\tvar oldBeginPath = CanvasRenderingContext2D.prototype.beginPath;\r\n\t\t\t\tCanvasRenderingContext2D.prototype.beginPath = function () { };\r\n\r\n\t\t\t\tvar oldClosePath = CanvasRenderingContext2D.prototype.closePath;\r\n\t\t\t\tCanvasRenderingContext2D.prototype.closePath = function () { };\r\n\r\n\t\t\t\toldBeginPath.call(ctx);\r\n\t\t\t\tfor (var i=0; i<this.children.length; i++) {\r\n\t\t\t\t\tvar child = this.children[i];\r\n\t\t\t\t\tif (typeof child.path != 'undefined') {\r\n\t\t\t\t\t\tvar transform = null;\r\n\t\t\t\t\t\tif (child.style('transform', false, true).hasValue()) {\r\n\t\t\t\t\t\t\ttransform = new svg.Transform(child.style('transform', false, true).value);\r\n\t\t\t\t\t\t\ttransform.apply(ctx);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchild.path(ctx);\r\n\t\t\t\t\t\tCanvasRenderingContext2D.prototype.closePath = oldClosePath;\r\n\t\t\t\t\t\tif (transform) { transform.unapply(ctx); }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\toldClosePath.call(ctx);\r\n\t\t\t\tctx.clip();\r\n\r\n\t\t\t\tCanvasRenderingContext2D.prototype.beginPath = oldBeginPath;\r\n\t\t\t\tCanvasRenderingContext2D.prototype.closePath = oldClosePath;\r\n\t\t\t}\r\n\r\n\t\t\tthis.render = function(ctx) {\r\n\t\t\t\t// NO RENDER\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.clipPath.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// filters\r\n\t\tsvg.Element.filter = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.apply = function(ctx, element) {\r\n\t\t\t\t// render as temp svg\r\n\t\t\t\tvar bb = element.getBoundingBox();\r\n\t\t\t\tvar x = Math.floor(bb.x1);\r\n\t\t\t\tvar y = Math.floor(bb.y1);\r\n\t\t\t\tvar width = Math.floor(bb.width());\r\n\t\t\t\tvar\theight = Math.floor(bb.height());\r\n\r\n\t\t\t\t// temporarily remove filter to avoid recursion\r\n\t\t\t\tvar filter = element.style('filter').value;\r\n\t\t\t\telement.style('filter').value = '';\r\n\r\n\t\t\t\tvar px = 0, py = 0;\r\n\t\t\t\tfor (var i=0; i<this.children.length; i++) {\r\n\t\t\t\t\tvar efd = this.children[i].extraFilterDistance || 0;\r\n\t\t\t\t\tpx = Math.max(px, efd);\r\n\t\t\t\t\tpy = Math.max(py, efd);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar c = document.createElement('canvas');\r\n\t\t\t\tc.width = width + 2*px;\r\n\t\t\t\tc.height = height + 2*py;\r\n\t\t\t\tvar tempCtx = c.getContext('2d');\r\n\t\t\t\ttempCtx.translate(-x + px, -y + py);\r\n\t\t\t\telement.render(tempCtx);\r\n\r\n\t\t\t\t// apply filters\r\n\t\t\t\tfor (var i=0; i<this.children.length; i++) {\r\n\t\t\t\t\tif (typeof this.children[i].apply == 'function') {\r\n\t\t\t\t\t\tthis.children[i].apply(tempCtx, 0, 0, width + 2*px, height + 2*py);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render on me\r\n\t\t\t\tctx.drawImage(c, 0, 0, width + 2*px, height + 2*py, x - px, y - py, width + 2*px, height + 2*py);\r\n\r\n\t\t\t\t// reassign filter\r\n\t\t\t\telement.style('filter', true).value = filter;\r\n\t\t\t}\r\n\r\n\t\t\tthis.render = function(ctx) {\r\n\t\t\t\t// NO RENDER\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.filter.prototype = new svg.Element.ElementBase;\r\n\r\n\t\tsvg.Element.feMorphology = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.apply = function(ctx, x, y, width, height) {\r\n\t\t\t\t// TODO: implement\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.feMorphology.prototype = new svg.Element.ElementBase;\r\n\r\n\t\tsvg.Element.feComposite = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.apply = function(ctx, x, y, width, height) {\r\n\t\t\t\t// TODO: implement\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.feComposite.prototype = new svg.Element.ElementBase;\r\n\r\n\t\tsvg.Element.feColorMatrix = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tvar matrix = svg.ToNumberArray(this.attribute('values').value);\r\n\t\t\tswitch (this.attribute('type').valueOrDefault('matrix')) { // http://www.w3.org/TR/SVG/filters.html#feColorMatrixElement\r\n\t\t\t\tcase 'saturate':\r\n\t\t\t\t\tvar s = matrix[0];\r\n\t\t\t\t\tmatrix = [0.213+0.787*s,0.715-0.715*s,0.072-0.072*s,0,0,\r\n\t\t\t\t\t\t\t  0.213-0.213*s,0.715+0.285*s,0.072-0.072*s,0,0,\r\n\t\t\t\t\t\t\t  0.213-0.213*s,0.715-0.715*s,0.072+0.928*s,0,0,\r\n\t\t\t\t\t\t\t  0,0,0,1,0,\r\n\t\t\t\t\t\t\t  0,0,0,0,1];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hueRotate':\r\n\t\t\t\t\tvar a = matrix[0] * Math.PI / 180.0;\r\n\t\t\t\t\tvar c = function (m1,m2,m3) { return m1 + Math.cos(a)*m2 + Math.sin(a)*m3; };\r\n\t\t\t\t\tmatrix = [c(0.213,0.787,-0.213),c(0.715,-0.715,-0.715),c(0.072,-0.072,0.928),0,0,\r\n\t\t\t\t\t\t\t  c(0.213,-0.213,0.143),c(0.715,0.285,0.140),c(0.072,-0.072,-0.283),0,0,\r\n\t\t\t\t\t\t\t  c(0.213,-0.213,-0.787),c(0.715,-0.715,0.715),c(0.072,0.928,0.072),0,0,\r\n\t\t\t\t\t\t\t  0,0,0,1,0,\r\n\t\t\t\t\t\t\t  0,0,0,0,1];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'luminanceToAlpha':\r\n\t\t\t\t\tmatrix = [0,0,0,0,0,\r\n\t\t\t\t\t\t\t  0,0,0,0,0,\r\n\t\t\t\t\t\t\t  0,0,0,0,0,\r\n\t\t\t\t\t\t\t  0.2125,0.7154,0.0721,0,0,\r\n\t\t\t\t\t\t\t  0,0,0,0,1];\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tfunction imGet(img, x, y, width, height, rgba) {\r\n\t\t\t\treturn img[y*width*4 + x*4 + rgba];\r\n\t\t\t}\r\n\r\n\t\t\tfunction imSet(img, x, y, width, height, rgba, val) {\r\n\t\t\t\timg[y*width*4 + x*4 + rgba] = val;\r\n\t\t\t}\r\n\r\n\t\t\tfunction m(i, v) {\r\n\t\t\t\tvar mi = matrix[i];\r\n\t\t\t\treturn mi * (mi < 0 ? v - 255 : v);\r\n\t\t\t}\r\n\r\n\t\t\tthis.apply = function(ctx, x, y, width, height) {\r\n\t\t\t\t// assuming x==0 && y==0 for now\r\n\t\t\t\tvar srcData = ctx.getImageData(0, 0, width, height);\r\n\t\t\t\tfor (var y = 0; y < height; y++) {\r\n\t\t\t\t\tfor (var x = 0; x < width; x++) {\r\n\t\t\t\t\t\tvar r = imGet(srcData.data, x, y, width, height, 0);\r\n\t\t\t\t\t\tvar g = imGet(srcData.data, x, y, width, height, 1);\r\n\t\t\t\t\t\tvar b = imGet(srcData.data, x, y, width, height, 2);\r\n\t\t\t\t\t\tvar a = imGet(srcData.data, x, y, width, height, 3);\r\n\t\t\t\t\t\timSet(srcData.data, x, y, width, height, 0, m(0,r)+m(1,g)+m(2,b)+m(3,a)+m(4,1));\r\n\t\t\t\t\t\timSet(srcData.data, x, y, width, height, 1, m(5,r)+m(6,g)+m(7,b)+m(8,a)+m(9,1));\r\n\t\t\t\t\t\timSet(srcData.data, x, y, width, height, 2, m(10,r)+m(11,g)+m(12,b)+m(13,a)+m(14,1));\r\n\t\t\t\t\t\timSet(srcData.data, x, y, width, height, 3, m(15,r)+m(16,g)+m(17,b)+m(18,a)+m(19,1));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tctx.clearRect(0, 0, width, height);\r\n\t\t\t\tctx.putImageData(srcData, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.feColorMatrix.prototype = new svg.Element.ElementBase;\r\n\r\n\t\tsvg.Element.feGaussianBlur = function(node) {\r\n\t\t\tthis.base = svg.Element.ElementBase;\r\n\t\t\tthis.base(node);\r\n\r\n\t\t\tthis.blurRadius = Math.floor(this.attribute('stdDeviation').numValue());\r\n\t\t\tthis.extraFilterDistance = this.blurRadius;\r\n\r\n\t\t\tthis.apply = function(ctx, x, y, width, height) {\r\n\t\t\t\tif (typeof stackBlur.canvasRGBA == 'undefined') {\r\n\t\t\t\t\tsvg.log('ERROR: StackBlur.js must be included for blur to work');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// StackBlur requires canvas be on document\r\n\t\t\t\tctx.canvas.id = svg.UniqueId();\r\n\t\t\t\tctx.canvas.style.display = 'none';\r\n\t\t\t\tdocument.body.appendChild(ctx.canvas);\r\n\t\t\t\tstackBlur.canvasRGBA(ctx.canvas.id, x, y, width, height, this.blurRadius);\r\n\t\t\t\tdocument.body.removeChild(ctx.canvas);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsvg.Element.feGaussianBlur.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// title element, do nothing\r\n\t\tsvg.Element.title = function(node) {\r\n\t\t}\r\n\t\tsvg.Element.title.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// desc element, do nothing\r\n\t\tsvg.Element.desc = function(node) {\r\n\t\t}\r\n\t\tsvg.Element.desc.prototype = new svg.Element.ElementBase;\r\n\r\n\t\tsvg.Element.MISSING = function(node) {\r\n\t\t\tsvg.log('ERROR: Element \\'' + node.nodeName + '\\' not yet implemented.');\r\n\t\t}\r\n\t\tsvg.Element.MISSING.prototype = new svg.Element.ElementBase;\r\n\r\n\t\t// element factory\r\n\t\tsvg.CreateElement = function(node) {\r\n\t\t\tvar className = node.nodeName.replace(/^[^:]+:/,''); // remove namespace\r\n\t\t\tclassName = className.replace(/\\-/g,''); // remove dashes\r\n\t\t\tvar e = null;\r\n\t\t\tif (typeof svg.Element[className] != 'undefined') {\r\n\t\t\t\te = new svg.Element[className](node);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\te = new svg.Element.MISSING(node);\r\n\t\t\t}\r\n\r\n\t\t\te.type = node.nodeName;\r\n\t\t\treturn e;\r\n\t\t}\r\n\r\n\t\t// load from url\r\n\t\tsvg.load = function(ctx, url) {\r\n\t\t\tsvg.loadXml(ctx, svg.ajax(url));\r\n\t\t}\r\n\r\n\t\t// load from xml\r\n\t\tsvg.loadXml = function(ctx, xml) {\r\n\t\t\tsvg.loadXmlDoc(ctx, svg.parseXml(xml));\r\n\t\t}\r\n\r\n\t\tsvg.loadXmlDoc = function(ctx, dom) {\r\n\t\t\tsvg.init(ctx);\r\n\r\n\t\t\tvar mapXY = function(p) {\r\n\t\t\t\tvar e = ctx.canvas;\r\n\t\t\t\twhile (e) {\r\n\t\t\t\t\tp.x -= e.offsetLeft;\r\n\t\t\t\t\tp.y -= e.offsetTop;\r\n\t\t\t\t\te = e.offsetParent;\r\n\t\t\t\t}\r\n\t\t\t\tif (window.scrollX) p.x += window.scrollX;\r\n\t\t\t\tif (window.scrollY) p.y += window.scrollY;\r\n\t\t\t\treturn p;\r\n\t\t\t}\r\n\r\n\t\t\t// bind mouse\r\n\t\t\tif (svg.opts['ignoreMouse'] != true) {\r\n\t\t\t\tctx.canvas.onclick = function(e) {\r\n\t\t\t\t\tvar p = mapXY(new svg.Point(e != null ? e.clientX : event.clientX, e != null ? e.clientY : event.clientY));\r\n\t\t\t\t\tsvg.Mouse.onclick(p.x, p.y);\r\n\t\t\t\t};\r\n\t\t\t\tctx.canvas.onmousemove = function(e) {\r\n\t\t\t\t\tvar p = mapXY(new svg.Point(e != null ? e.clientX : event.clientX, e != null ? e.clientY : event.clientY));\r\n\t\t\t\t\tsvg.Mouse.onmousemove(p.x, p.y);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvar e = svg.CreateElement(dom.documentElement);\r\n\t\t\te.root = true;\r\n\t\t\te.addStylesFromStyleDefinition();\r\n\r\n\t\t\t// render loop\r\n\t\t\tvar isFirstRender = true;\r\n\t\t\tvar draw = function() {\r\n\t\t\t\tsvg.ViewPort.Clear();\r\n\t\t\t\tif (ctx.canvas.parentNode) svg.ViewPort.SetCurrent(ctx.canvas.parentNode.clientWidth, ctx.canvas.parentNode.clientHeight);\r\n\r\n\t\t\t\tif (svg.opts['ignoreDimensions'] != true) {\r\n\t\t\t\t\t// set canvas size\r\n\t\t\t\t\tif (e.style('width').hasValue()) {\r\n\t\t\t\t\t\tctx.canvas.width = e.style('width').toPixels('x');\r\n\t\t\t\t\t\tctx.canvas.style.width = ctx.canvas.width + 'px';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (e.style('height').hasValue()) {\r\n\t\t\t\t\t\tctx.canvas.height = e.style('height').toPixels('y');\r\n\t\t\t\t\t\tctx.canvas.style.height = ctx.canvas.height + 'px';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar cWidth = ctx.canvas.clientWidth || ctx.canvas.width;\r\n\t\t\t\tvar cHeight = ctx.canvas.clientHeight || ctx.canvas.height;\r\n\t\t\t\tif (svg.opts['ignoreDimensions'] == true && e.style('width').hasValue() && e.style('height').hasValue()) {\r\n\t\t\t\t\tcWidth = e.style('width').toPixels('x');\r\n\t\t\t\t\tcHeight = e.style('height').toPixels('y');\r\n\t\t\t\t}\r\n\t\t\t\tsvg.ViewPort.SetCurrent(cWidth, cHeight);\r\n\r\n\t\t\t\tif (svg.opts['offsetX'] != null) e.attribute('x', true).value = svg.opts['offsetX'];\r\n\t\t\t\tif (svg.opts['offsetY'] != null) e.attribute('y', true).value = svg.opts['offsetY'];\r\n\t\t\t\tif (svg.opts['scaleWidth'] != null || svg.opts['scaleHeight'] != null) {\r\n\t\t\t\t\tvar xRatio = null, yRatio = null, viewBox = svg.ToNumberArray(e.attribute('viewBox').value);\r\n\r\n\t\t\t\t\tif (svg.opts['scaleWidth'] != null) {\r\n\t\t\t\t\t\tif (e.attribute('width').hasValue()) xRatio = e.attribute('width').toPixels('x') / svg.opts['scaleWidth'];\r\n\t\t\t\t\t\telse if (!isNaN(viewBox[2])) xRatio = viewBox[2] / svg.opts['scaleWidth'];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (svg.opts['scaleHeight'] != null) {\r\n\t\t\t\t\t\tif (e.attribute('height').hasValue()) yRatio = e.attribute('height').toPixels('y') / svg.opts['scaleHeight'];\r\n\t\t\t\t\t\telse if (!isNaN(viewBox[3])) yRatio = viewBox[3] / svg.opts['scaleHeight'];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xRatio == null) { xRatio = yRatio; }\r\n\t\t\t\t\tif (yRatio == null) { yRatio = xRatio; }\r\n\r\n\t\t\t\t\te.attribute('width', true).value = svg.opts['scaleWidth'];\r\n\t\t\t\t\te.attribute('height', true).value = svg.opts['scaleHeight'];\r\n\t\t\t\t\te.style('transform', true, true).value += ' scale('+(1.0/xRatio)+','+(1.0/yRatio)+')';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// clear and render\r\n\t\t\t\tif (svg.opts['ignoreClear'] != true) {\r\n\t\t\t\t\tctx.clearRect(0, 0, cWidth, cHeight);\r\n\t\t\t\t}\r\n\t\t\t\te.render(ctx);\r\n\t\t\t\tif (isFirstRender) {\r\n\t\t\t\t\tisFirstRender = false;\r\n\t\t\t\t\tif (typeof svg.opts['renderCallback'] == 'function') svg.opts['renderCallback'](dom);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar waitingForImages = true;\r\n\t\t\tif (svg.ImagesLoaded()) {\r\n\t\t\t\twaitingForImages = false;\r\n\t\t\t\tdraw();\r\n\t\t\t}\r\n\t\t\tsvg.intervalID = setInterval(function() {\r\n\t\t\t\tvar needUpdate = false;\r\n\r\n\t\t\t\tif (waitingForImages && svg.ImagesLoaded()) {\r\n\t\t\t\t\twaitingForImages = false;\r\n\t\t\t\t\tneedUpdate = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// need update from mouse events?\r\n\t\t\t\tif (svg.opts['ignoreMouse'] != true) {\r\n\t\t\t\t\tneedUpdate = needUpdate | svg.Mouse.hasEvents();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// need update from animations?\r\n\t\t\t\tif (svg.opts['ignoreAnimation'] != true) {\r\n\t\t\t\t\tfor (var i=0; i<svg.Animations.length; i++) {\r\n\t\t\t\t\t\tneedUpdate = needUpdate | svg.Animations[i].update(1000 / svg.FRAMERATE);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// need update from redraw?\r\n\t\t\t\tif (typeof svg.opts['forceRedraw'] == 'function') {\r\n\t\t\t\t\tif (svg.opts['forceRedraw']() == true) needUpdate = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render if needed\r\n\t\t\t\tif (needUpdate) {\r\n\t\t\t\t\tdraw();\r\n\t\t\t\t\tsvg.Mouse.runEvents(); // run and clear our events\r\n\t\t\t\t}\r\n\t\t\t}, 1000 / svg.FRAMERATE);\r\n\t\t}\r\n\r\n\t\tsvg.stop = function() {\r\n\t\t\tif (svg.intervalID) {\r\n\t\t\t\tclearInterval(svg.intervalID);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsvg.Mouse = new (function() {\r\n\t\t\tthis.events = [];\r\n\t\t\tthis.hasEvents = function() { return this.events.length != 0; }\r\n\r\n\t\t\tthis.onclick = function(x, y) {\r\n\t\t\t\tthis.events.push({ type: 'onclick', x: x, y: y,\r\n\t\t\t\t\trun: function(e) { if (e.onclick) e.onclick(); }\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.onmousemove = function(x, y) {\r\n\t\t\t\tthis.events.push({ type: 'onmousemove', x: x, y: y,\r\n\t\t\t\t\trun: function(e) { if (e.onmousemove) e.onmousemove(); }\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.eventElements = [];\r\n\r\n\t\t\tthis.checkPath = function(element, ctx) {\r\n\t\t\t\tfor (var i=0; i<this.events.length; i++) {\r\n\t\t\t\t\tvar e = this.events[i];\r\n\t\t\t\t\tif (ctx.isPointInPath && ctx.isPointInPath(e.x, e.y)) this.eventElements[i] = element;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.checkBoundingBox = function(element, bb) {\r\n\t\t\t\tfor (var i=0; i<this.events.length; i++) {\r\n\t\t\t\t\tvar e = this.events[i];\r\n\t\t\t\t\tif (bb.isPointInBox(e.x, e.y)) this.eventElements[i] = element;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.runEvents = function() {\r\n\t\t\t\tsvg.ctx.canvas.style.cursor = '';\r\n\r\n\t\t\t\tfor (var i=0; i<this.events.length; i++) {\r\n\t\t\t\t\tvar e = this.events[i];\r\n\t\t\t\t\tvar element = this.eventElements[i];\r\n\t\t\t\t\twhile (element) {\r\n\t\t\t\t\t\te.run(element);\r\n\t\t\t\t\t\telement = element.parent;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// done running, clear\r\n\t\t\t\tthis.events = [];\r\n\t\t\t\tthis.eventElements = [];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn svg;\r\n\t};\r\n\n\tif (typeof CanvasRenderingContext2D  != 'undefined') {\r\n\t\tCanvasRenderingContext2D.prototype.drawSvg = function(s, dx, dy, dw, dh, opts) {\r\n\t\t\tvar cOpts = {\n\t\t\t\tignoreMouse: true,\r\n\t\t\t\tignoreAnimation: true,\r\n\t\t\t\tignoreDimensions: true,\r\n\t\t\t\tignoreClear: true,\r\n\t\t\t\toffsetX: dx,\r\n\t\t\t\toffsetY: dy,\r\n\t\t\t\tscaleWidth: dw,\r\n\t\t\t\tscaleHeight: dh\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(var prop in opts) {\r\n\t\t\t\tif(opts.hasOwnProperty(prop)){\r\n\t\t\t\t\tcOpts[prop] = opts[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcanvg(this.canvas, s, cOpts);\r\n\t\t}\r\n\t}\r\n\r\n\treturn canvg;\r\n\r\n}));\r\n\n},{\"rgbcolor\":134,\"stackblur\":141}],5:[function(_dereq_,module,exports){\nvar dsv = _dereq_('dsv'),\r\n    sexagesimal = _dereq_('sexagesimal');\r\n\r\nfunction isLat(f) { return !!f.match(/(Lat)(itude)?/gi); }\r\nfunction isLon(f) { return !!f.match(/(L)(on|ng)(gitude)?/i); }\r\n\r\nfunction keyCount(o) {\r\n    return (typeof o == 'object') ? Object.keys(o).length : 0;\r\n}\r\n\r\nfunction autoDelimiter(x) {\r\n    var delimiters = [',', ';', '\\t', '|'];\r\n    var results = [];\r\n\r\n    delimiters.forEach(function(delimiter) {\r\n        var res = dsv(delimiter).parse(x);\r\n        if (res.length >= 1) {\r\n            var count = keyCount(res[0]);\r\n            for (var i = 0; i < res.length; i++) {\r\n                if (keyCount(res[i]) !== count) return;\r\n            }\r\n            results.push({\r\n                delimiter: delimiter,\r\n                arity: Object.keys(res[0]).length,\r\n            });\r\n        }\r\n    });\r\n\r\n    if (results.length) {\r\n        return results.sort(function(a, b) {\r\n            return b.arity - a.arity;\r\n        })[0].delimiter;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction auto(x) {\r\n    var delimiter = autoDelimiter(x);\r\n    if (!delimiter) return null;\r\n    return dsv(delimiter).parse(x);\r\n}\r\n\r\nfunction csv2geojson(x, options, callback) {\r\n\r\n    if (!callback) {\r\n        callback = options;\r\n        options = {};\r\n    }\r\n\r\n    options.delimiter = options.delimiter || ',';\r\n\r\n    var latfield = options.latfield || '',\r\n        lonfield = options.lonfield || '',\r\n        crs = options.crs || '';\r\n\r\n    var features = [],\r\n        featurecollection = { type: 'FeatureCollection', features: features };\r\n\r\n    if (crs !== '') {\r\n        featurecollection.crs = { type: 'name', properties: { name: crs } };\r\n    }\r\n\r\n    if (options.delimiter === 'auto' && typeof x == 'string') {\r\n        options.delimiter = autoDelimiter(x);\r\n        if (!options.delimiter) return callback({\r\n            type: 'Error',\r\n            message: 'Could not autodetect delimiter'\r\n        });\r\n    }\r\n\r\n    var parsed = (typeof x == 'string') ? dsv(options.delimiter).parse(x) : x;\r\n\r\n    if (!parsed.length) return callback(null, featurecollection);\r\n\r\n    if (!latfield || !lonfield) {\r\n        for (var f in parsed[0]) {\r\n            if (!latfield && isLat(f)) latfield = f;\r\n            if (!lonfield && isLon(f)) lonfield = f;\r\n        }\r\n        if (!latfield || !lonfield) {\r\n            var fields = [];\r\n            for (var k in parsed[0]) fields.push(k);\r\n            return callback({\r\n                type: 'Error',\r\n                message: 'Latitude and longitude fields not present',\r\n                data: parsed,\r\n                fields: fields\r\n            });\r\n        }\r\n    }\r\n\r\n    var errors = [];\r\n\r\n    for (var i = 0; i < parsed.length; i++) {\r\n        if (parsed[i][lonfield] !== undefined &&\r\n            parsed[i][lonfield] !== undefined) {\r\n\r\n            var lonk = parsed[i][lonfield],\r\n                latk = parsed[i][latfield],\r\n                lonf, latf,\r\n                a;\r\n\r\n            a = sexagesimal(lonk, 'EW');\r\n            if (a) lonk = a;\r\n            a = sexagesimal(latk, 'NS');\r\n            if (a) latk = a;\r\n\r\n            lonf = parseFloat(lonk);\r\n            latf = parseFloat(latk);\r\n\r\n            if (isNaN(lonf) ||\r\n                isNaN(latf)) {\r\n                errors.push({\r\n                    message: 'A row contained an invalid value for latitude or longitude',\r\n                    row: parsed[i]\r\n                });\r\n            } else {\r\n                if (!options.includeLatLon) {\r\n                    delete parsed[i][lonfield];\r\n                    delete parsed[i][latfield];\r\n                }\r\n\r\n                features.push({\r\n                    type: 'Feature',\r\n                    properties: parsed[i],\r\n                    geometry: {\r\n                        type: 'Point',\r\n                        coordinates: [\r\n                            parseFloat(lonf),\r\n                            parseFloat(latf)\r\n                        ]\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    callback(errors.length ? errors: null, featurecollection);\r\n}\r\n\r\nfunction toLine(gj) {\r\n    var features = gj.features;\r\n    var line = {\r\n        type: 'Feature',\r\n        geometry: {\r\n            type: 'LineString',\r\n            coordinates: []\r\n        }\r\n    };\r\n    for (var i = 0; i < features.length; i++) {\r\n        line.geometry.coordinates.push(features[i].geometry.coordinates);\r\n    }\r\n    line.properties = features.reduce(function(aggregatedProperties, newFeature) {\r\n      for (var key in newFeature.properties) {\r\n        if (!aggregatedProperties[key]) {\r\n          aggregatedProperties[key] = [];\r\n        }\r\n        aggregatedProperties[key].push(newFeature.properties[key]);\r\n      }\r\n      return aggregatedProperties;\r\n    }, {});\r\n    return {\r\n        type: 'FeatureCollection',\r\n        features: [line]\r\n    };\r\n}\r\n\r\nfunction toPolygon(gj) {\r\n    var features = gj.features;\r\n    var poly = {\r\n        type: 'Feature',\r\n        geometry: {\r\n            type: 'Polygon',\r\n            coordinates: [[]]\r\n        }\r\n    };\r\n    for (var i = 0; i < features.length; i++) {\r\n        poly.geometry.coordinates[0].push(features[i].geometry.coordinates);\r\n    }\r\n    poly.properties = features.reduce(function(aggregatedProperties, newFeature) {\r\n      for (var key in newFeature.properties) {\r\n        if (!aggregatedProperties[key]) {\r\n          aggregatedProperties[key] = [];\r\n        }\r\n        aggregatedProperties[key].push(newFeature.properties[key]);\r\n      }\r\n      return aggregatedProperties;\r\n    }, {});\r\n    return {\r\n        type: 'FeatureCollection',\r\n        features: [poly]\r\n    };\r\n}\r\n\r\nmodule.exports = {\r\n    isLon: isLon,\r\n    isLat: isLat,\r\n    csv: dsv.csv.parse,\r\n    tsv: dsv.tsv.parse,\r\n    dsv: dsv,\r\n    auto: auto,\r\n    csv2geojson: csv2geojson,\r\n    toLine: toLine,\r\n    toPolygon: toPolygon\r\n};\r\n\n},{\"dsv\":6,\"sexagesimal\":135}],6:[function(_dereq_,module,exports){\n\n\nmodule.exports = new Function(\"dsv.version = \\\"0.0.3\\\";\\n\\ndsv.tsv = dsv(\\\"\\\\t\\\");\\ndsv.csv = dsv(\\\",\\\");\\n\\nfunction dsv(delimiter) {\\n  var dsv = {},\\n      reFormat = new RegExp(\\\"[\\\\\\\"\\\" + delimiter + \\\"\\\\n]\\\"),\\n      delimiterCode = delimiter.charCodeAt(0);\\n\\n  dsv.parse = function(text, f) {\\n    var o;\\n    return dsv.parseRows(text, function(row, i) {\\n      if (o) return o(row, i - 1);\\n      var a = new Function(\\\"d\\\", \\\"return {\\\" + row.map(function(name, i) {\\n        return JSON.stringify(name) + \\\": d[\\\" + i + \\\"]\\\";\\n      }).join(\\\",\\\") + \\\"}\\\");\\n      o = f ? function(row, i) { return f(a(row), i); } : a;\\n    });\\n  };\\n\\n  dsv.parseRows = function(text, f) {\\n    var EOL = {}, // sentinel value for end-of-line\\n        EOF = {}, // sentinel value for end-of-file\\n        rows = [], // output rows\\n        N = text.length,\\n        I = 0, // current character index\\n        n = 0, // the current line number\\n        t, // the current token\\n        eol; // is the current token followed by EOL?\\n\\n    function token() {\\n      if (I >= N) return EOF; // special case: end of file\\n      if (eol) return eol = false, EOL; // special case: end of line\\n\\n      // special case: quotes\\n      var j = I;\\n      if (text.charCodeAt(j) === 34) {\\n        var i = j;\\n        while (i++ < N) {\\n          if (text.charCodeAt(i) === 34) {\\n            if (text.charCodeAt(i + 1) !== 34) break;\\n            ++i;\\n          }\\n        }\\n        I = i + 2;\\n        var c = text.charCodeAt(i + 1);\\n        if (c === 13) {\\n          eol = true;\\n          if (text.charCodeAt(i + 2) === 10) ++I;\\n        } else if (c === 10) {\\n          eol = true;\\n        }\\n        return text.substring(j + 1, i).replace(/\\\"\\\"/g, \\\"\\\\\\\"\\\");\\n      }\\n\\n      // common case: find next delimiter or newline\\n      while (I < N) {\\n        var c = text.charCodeAt(I++), k = 1;\\n        if (c === 10) eol = true; // \\\\n\\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\\\r|\\\\r\\\\n\\n        else if (c !== delimiterCode) continue;\\n        return text.substring(j, I - k);\\n      }\\n\\n      // special case: last token before EOF\\n      return text.substring(j);\\n    }\\n\\n    while ((t = token()) !== EOF) {\\n      var a = [];\\n      while (t !== EOL && t !== EOF) {\\n        a.push(t);\\n        t = token();\\n      }\\n      if (f && !(a = f(a, n++))) continue;\\n      rows.push(a);\\n    }\\n\\n    return rows;\\n  };\\n\\n  dsv.format = function(rows) {\\n    if (Array.isArray(rows[0])) return dsv.formatRows(rows); // deprecated; use formatRows\\n    var fieldSet = {}, fields = [];\\n\\n    // Compute unique fields in order of discovery.\\n    rows.forEach(function(row) {\\n      for (var field in row) {\\n        if (!(field in fieldSet)) {\\n          fields.push(fieldSet[field] = field);\\n        }\\n      }\\n    });\\n\\n    return [fields.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\\n      return fields.map(function(field) {\\n        return formatValue(row[field]);\\n      }).join(delimiter);\\n    })).join(\\\"\\\\n\\\");\\n  };\\n\\n  dsv.formatRows = function(rows) {\\n    return rows.map(formatRow).join(\\\"\\\\n\\\");\\n  };\\n\\n  function formatRow(row) {\\n    return row.map(formatValue).join(delimiter);\\n  }\\n\\n  function formatValue(text) {\\n    return reFormat.test(text) ? \\\"\\\\\\\"\\\" + text.replace(/\\\\\\\"/g, \\\"\\\\\\\"\\\\\\\"\\\") + \\\"\\\\\\\"\\\" : text;\\n  }\\n\\n  return dsv;\\n}\\n\" + \";return dsv\")();\n\n},{}],7:[function(_dereq_,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],8:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],9:[function(_dereq_,module,exports){\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n},{}],10:[function(_dereq_,module,exports){\n'use strict';\nvar DataReader = _dereq_('./dataReader');\n\nfunction ArrayReader(data) {\n    if (data) {\n        this.data = data;\n        this.length = this.data.length;\n        this.index = 0;\n        this.zero = 0;\n\n        for(var i = 0; i < this.data.length; i++) {\n            data[i] = data[i] & 0xFF;\n        }\n    }\n}\nArrayReader.prototype = new DataReader();\n/**\n * @see DataReader.byteAt\n */\nArrayReader.prototype.byteAt = function(i) {\n    return this.data[this.zero + i];\n};\n/**\n * @see DataReader.lastIndexOfSignature\n */\nArrayReader.prototype.lastIndexOfSignature = function(sig) {\n    var sig0 = sig.charCodeAt(0),\n        sig1 = sig.charCodeAt(1),\n        sig2 = sig.charCodeAt(2),\n        sig3 = sig.charCodeAt(3);\n    for (var i = this.length - 4; i >= 0; --i) {\n        if (this.data[i] === sig0 && this.data[i + 1] === sig1 && this.data[i + 2] === sig2 && this.data[i + 3] === sig3) {\n            return i - this.zero;\n        }\n    }\n\n    return -1;\n};\n/**\n * @see DataReader.readData\n */\nArrayReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    if(size === 0) {\n        return [];\n    }\n    var result = this.data.slice(this.zero + this.index, this.zero + this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = ArrayReader;\n\n},{\"./dataReader\":15}],11:[function(_dereq_,module,exports){\n'use strict';\n// private property\nvar _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n\n// public method for encoding\nexports.encode = function(input, utf8) {\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    while (i < input.length) {\n\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n\n        enc1 = chr1 >> 2;\n        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n        enc4 = chr3 & 63;\n\n        if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n        }\n        else if (isNaN(chr3)) {\n            enc4 = 64;\n        }\n\n        output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n\n    }\n\n    return output;\n};\n\n// public method for decoding\nexports.decode = function(input, utf8) {\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n    while (i < input.length) {\n\n        enc1 = _keyStr.indexOf(input.charAt(i++));\n        enc2 = _keyStr.indexOf(input.charAt(i++));\n        enc3 = _keyStr.indexOf(input.charAt(i++));\n        enc4 = _keyStr.indexOf(input.charAt(i++));\n\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n\n        output = output + String.fromCharCode(chr1);\n\n        if (enc3 != 64) {\n            output = output + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64) {\n            output = output + String.fromCharCode(chr3);\n        }\n\n    }\n\n    return output;\n\n};\n\n},{}],12:[function(_dereq_,module,exports){\n'use strict';\nfunction CompressedObject() {\n    this.compressedSize = 0;\n    this.uncompressedSize = 0;\n    this.crc32 = 0;\n    this.compressionMethod = null;\n    this.compressedContent = null;\n}\n\nCompressedObject.prototype = {\n    /**\n     * Return the decompressed content in an unspecified format.\n     * The format will depend on the decompressor.\n     * @return {Object} the decompressed content.\n     */\n    getContent: function() {\n        return null; // see implementation\n    },\n    /**\n     * Return the compressed content in an unspecified format.\n     * The format will depend on the compressed conten source.\n     * @return {Object} the compressed content.\n     */\n    getCompressedContent: function() {\n        return null; // see implementation\n    }\n};\nmodule.exports = CompressedObject;\n\n},{}],13:[function(_dereq_,module,exports){\n'use strict';\nexports.STORE = {\n    magic: \"\\x00\\x00\",\n    compress: function(content, compressionOptions) {\n        return content; // no compression\n    },\n    uncompress: function(content) {\n        return content; // no compression\n    },\n    compressInputType: null,\n    uncompressInputType: null\n};\nexports.DEFLATE = _dereq_('./flate');\n\n},{\"./flate\":18}],14:[function(_dereq_,module,exports){\n'use strict';\n\nvar utils = _dereq_('./utils');\n\nvar table = [\n    0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA,\n    0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,\n    0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988,\n    0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91,\n    0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,\n    0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,\n    0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC,\n    0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5,\n    0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172,\n    0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,\n    0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940,\n    0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,\n    0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116,\n    0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,\n    0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,\n    0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,\n    0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A,\n    0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,\n    0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818,\n    0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,\n    0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,\n    0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457,\n    0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C,\n    0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,\n    0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,\n    0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB,\n    0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0,\n    0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,\n    0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086,\n    0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,\n    0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4,\n    0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD,\n    0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A,\n    0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683,\n    0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,\n    0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,\n    0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE,\n    0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7,\n    0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC,\n    0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,\n    0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252,\n    0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,\n    0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60,\n    0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79,\n    0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,\n    0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F,\n    0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04,\n    0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,\n    0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A,\n    0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,\n    0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38,\n    0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21,\n    0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E,\n    0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,\n    0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,\n    0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,\n    0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2,\n    0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB,\n    0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0,\n    0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,\n    0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6,\n    0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF,\n    0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,\n    0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D\n];\n\n/**\n *\n *  Javascript crc32\n *  http://www.webtoolkit.info/\n *\n */\nmodule.exports = function crc32(input, crc) {\n    if (typeof input === \"undefined\" || !input.length) {\n        return 0;\n    }\n\n    var isArray = utils.getTypeOf(input) !== \"string\";\n\n    if (typeof(crc) == \"undefined\") {\n        crc = 0;\n    }\n    var x = 0;\n    var y = 0;\n    var b = 0;\n\n    crc = crc ^ (-1);\n    for (var i = 0, iTop = input.length; i < iTop; i++) {\n        b = isArray ? input[i] : input.charCodeAt(i);\n        y = (crc ^ b) & 0xFF;\n        x = table[y];\n        crc = (crc >>> 8) ^ x;\n    }\n\n    return crc ^ (-1);\n};\n// vim: set shiftwidth=4 softtabstop=4:\n\n},{\"./utils\":31}],15:[function(_dereq_,module,exports){\n'use strict';\nvar utils = _dereq_('./utils');\n\nfunction DataReader(data) {\n    this.data = null; // type : see implementation\n    this.length = 0;\n    this.index = 0;\n    this.zero = 0;\n}\nDataReader.prototype = {\n    /**\n     * Check that the offset will not go too far.\n     * @param {string} offset the additional offset to check.\n     * @throws {Error} an Error if the offset is out of bounds.\n     */\n    checkOffset: function(offset) {\n        this.checkIndex(this.index + offset);\n    },\n    /**\n     * Check that the specifed index will not be too far.\n     * @param {string} newIndex the index to check.\n     * @throws {Error} an Error if the index is out of bounds.\n     */\n    checkIndex: function(newIndex) {\n        if (this.length < this.zero + newIndex || newIndex < 0) {\n            throw new Error(\"End of data reached (data length = \" + this.length + \", asked index = \" + (newIndex) + \"). Corrupted zip ?\");\n        }\n    },\n    /**\n     * Change the index.\n     * @param {number} newIndex The new index.\n     * @throws {Error} if the new index is out of the data.\n     */\n    setIndex: function(newIndex) {\n        this.checkIndex(newIndex);\n        this.index = newIndex;\n    },\n    /**\n     * Skip the next n bytes.\n     * @param {number} n the number of bytes to skip.\n     * @throws {Error} if the new index is out of the data.\n     */\n    skip: function(n) {\n        this.setIndex(this.index + n);\n    },\n    /**\n     * Get the byte at the specified index.\n     * @param {number} i the index to use.\n     * @return {number} a byte.\n     */\n    byteAt: function(i) {\n        // see implementations\n    },\n    /**\n     * Get the next number with a given byte size.\n     * @param {number} size the number of bytes to read.\n     * @return {number} the corresponding number.\n     */\n    readInt: function(size) {\n        var result = 0,\n            i;\n        this.checkOffset(size);\n        for (i = this.index + size - 1; i >= this.index; i--) {\n            result = (result << 8) + this.byteAt(i);\n        }\n        this.index += size;\n        return result;\n    },\n    /**\n     * Get the next string with a given byte size.\n     * @param {number} size the number of bytes to read.\n     * @return {string} the corresponding string.\n     */\n    readString: function(size) {\n        return utils.transformTo(\"string\", this.readData(size));\n    },\n    /**\n     * Get raw data without conversion, <size> bytes.\n     * @param {number} size the number of bytes to read.\n     * @return {Object} the raw data, implementation specific.\n     */\n    readData: function(size) {\n        // see implementations\n    },\n    /**\n     * Find the last occurence of a zip signature (4 bytes).\n     * @param {string} sig the signature to find.\n     * @return {number} the index of the last occurence, -1 if not found.\n     */\n    lastIndexOfSignature: function(sig) {\n        // see implementations\n    },\n    /**\n     * Get the next date.\n     * @return {Date} the date.\n     */\n    readDate: function() {\n        var dostime = this.readInt(4);\n        return new Date(\n        ((dostime >> 25) & 0x7f) + 1980, // year\n        ((dostime >> 21) & 0x0f) - 1, // month\n        (dostime >> 16) & 0x1f, // day\n        (dostime >> 11) & 0x1f, // hour\n        (dostime >> 5) & 0x3f, // minute\n        (dostime & 0x1f) << 1); // second\n    }\n};\nmodule.exports = DataReader;\n\n},{\"./utils\":31}],16:[function(_dereq_,module,exports){\n'use strict';\nexports.base64 = false;\nexports.binary = false;\nexports.dir = false;\nexports.createFolders = false;\nexports.date = null;\nexports.compression = null;\nexports.compressionOptions = null;\nexports.comment = null;\nexports.unixPermissions = null;\nexports.dosPermissions = null;\n\n},{}],17:[function(_dereq_,module,exports){\n'use strict';\nvar utils = _dereq_('./utils');\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2binary = function(str) {\n    return utils.string2binary(str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2Uint8Array = function(str) {\n    return utils.transformTo(\"uint8array\", str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.uint8Array2String = function(array) {\n    return utils.transformTo(\"string\", array);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2Blob = function(str) {\n    var buffer = utils.transformTo(\"arraybuffer\", str);\n    return utils.arrayBuffer2Blob(buffer);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.arrayBuffer2Blob = function(buffer) {\n    return utils.arrayBuffer2Blob(buffer);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.transformTo = function(outputType, input) {\n    return utils.transformTo(outputType, input);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.getTypeOf = function(input) {\n    return utils.getTypeOf(input);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.checkSupport = function(type) {\n    return utils.checkSupport(type);\n};\n\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\nexports.MAX_VALUE_16BITS = utils.MAX_VALUE_16BITS;\n\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\nexports.MAX_VALUE_32BITS = utils.MAX_VALUE_32BITS;\n\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.pretty = function(str) {\n    return utils.pretty(str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.findCompression = function(compressionMethod) {\n    return utils.findCompression(compressionMethod);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.isRegExp = function (object) {\n    return utils.isRegExp(object);\n};\n\n\n},{\"./utils\":31}],18:[function(_dereq_,module,exports){\n'use strict';\nvar USE_TYPEDARRAY = (typeof Uint8Array !== 'undefined') && (typeof Uint16Array !== 'undefined') && (typeof Uint32Array !== 'undefined');\n\nvar pako = _dereq_(\"pako\");\nexports.uncompressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\nexports.compressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\n\nexports.magic = \"\\x08\\x00\";\nexports.compress = function(input, compressionOptions) {\n    return pako.deflateRaw(input, {\n        level : compressionOptions.level || -1 // default compression\n    });\n};\nexports.uncompress =  function(input) {\n    return pako.inflateRaw(input);\n};\n\n},{\"pako\":34}],19:[function(_dereq_,module,exports){\n'use strict';\n\nvar base64 = _dereq_('./base64');\n\n/**\nUsage:\n   zip = new JSZip();\n   zip.file(\"hello.txt\", \"Hello, World!\").file(\"tempfile\", \"nothing\");\n   zip.folder(\"images\").file(\"smile.gif\", base64Data, {base64: true});\n   zip.file(\"Xmas.txt\", \"Ho ho ho !\", {date : new Date(\"December 25, 2007 00:00:01\")});\n   zip.remove(\"tempfile\");\n\n   base64zip = zip.generate();\n\n**/\n\n/**\n * Representation a of zip file in js\n * @constructor\n * @param {String=|ArrayBuffer=|Uint8Array=} data the data to load, if any (optional).\n * @param {Object=} options the options for creating this objects (optional).\n */\nfunction JSZip(data, options) {\n    // if this constructor is used without `new`, it adds `new` before itself:\n    if(!(this instanceof JSZip)) return new JSZip(data, options);\n\n    // object containing the files :\n    // {\n    //   \"folder/\" : {...},\n    //   \"folder/data.txt\" : {...}\n    // }\n    this.files = {};\n\n    this.comment = null;\n\n    // Where we are in the hierarchy\n    this.root = \"\";\n    if (data) {\n        this.load(data, options);\n    }\n    this.clone = function() {\n        var newObj = new JSZip();\n        for (var i in this) {\n            if (typeof this[i] !== \"function\") {\n                newObj[i] = this[i];\n            }\n        }\n        return newObj;\n    };\n}\nJSZip.prototype = _dereq_('./object');\nJSZip.prototype.load = _dereq_('./load');\nJSZip.support = _dereq_('./support');\nJSZip.defaults = _dereq_('./defaults');\n\n/**\n * @deprecated\n * This namespace will be removed in a future version without replacement.\n */\nJSZip.utils = _dereq_('./deprecatedPublicUtils');\n\nJSZip.base64 = {\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    encode : function(input) {\n        return base64.encode(input);\n    },\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    decode : function(input) {\n        return base64.decode(input);\n    }\n};\nJSZip.compressions = _dereq_('./compressions');\nmodule.exports = JSZip;\n\n},{\"./base64\":11,\"./compressions\":13,\"./defaults\":16,\"./deprecatedPublicUtils\":17,\"./load\":20,\"./object\":23,\"./support\":27}],20:[function(_dereq_,module,exports){\n'use strict';\nvar base64 = _dereq_('./base64');\nvar utf8 = _dereq_('./utf8');\nvar utils = _dereq_('./utils');\nvar ZipEntries = _dereq_('./zipEntries');\nmodule.exports = function(data, options) {\n    var files, zipEntries, i, input;\n    options = utils.extend(options || {}, {\n        base64: false,\n        checkCRC32: false,\n        optimizedBinaryString : false,\n        createFolders: false,\n        decodeFileName: utf8.utf8decode\n    });\n    if (options.base64) {\n        data = base64.decode(data);\n    }\n\n    zipEntries = new ZipEntries(data, options);\n    files = zipEntries.files;\n    for (i = 0; i < files.length; i++) {\n        input = files[i];\n        this.file(input.fileNameStr, input.decompressed, {\n            binary: true,\n            optimizedBinaryString: true,\n            date: input.date,\n            dir: input.dir,\n            comment : input.fileCommentStr.length ? input.fileCommentStr : null,\n            unixPermissions : input.unixPermissions,\n            dosPermissions : input.dosPermissions,\n            createFolders: options.createFolders\n        });\n    }\n    if (zipEntries.zipComment.length) {\n        this.comment = zipEntries.zipComment;\n    }\n\n    return this;\n};\n\n},{\"./base64\":11,\"./utf8\":30,\"./utils\":31,\"./zipEntries\":32}],21:[function(_dereq_,module,exports){\n(function (Buffer){\n'use strict';\nmodule.exports = function(data, encoding){\n    return new Buffer(data, encoding);\n};\nmodule.exports.test = function(b){\n    return Buffer.isBuffer(b);\n};\n\n}).call(this,_dereq_(\"buffer\").Buffer)\n},{\"buffer\":2}],22:[function(_dereq_,module,exports){\n'use strict';\nvar Uint8ArrayReader = _dereq_('./uint8ArrayReader');\n\nfunction NodeBufferReader(data) {\n    this.data = data;\n    this.length = this.data.length;\n    this.index = 0;\n    this.zero = 0;\n}\nNodeBufferReader.prototype = new Uint8ArrayReader();\n\n/**\n * @see DataReader.readData\n */\nNodeBufferReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    var result = this.data.slice(this.zero + this.index, this.zero + this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = NodeBufferReader;\n\n},{\"./uint8ArrayReader\":28}],23:[function(_dereq_,module,exports){\n'use strict';\nvar support = _dereq_('./support');\nvar utils = _dereq_('./utils');\nvar crc32 = _dereq_('./crc32');\nvar signature = _dereq_('./signature');\nvar defaults = _dereq_('./defaults');\nvar base64 = _dereq_('./base64');\nvar compressions = _dereq_('./compressions');\nvar CompressedObject = _dereq_('./compressedObject');\nvar nodeBuffer = _dereq_('./nodeBuffer');\nvar utf8 = _dereq_('./utf8');\nvar StringWriter = _dereq_('./stringWriter');\nvar Uint8ArrayWriter = _dereq_('./uint8ArrayWriter');\n\n/**\n * Returns the raw data of a ZipObject, decompress the content if necessary.\n * @param {ZipObject} file the file to use.\n * @return {String|ArrayBuffer|Uint8Array|Buffer} the data.\n */\nvar getRawData = function(file) {\n    if (file._data instanceof CompressedObject) {\n        file._data = file._data.getContent();\n        file.options.binary = true;\n        file.options.base64 = false;\n\n        if (utils.getTypeOf(file._data) === \"uint8array\") {\n            var copy = file._data;\n            // when reading an arraybuffer, the CompressedObject mechanism will keep it and subarray() a Uint8Array.\n            // if we request a file in the same format, we might get the same Uint8Array or its ArrayBuffer (the original zip file).\n            file._data = new Uint8Array(copy.length);\n            // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"\n            if (copy.length !== 0) {\n                file._data.set(copy, 0);\n            }\n        }\n    }\n    return file._data;\n};\n\n/**\n * Returns the data of a ZipObject in a binary form. If the content is an unicode string, encode it.\n * @param {ZipObject} file the file to use.\n * @return {String|ArrayBuffer|Uint8Array|Buffer} the data.\n */\nvar getBinaryData = function(file) {\n    var result = getRawData(file),\n        type = utils.getTypeOf(result);\n    if (type === \"string\") {\n        if (!file.options.binary) {\n            // unicode text !\n            // unicode string => binary string is a painful process, check if we can avoid it.\n            if (support.nodebuffer) {\n                return nodeBuffer(result, \"utf-8\");\n            }\n        }\n        return file.asBinary();\n    }\n    return result;\n};\n\n/**\n * Transform this._data into a string.\n * @param {function} filter a function String -> String, applied if not null on the result.\n * @return {String} the string representing this._data.\n */\nvar dataToString = function(asUTF8) {\n    var result = getRawData(this);\n    if (result === null || typeof result === \"undefined\") {\n        return \"\";\n    }\n    // if the data is a base64 string, we decode it before checking the encoding !\n    if (this.options.base64) {\n        result = base64.decode(result);\n    }\n    if (asUTF8 && this.options.binary) {\n        // JSZip.prototype.utf8decode supports arrays as input\n        // skip to array => string step, utf8decode will do it.\n        result = out.utf8decode(result);\n    }\n    else {\n        // no utf8 transformation, do the array => string step.\n        result = utils.transformTo(\"string\", result);\n    }\n\n    if (!asUTF8 && !this.options.binary) {\n        result = utils.transformTo(\"string\", out.utf8encode(result));\n    }\n    return result;\n};\n/**\n * A simple object representing a file in the zip file.\n * @constructor\n * @param {string} name the name of the file\n * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data\n * @param {Object} options the options of the file\n */\nvar ZipObject = function(name, data, options) {\n    this.name = name;\n    this.dir = options.dir;\n    this.date = options.date;\n    this.comment = options.comment;\n    this.unixPermissions = options.unixPermissions;\n    this.dosPermissions = options.dosPermissions;\n\n    this._data = data;\n    this.options = options;\n\n    /*\n     * This object contains initial values for dir and date.\n     * With them, we can check if the user changed the deprecated metadata in\n     * `ZipObject#options` or not.\n     */\n    this._initialMetadata = {\n      dir : options.dir,\n      date : options.date\n    };\n};\n\nZipObject.prototype = {\n    /**\n     * Return the content as UTF8 string.\n     * @return {string} the UTF8 string.\n     */\n    asText: function() {\n        return dataToString.call(this, true);\n    },\n    /**\n     * Returns the binary content.\n     * @return {string} the content as binary.\n     */\n    asBinary: function() {\n        return dataToString.call(this, false);\n    },\n    /**\n     * Returns the content as a nodejs Buffer.\n     * @return {Buffer} the content as a Buffer.\n     */\n    asNodeBuffer: function() {\n        var result = getBinaryData(this);\n        return utils.transformTo(\"nodebuffer\", result);\n    },\n    /**\n     * Returns the content as an Uint8Array.\n     * @return {Uint8Array} the content as an Uint8Array.\n     */\n    asUint8Array: function() {\n        var result = getBinaryData(this);\n        return utils.transformTo(\"uint8array\", result);\n    },\n    /**\n     * Returns the content as an ArrayBuffer.\n     * @return {ArrayBuffer} the content as an ArrayBufer.\n     */\n    asArrayBuffer: function() {\n        return this.asUint8Array().buffer;\n    }\n};\n\n/**\n * Transform an integer into a string in hexadecimal.\n * @private\n * @param {number} dec the number to convert.\n * @param {number} bytes the number of bytes to generate.\n * @returns {string} the result.\n */\nvar decToHex = function(dec, bytes) {\n    var hex = \"\",\n        i;\n    for (i = 0; i < bytes; i++) {\n        hex += String.fromCharCode(dec & 0xff);\n        dec = dec >>> 8;\n    }\n    return hex;\n};\n\n/**\n * Transforms the (incomplete) options from the user into the complete\n * set of options to create a file.\n * @private\n * @param {Object} o the options from the user.\n * @return {Object} the complete set of options.\n */\nvar prepareFileAttrs = function(o) {\n    o = o || {};\n    if (o.base64 === true && (o.binary === null || o.binary === undefined)) {\n        o.binary = true;\n    }\n    o = utils.extend(o, defaults);\n    o.date = o.date || new Date();\n    if (o.compression !== null) o.compression = o.compression.toUpperCase();\n\n    return o;\n};\n\n/**\n * Add a file in the current folder.\n * @private\n * @param {string} name the name of the file\n * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data of the file\n * @param {Object} o the options of the file\n * @return {Object} the new file.\n */\nvar fileAdd = function(name, data, o) {\n    // be sure sub folders exist\n    var dataType = utils.getTypeOf(data),\n        parent;\n\n    o = prepareFileAttrs(o);\n\n    if (typeof o.unixPermissions === \"string\") {\n        o.unixPermissions = parseInt(o.unixPermissions, 8);\n    }\n\n    // UNX_IFDIR  0040000 see zipinfo.c\n    if (o.unixPermissions && (o.unixPermissions & 0x4000)) {\n        o.dir = true;\n    }\n    // Bit 4    Directory\n    if (o.dosPermissions && (o.dosPermissions & 0x0010)) {\n        o.dir = true;\n    }\n\n    if (o.dir) {\n        name = forceTrailingSlash(name);\n    }\n\n    if (o.createFolders && (parent = parentFolder(name))) {\n        folderAdd.call(this, parent, true);\n    }\n\n    if (o.dir || data === null || typeof data === \"undefined\") {\n        o.base64 = false;\n        o.binary = false;\n        data = null;\n        dataType = null;\n    }\n    else if (dataType === \"string\") {\n        if (o.binary && !o.base64) {\n            // optimizedBinaryString == true means that the file has already been filtered with a 0xFF mask\n            if (o.optimizedBinaryString !== true) {\n                // this is a string, not in a base64 format.\n                // Be sure that this is a correct \"binary string\"\n                data = utils.string2binary(data);\n            }\n        }\n    }\n    else { // arraybuffer, uint8array, ...\n        o.base64 = false;\n        o.binary = true;\n\n        if (!dataType && !(data instanceof CompressedObject)) {\n            throw new Error(\"The data of '\" + name + \"' is in an unsupported format !\");\n        }\n\n        // special case : it's way easier to work with Uint8Array than with ArrayBuffer\n        if (dataType === \"arraybuffer\") {\n            data = utils.transformTo(\"uint8array\", data);\n        }\n    }\n\n    var object = new ZipObject(name, data, o);\n    this.files[name] = object;\n    return object;\n};\n\n/**\n * Find the parent folder of the path.\n * @private\n * @param {string} path the path to use\n * @return {string} the parent folder, or \"\"\n */\nvar parentFolder = function (path) {\n    if (path.slice(-1) == '/') {\n        path = path.substring(0, path.length - 1);\n    }\n    var lastSlash = path.lastIndexOf('/');\n    return (lastSlash > 0) ? path.substring(0, lastSlash) : \"\";\n};\n\n\n/**\n * Returns the path with a slash at the end.\n * @private\n * @param {String} path the path to check.\n * @return {String} the path with a trailing slash.\n */\nvar forceTrailingSlash = function(path) {\n    // Check the name ends with a /\n    if (path.slice(-1) != \"/\") {\n        path += \"/\"; // IE doesn't like substr(-1)\n    }\n    return path;\n};\n/**\n * Add a (sub) folder in the current folder.\n * @private\n * @param {string} name the folder's name\n * @param {boolean=} [createFolders] If true, automatically create sub\n *  folders. Defaults to false.\n * @return {Object} the new folder.\n */\nvar folderAdd = function(name, createFolders) {\n    createFolders = (typeof createFolders !== 'undefined') ? createFolders : false;\n\n    name = forceTrailingSlash(name);\n\n    // Does this folder already exist?\n    if (!this.files[name]) {\n        fileAdd.call(this, name, null, {\n            dir: true,\n            createFolders: createFolders\n        });\n    }\n    return this.files[name];\n};\n\n/**\n * Generate a JSZip.CompressedObject for a given zipOject.\n * @param {ZipObject} file the object to read.\n * @param {JSZip.compression} compression the compression to use.\n * @param {Object} compressionOptions the options to use when compressing.\n * @return {JSZip.CompressedObject} the compressed result.\n */\nvar generateCompressedObjectFrom = function(file, compression, compressionOptions) {\n    var result = new CompressedObject(),\n        content;\n\n    // the data has not been decompressed, we might reuse things !\n    if (file._data instanceof CompressedObject) {\n        result.uncompressedSize = file._data.uncompressedSize;\n        result.crc32 = file._data.crc32;\n\n        if (result.uncompressedSize === 0 || file.dir) {\n            compression = compressions['STORE'];\n            result.compressedContent = \"\";\n            result.crc32 = 0;\n        }\n        else if (file._data.compressionMethod === compression.magic) {\n            result.compressedContent = file._data.getCompressedContent();\n        }\n        else {\n            content = file._data.getContent();\n            // need to decompress / recompress\n            result.compressedContent = compression.compress(utils.transformTo(compression.compressInputType, content), compressionOptions);\n        }\n    }\n    else {\n        // have uncompressed data\n        content = getBinaryData(file);\n        if (!content || content.length === 0 || file.dir) {\n            compression = compressions['STORE'];\n            content = \"\";\n        }\n        result.uncompressedSize = content.length;\n        result.crc32 = crc32(content);\n        result.compressedContent = compression.compress(utils.transformTo(compression.compressInputType, content), compressionOptions);\n    }\n\n    result.compressedSize = result.compressedContent.length;\n    result.compressionMethod = compression.magic;\n\n    return result;\n};\n\n\n\n\n/**\n * Generate the UNIX part of the external file attributes.\n * @param {Object} unixPermissions the unix permissions or null.\n * @param {Boolean} isDir true if the entry is a directory, false otherwise.\n * @return {Number} a 32 bit integer.\n *\n * adapted from http://unix.stackexchange.com/questions/14705/the-zip-formats-external-file-attribute :\n *\n * TTTTsstrwxrwxrwx0000000000ADVSHR\n * ^^^^____________________________ file type, see zipinfo.c (UNX_*)\n *     ^^^_________________________ setuid, setgid, sticky\n *        ^^^^^^^^^________________ permissions\n *                 ^^^^^^^^^^______ not used ?\n *                           ^^^^^^ DOS attribute bits : Archive, Directory, Volume label, System file, Hidden, Read only\n */\nvar generateUnixExternalFileAttr = function (unixPermissions, isDir) {\n\n    var result = unixPermissions;\n    if (!unixPermissions) {\n        // I can't use octal values in strict mode, hence the hexa.\n        //  040775 => 0x41fd\n        // 0100664 => 0x81b4\n        result = isDir ? 0x41fd : 0x81b4;\n    }\n\n    return (result & 0xFFFF) << 16;\n};\n\n/**\n * Generate the DOS part of the external file attributes.\n * @param {Object} dosPermissions the dos permissions or null.\n * @param {Boolean} isDir true if the entry is a directory, false otherwise.\n * @return {Number} a 32 bit integer.\n *\n * Bit 0     Read-Only\n * Bit 1     Hidden\n * Bit 2     System\n * Bit 3     Volume Label\n * Bit 4     Directory\n * Bit 5     Archive\n */\nvar generateDosExternalFileAttr = function (dosPermissions, isDir) {\n\n    // the dir flag is already set for compatibility\n\n    return (dosPermissions || 0)  & 0x3F;\n};\n\n/**\n * Generate the various parts used in the construction of the final zip file.\n * @param {string} name the file name.\n * @param {ZipObject} file the file content.\n * @param {JSZip.CompressedObject} compressedObject the compressed object.\n * @param {number} offset the current offset from the start of the zip file.\n * @param {String} platform let's pretend we are this platform (change platform dependents fields)\n * @param {Function} encodeFileName the function to encode the file name / comment.\n * @return {object} the zip parts.\n */\nvar generateZipParts = function(name, file, compressedObject, offset, platform, encodeFileName) {\n    var data = compressedObject.compressedContent,\n        useCustomEncoding = encodeFileName !== utf8.utf8encode,\n        encodedFileName = utils.transformTo(\"string\", encodeFileName(file.name)),\n        utfEncodedFileName = utils.transformTo(\"string\", utf8.utf8encode(file.name)),\n        comment = file.comment || \"\",\n        encodedComment = utils.transformTo(\"string\", encodeFileName(comment)),\n        utfEncodedComment = utils.transformTo(\"string\", utf8.utf8encode(comment)),\n        useUTF8ForFileName = utfEncodedFileName.length !== file.name.length,\n        useUTF8ForComment = utfEncodedComment.length !== comment.length,\n        o = file.options,\n        dosTime,\n        dosDate,\n        extraFields = \"\",\n        unicodePathExtraField = \"\",\n        unicodeCommentExtraField = \"\",\n        dir, date;\n\n\n    // handle the deprecated options.dir\n    if (file._initialMetadata.dir !== file.dir) {\n        dir = file.dir;\n    } else {\n        dir = o.dir;\n    }\n\n    // handle the deprecated options.date\n    if(file._initialMetadata.date !== file.date) {\n        date = file.date;\n    } else {\n        date = o.date;\n    }\n\n    var extFileAttr = 0;\n    var versionMadeBy = 0;\n    if (dir) {\n        // dos or unix, we set the dos dir flag\n        extFileAttr |= 0x00010;\n    }\n    if(platform === \"UNIX\") {\n        versionMadeBy = 0x031E; // UNIX, version 3.0\n        extFileAttr |= generateUnixExternalFileAttr(file.unixPermissions, dir);\n    } else { // DOS or other, fallback to DOS\n        versionMadeBy = 0x0014; // DOS, version 2.0\n        extFileAttr |= generateDosExternalFileAttr(file.dosPermissions, dir);\n    }\n\n    // date\n    // @see http://www.delorie.com/djgpp/doc/rbinter/it/52/13.html\n    // @see http://www.delorie.com/djgpp/doc/rbinter/it/65/16.html\n    // @see http://www.delorie.com/djgpp/doc/rbinter/it/66/16.html\n\n    dosTime = date.getHours();\n    dosTime = dosTime << 6;\n    dosTime = dosTime | date.getMinutes();\n    dosTime = dosTime << 5;\n    dosTime = dosTime | date.getSeconds() / 2;\n\n    dosDate = date.getFullYear() - 1980;\n    dosDate = dosDate << 4;\n    dosDate = dosDate | (date.getMonth() + 1);\n    dosDate = dosDate << 5;\n    dosDate = dosDate | date.getDate();\n\n    if (useUTF8ForFileName) {\n        // set the unicode path extra field. unzip needs at least one extra\n        // field to correctly handle unicode path, so using the path is as good\n        // as any other information. This could improve the situation with\n        // other archive managers too.\n        // This field is usually used without the utf8 flag, with a non\n        // unicode path in the header (winrar, winzip). This helps (a bit)\n        // with the messy Windows' default compressed folders feature but\n        // breaks on p7zip which doesn't seek the unicode path extra field.\n        // So for now, UTF-8 everywhere !\n        unicodePathExtraField =\n            // Version\n            decToHex(1, 1) +\n            // NameCRC32\n            decToHex(crc32(encodedFileName), 4) +\n            // UnicodeName\n            utfEncodedFileName;\n\n        extraFields +=\n            // Info-ZIP Unicode Path Extra Field\n            \"\\x75\\x70\" +\n            // size\n            decToHex(unicodePathExtraField.length, 2) +\n            // content\n            unicodePathExtraField;\n    }\n\n    if(useUTF8ForComment) {\n\n        unicodeCommentExtraField =\n            // Version\n            decToHex(1, 1) +\n            // CommentCRC32\n            decToHex(this.crc32(encodedComment), 4) +\n            // UnicodeName\n            utfEncodedComment;\n\n        extraFields +=\n            // Info-ZIP Unicode Path Extra Field\n            \"\\x75\\x63\" +\n            // size\n            decToHex(unicodeCommentExtraField.length, 2) +\n            // content\n            unicodeCommentExtraField;\n    }\n\n    var header = \"\";\n\n    // version needed to extract\n    header += \"\\x0A\\x00\";\n    // general purpose bit flag\n    // set bit 11 if utf8\n    header += !useCustomEncoding && (useUTF8ForFileName || useUTF8ForComment) ? \"\\x00\\x08\" : \"\\x00\\x00\";\n    // compression method\n    header += compressedObject.compressionMethod;\n    // last mod file time\n    header += decToHex(dosTime, 2);\n    // last mod file date\n    header += decToHex(dosDate, 2);\n    // crc-32\n    header += decToHex(compressedObject.crc32, 4);\n    // compressed size\n    header += decToHex(compressedObject.compressedSize, 4);\n    // uncompressed size\n    header += decToHex(compressedObject.uncompressedSize, 4);\n    // file name length\n    header += decToHex(encodedFileName.length, 2);\n    // extra field length\n    header += decToHex(extraFields.length, 2);\n\n\n    var fileRecord = signature.LOCAL_FILE_HEADER + header + encodedFileName + extraFields;\n\n    var dirRecord = signature.CENTRAL_FILE_HEADER +\n    // version made by (00: DOS)\n    decToHex(versionMadeBy, 2) +\n    // file header (common to file and central directory)\n    header +\n    // file comment length\n    decToHex(encodedComment.length, 2) +\n    // disk number start\n    \"\\x00\\x00\" +\n    // internal file attributes TODO\n    \"\\x00\\x00\" +\n    // external file attributes\n    decToHex(extFileAttr, 4) +\n    // relative offset of local header\n    decToHex(offset, 4) +\n    // file name\n    encodedFileName +\n    // extra field\n    extraFields +\n    // file comment\n    encodedComment;\n\n    return {\n        fileRecord: fileRecord,\n        dirRecord: dirRecord,\n        compressedObject: compressedObject\n    };\n};\n\n\n// return the actual prototype of JSZip\nvar out = {\n    /**\n     * Read an existing zip and merge the data in the current JSZip object.\n     * The implementation is in jszip-load.js, don't forget to include it.\n     * @param {String|ArrayBuffer|Uint8Array|Buffer} stream  The stream to load\n     * @param {Object} options Options for loading the stream.\n     *  options.base64 : is the stream in base64 ? default : false\n     * @return {JSZip} the current JSZip object\n     */\n    load: function(stream, options) {\n        throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\");\n    },\n\n    /**\n     * Filter nested files/folders with the specified function.\n     * @param {Function} search the predicate to use :\n     * function (relativePath, file) {...}\n     * It takes 2 arguments : the relative path and the file.\n     * @return {Array} An array of matching elements.\n     */\n    filter: function(search) {\n        var result = [],\n            filename, relativePath, file, fileClone;\n        for (filename in this.files) {\n            if (!this.files.hasOwnProperty(filename)) {\n                continue;\n            }\n            file = this.files[filename];\n            // return a new object, don't let the user mess with our internal objects :)\n            fileClone = new ZipObject(file.name, file._data, utils.extend(file.options));\n            relativePath = filename.slice(this.root.length, filename.length);\n            if (filename.slice(0, this.root.length) === this.root && // the file is in the current root\n            search(relativePath, fileClone)) { // and the file matches the function\n                result.push(fileClone);\n            }\n        }\n        return result;\n    },\n\n    /**\n     * Add a file to the zip file, or search a file.\n     * @param   {string|RegExp} name The name of the file to add (if data is defined),\n     * the name of the file to find (if no data) or a regex to match files.\n     * @param   {String|ArrayBuffer|Uint8Array|Buffer} data  The file data, either raw or base64 encoded\n     * @param   {Object} o     File options\n     * @return  {JSZip|Object|Array} this JSZip object (when adding a file),\n     * a file (when searching by string) or an array of files (when searching by regex).\n     */\n    file: function(name, data, o) {\n        if (arguments.length === 1) {\n            if (utils.isRegExp(name)) {\n                var regexp = name;\n                return this.filter(function(relativePath, file) {\n                    return !file.dir && regexp.test(relativePath);\n                });\n            }\n            else { // text\n                return this.filter(function(relativePath, file) {\n                    return !file.dir && relativePath === name;\n                })[0] || null;\n            }\n        }\n        else { // more than one argument : we have data !\n            name = this.root + name;\n            fileAdd.call(this, name, data, o);\n        }\n        return this;\n    },\n\n    /**\n     * Add a directory to the zip file, or search.\n     * @param   {String|RegExp} arg The name of the directory to add, or a regex to search folders.\n     * @return  {JSZip} an object with the new directory as the root, or an array containing matching folders.\n     */\n    folder: function(arg) {\n        if (!arg) {\n            return this;\n        }\n\n        if (utils.isRegExp(arg)) {\n            return this.filter(function(relativePath, file) {\n                return file.dir && arg.test(relativePath);\n            });\n        }\n\n        // else, name is a new folder\n        var name = this.root + arg;\n        var newFolder = folderAdd.call(this, name);\n\n        // Allow chaining by returning a new object with this folder as the root\n        var ret = this.clone();\n        ret.root = newFolder.name;\n        return ret;\n    },\n\n    /**\n     * Delete a file, or a directory and all sub-files, from the zip\n     * @param {string} name the name of the file to delete\n     * @return {JSZip} this JSZip object\n     */\n    remove: function(name) {\n        name = this.root + name;\n        var file = this.files[name];\n        if (!file) {\n            // Look for any folders\n            if (name.slice(-1) != \"/\") {\n                name += \"/\";\n            }\n            file = this.files[name];\n        }\n\n        if (file && !file.dir) {\n            // file\n            delete this.files[name];\n        } else {\n            // maybe a folder, delete recursively\n            var kids = this.filter(function(relativePath, file) {\n                return file.name.slice(0, name.length) === name;\n            });\n            for (var i = 0; i < kids.length; i++) {\n                delete this.files[kids[i].name];\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * Generate the complete zip file\n     * @param {Object} options the options to generate the zip file :\n     * - base64, (deprecated, use type instead) true to generate base64.\n     * - compression, \"STORE\" by default.\n     * - type, \"base64\" by default. Values are : string, base64, uint8array, arraybuffer, blob.\n     * @return {String|Uint8Array|ArrayBuffer|Buffer|Blob} the zip file\n     */\n    generate: function(options) {\n        options = utils.extend(options || {}, {\n            base64: true,\n            compression: \"STORE\",\n            compressionOptions : null,\n            type: \"base64\",\n            platform: \"DOS\",\n            comment: null,\n            mimeType: 'application/zip',\n            encodeFileName: utf8.utf8encode\n        });\n\n        utils.checkSupport(options.type);\n\n        // accept nodejs `process.platform`\n        if(\n          options.platform === 'darwin' ||\n          options.platform === 'freebsd' ||\n          options.platform === 'linux' ||\n          options.platform === 'sunos'\n        ) {\n          options.platform = \"UNIX\";\n        }\n        if (options.platform === 'win32') {\n          options.platform = \"DOS\";\n        }\n\n        var zipData = [],\n            localDirLength = 0,\n            centralDirLength = 0,\n            writer, i,\n            encodedComment = utils.transformTo(\"string\", options.encodeFileName(options.comment || this.comment || \"\"));\n\n        // first, generate all the zip parts.\n        for (var name in this.files) {\n            if (!this.files.hasOwnProperty(name)) {\n                continue;\n            }\n            var file = this.files[name];\n\n            var compressionName = file.options.compression || options.compression.toUpperCase();\n            var compression = compressions[compressionName];\n            if (!compression) {\n                throw new Error(compressionName + \" is not a valid compression method !\");\n            }\n            var compressionOptions = file.options.compressionOptions || options.compressionOptions || {};\n\n            var compressedObject = generateCompressedObjectFrom.call(this, file, compression, compressionOptions);\n\n            var zipPart = generateZipParts.call(this, name, file, compressedObject, localDirLength, options.platform, options.encodeFileName);\n            localDirLength += zipPart.fileRecord.length + compressedObject.compressedSize;\n            centralDirLength += zipPart.dirRecord.length;\n            zipData.push(zipPart);\n        }\n\n        var dirEnd = \"\";\n\n        // end of central dir signature\n        dirEnd = signature.CENTRAL_DIRECTORY_END +\n        // number of this disk\n        \"\\x00\\x00\" +\n        // number of the disk with the start of the central directory\n        \"\\x00\\x00\" +\n        // total number of entries in the central directory on this disk\n        decToHex(zipData.length, 2) +\n        // total number of entries in the central directory\n        decToHex(zipData.length, 2) +\n        // size of the central directory   4 bytes\n        decToHex(centralDirLength, 4) +\n        // offset of start of central directory with respect to the starting disk number\n        decToHex(localDirLength, 4) +\n        // .ZIP file comment length\n        decToHex(encodedComment.length, 2) +\n        // .ZIP file comment\n        encodedComment;\n\n\n        // we have all the parts (and the total length)\n        // time to create a writer !\n        var typeName = options.type.toLowerCase();\n        if(typeName===\"uint8array\"||typeName===\"arraybuffer\"||typeName===\"blob\"||typeName===\"nodebuffer\") {\n            writer = new Uint8ArrayWriter(localDirLength + centralDirLength + dirEnd.length);\n        }else{\n            writer = new StringWriter(localDirLength + centralDirLength + dirEnd.length);\n        }\n\n        for (i = 0; i < zipData.length; i++) {\n            writer.append(zipData[i].fileRecord);\n            writer.append(zipData[i].compressedObject.compressedContent);\n        }\n        for (i = 0; i < zipData.length; i++) {\n            writer.append(zipData[i].dirRecord);\n        }\n\n        writer.append(dirEnd);\n\n        var zip = writer.finalize();\n\n\n\n        switch(options.type.toLowerCase()) {\n            // case \"zip is an Uint8Array\"\n            case \"uint8array\" :\n            case \"arraybuffer\" :\n            case \"nodebuffer\" :\n               return utils.transformTo(options.type.toLowerCase(), zip);\n            case \"blob\" :\n               return utils.arrayBuffer2Blob(utils.transformTo(\"arraybuffer\", zip), options.mimeType);\n            // case \"zip is a string\"\n            case \"base64\" :\n               return (options.base64) ? base64.encode(zip) : zip;\n            default : // case \"string\" :\n               return zip;\n         }\n\n    },\n\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    crc32: function (input, crc) {\n        return crc32(input, crc);\n    },\n\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    utf8encode: function (string) {\n        return utils.transformTo(\"string\", utf8.utf8encode(string));\n    },\n\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    utf8decode: function (input) {\n        return utf8.utf8decode(input);\n    }\n};\nmodule.exports = out;\n\n},{\"./base64\":11,\"./compressedObject\":12,\"./compressions\":13,\"./crc32\":14,\"./defaults\":16,\"./nodeBuffer\":21,\"./signature\":24,\"./stringWriter\":26,\"./support\":27,\"./uint8ArrayWriter\":29,\"./utf8\":30,\"./utils\":31}],24:[function(_dereq_,module,exports){\n'use strict';\nexports.LOCAL_FILE_HEADER = \"PK\\x03\\x04\";\nexports.CENTRAL_FILE_HEADER = \"PK\\x01\\x02\";\nexports.CENTRAL_DIRECTORY_END = \"PK\\x05\\x06\";\nexports.ZIP64_CENTRAL_DIRECTORY_LOCATOR = \"PK\\x06\\x07\";\nexports.ZIP64_CENTRAL_DIRECTORY_END = \"PK\\x06\\x06\";\nexports.DATA_DESCRIPTOR = \"PK\\x07\\x08\";\n\n},{}],25:[function(_dereq_,module,exports){\n'use strict';\nvar DataReader = _dereq_('./dataReader');\nvar utils = _dereq_('./utils');\n\nfunction StringReader(data, optimizedBinaryString) {\n    this.data = data;\n    if (!optimizedBinaryString) {\n        this.data = utils.string2binary(this.data);\n    }\n    this.length = this.data.length;\n    this.index = 0;\n    this.zero = 0;\n}\nStringReader.prototype = new DataReader();\n/**\n * @see DataReader.byteAt\n */\nStringReader.prototype.byteAt = function(i) {\n    return this.data.charCodeAt(this.zero + i);\n};\n/**\n * @see DataReader.lastIndexOfSignature\n */\nStringReader.prototype.lastIndexOfSignature = function(sig) {\n    return this.data.lastIndexOf(sig) - this.zero;\n};\n/**\n * @see DataReader.readData\n */\nStringReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    // this will work because the constructor applied the \"& 0xff\" mask.\n    var result = this.data.slice(this.zero + this.index, this.zero + this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = StringReader;\n\n},{\"./dataReader\":15,\"./utils\":31}],26:[function(_dereq_,module,exports){\n'use strict';\n\nvar utils = _dereq_('./utils');\n\n/**\n * An object to write any content to a string.\n * @constructor\n */\nvar StringWriter = function() {\n    this.data = [];\n};\nStringWriter.prototype = {\n    /**\n     * Append any content to the current string.\n     * @param {Object} input the content to add.\n     */\n    append: function(input) {\n        input = utils.transformTo(\"string\", input);\n        this.data.push(input);\n    },\n    /**\n     * Finalize the construction an return the result.\n     * @return {string} the generated string.\n     */\n    finalize: function() {\n        return this.data.join(\"\");\n    }\n};\n\nmodule.exports = StringWriter;\n\n},{\"./utils\":31}],27:[function(_dereq_,module,exports){\n(function (Buffer){\n'use strict';\nexports.base64 = true;\nexports.array = true;\nexports.string = true;\nexports.arraybuffer = typeof ArrayBuffer !== \"undefined\" && typeof Uint8Array !== \"undefined\";\n// contains true if JSZip can read/generate nodejs Buffer, false otherwise.\n// Browserify will provide a Buffer implementation for browsers, which is\n// an augmented Uint8Array (i.e., can be used as either Buffer or U8).\nexports.nodebuffer = typeof Buffer !== \"undefined\";\n// contains true if JSZip can read/generate Uint8Array, false otherwise.\nexports.uint8array = typeof Uint8Array !== \"undefined\";\n\nif (typeof ArrayBuffer === \"undefined\") {\n    exports.blob = false;\n}\nelse {\n    var buffer = new ArrayBuffer(0);\n    try {\n        exports.blob = new Blob([buffer], {\n            type: \"application/zip\"\n        }).size === 0;\n    }\n    catch (e) {\n        try {\n            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n            var builder = new Builder();\n            builder.append(buffer);\n            exports.blob = builder.getBlob('application/zip').size === 0;\n        }\n        catch (e) {\n            exports.blob = false;\n        }\n    }\n}\n\n}).call(this,_dereq_(\"buffer\").Buffer)\n},{\"buffer\":2}],28:[function(_dereq_,module,exports){\n'use strict';\nvar ArrayReader = _dereq_('./arrayReader');\n\nfunction Uint8ArrayReader(data) {\n    if (data) {\n        this.data = data;\n        this.length = this.data.length;\n        this.index = 0;\n        this.zero = 0;\n    }\n}\nUint8ArrayReader.prototype = new ArrayReader();\n/**\n * @see DataReader.readData\n */\nUint8ArrayReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    if(size === 0) {\n        // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].\n        return new Uint8Array(0);\n    }\n    var result = this.data.subarray(this.zero + this.index, this.zero + this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = Uint8ArrayReader;\n\n},{\"./arrayReader\":10}],29:[function(_dereq_,module,exports){\n'use strict';\n\nvar utils = _dereq_('./utils');\n\n/**\n * An object to write any content to an Uint8Array.\n * @constructor\n * @param {number} length The length of the array.\n */\nvar Uint8ArrayWriter = function(length) {\n    this.data = new Uint8Array(length);\n    this.index = 0;\n};\nUint8ArrayWriter.prototype = {\n    /**\n     * Append any content to the current array.\n     * @param {Object} input the content to add.\n     */\n    append: function(input) {\n        if (input.length !== 0) {\n            // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"\n            input = utils.transformTo(\"uint8array\", input);\n            this.data.set(input, this.index);\n            this.index += input.length;\n        }\n    },\n    /**\n     * Finalize the construction an return the result.\n     * @return {Uint8Array} the generated array.\n     */\n    finalize: function() {\n        return this.data;\n    }\n};\n\nmodule.exports = Uint8ArrayWriter;\n\n},{\"./utils\":31}],30:[function(_dereq_,module,exports){\n'use strict';\n\nvar utils = _dereq_('./utils');\nvar support = _dereq_('./support');\nvar nodeBuffer = _dereq_('./nodeBuffer');\n\n/**\n * The following functions come from pako, from pako/lib/utils/strings\n * released under the MIT license, see pako https://github.com/nodeca/pako/\n */\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new Array(256);\nfor (var i=0; i<256; i++) {\n  _utf8len[i] = (i >= 252 ? 6 : i >= 248 ? 5 : i >= 240 ? 4 : i >= 224 ? 3 : i >= 192 ? 2 : 1);\n}\n_utf8len[254]=_utf8len[254]=1; // Invalid sequence start\n\n// convert string to array (typed, when possible)\nvar string2buf = function (str) {\n    var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n    // count binary size\n    for (m_pos = 0; m_pos < str_len; m_pos++) {\n        c = str.charCodeAt(m_pos);\n        if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {\n            c2 = str.charCodeAt(m_pos+1);\n            if ((c2 & 0xfc00) === 0xdc00) {\n                c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n                m_pos++;\n            }\n        }\n        buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n    }\n\n    // allocate buffer\n    if (support.uint8array) {\n        buf = new Uint8Array(buf_len);\n    } else {\n        buf = new Array(buf_len);\n    }\n\n    // convert\n    for (i=0, m_pos = 0; i < buf_len; m_pos++) {\n        c = str.charCodeAt(m_pos);\n        if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {\n            c2 = str.charCodeAt(m_pos+1);\n            if ((c2 & 0xfc00) === 0xdc00) {\n                c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n                m_pos++;\n            }\n        }\n        if (c < 0x80) {\n            /* one byte */\n            buf[i++] = c;\n        } else if (c < 0x800) {\n            /* two bytes */\n            buf[i++] = 0xC0 | (c >>> 6);\n            buf[i++] = 0x80 | (c & 0x3f);\n        } else if (c < 0x10000) {\n            /* three bytes */\n            buf[i++] = 0xE0 | (c >>> 12);\n            buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n            buf[i++] = 0x80 | (c & 0x3f);\n        } else {\n            /* four bytes */\n            buf[i++] = 0xf0 | (c >>> 18);\n            buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n            buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n            buf[i++] = 0x80 | (c & 0x3f);\n        }\n    }\n\n    return buf;\n};\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = function(buf, max) {\n    var pos;\n\n    max = max || buf.length;\n    if (max > buf.length) { max = buf.length; }\n\n    // go back from last position, until start of sequence found\n    pos = max-1;\n    while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n    // Fuckup - very small and broken sequence,\n    // return max, because we should return something anyway.\n    if (pos < 0) { return max; }\n\n    // If we came to start of buffer - that means vuffer is too small,\n    // return max too.\n    if (pos === 0) { return max; }\n\n    return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\n// convert array to string\nvar buf2string = function (buf) {\n    var str, i, out, c, c_len;\n    var len = buf.length;\n\n    // Reserve max possible length (2 words per char)\n    // NB: by unknown reasons, Array is significantly faster for\n    //     String.fromCharCode.apply than Uint16Array.\n    var utf16buf = new Array(len*2);\n\n    for (out=0, i=0; i<len;) {\n        c = buf[i++];\n        // quick process ascii\n        if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n        c_len = _utf8len[c];\n        // skip 5 & 6 byte codes\n        if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len-1; continue; }\n\n        // apply mask on first byte\n        c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n        // join the rest\n        while (c_len > 1 && i < len) {\n            c = (c << 6) | (buf[i++] & 0x3f);\n            c_len--;\n        }\n\n        // terminated by end of string?\n        if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n        if (c < 0x10000) {\n            utf16buf[out++] = c;\n        } else {\n            c -= 0x10000;\n            utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n            utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n        }\n    }\n\n    // shrinkBuf(utf16buf, out)\n    if (utf16buf.length !== out) {\n        if(utf16buf.subarray) {\n            utf16buf = utf16buf.subarray(0, out);\n        } else {\n            utf16buf.length = out;\n        }\n    }\n\n    // return String.fromCharCode.apply(null, utf16buf);\n    return utils.applyFromCharCode(utf16buf);\n};\n\n\n// That's all for the pako functions.\n\n\n/**\n * Transform a javascript string into an array (typed if possible) of bytes,\n * UTF-8 encoded.\n * @param {String} str the string to encode\n * @return {Array|Uint8Array|Buffer} the UTF-8 encoded string.\n */\nexports.utf8encode = function utf8encode(str) {\n    if (support.nodebuffer) {\n        return nodeBuffer(str, \"utf-8\");\n    }\n\n    return string2buf(str);\n};\n\n\n/**\n * Transform a bytes array (or a representation) representing an UTF-8 encoded\n * string into a javascript string.\n * @param {Array|Uint8Array|Buffer} buf the data de decode\n * @return {String} the decoded string.\n */\nexports.utf8decode = function utf8decode(buf) {\n    if (support.nodebuffer) {\n        return utils.transformTo(\"nodebuffer\", buf).toString(\"utf-8\");\n    }\n\n    buf = utils.transformTo(support.uint8array ? \"uint8array\" : \"array\", buf);\n\n    // return buf2string(buf);\n    // Chrome prefers to work with \"small\" chunks of data\n    // for the method buf2string.\n    // Firefox and Chrome has their own shortcut, IE doesn't seem to really care.\n    var result = [], k = 0, len = buf.length, chunk = 65536;\n    while (k < len) {\n        var nextBoundary = utf8border(buf, Math.min(k + chunk, len));\n        if (support.uint8array) {\n            result.push(buf2string(buf.subarray(k, nextBoundary)));\n        } else {\n            result.push(buf2string(buf.slice(k, nextBoundary)));\n        }\n        k = nextBoundary;\n    }\n    return result.join(\"\");\n\n};\n// vim: set shiftwidth=4 softtabstop=4:\n\n},{\"./nodeBuffer\":21,\"./support\":27,\"./utils\":31}],31:[function(_dereq_,module,exports){\n'use strict';\nvar support = _dereq_('./support');\nvar compressions = _dereq_('./compressions');\nvar nodeBuffer = _dereq_('./nodeBuffer');\n/**\n * Convert a string to a \"binary string\" : a string containing only char codes between 0 and 255.\n * @param {string} str the string to transform.\n * @return {String} the binary string.\n */\nexports.string2binary = function(str) {\n    var result = \"\";\n    for (var i = 0; i < str.length; i++) {\n        result += String.fromCharCode(str.charCodeAt(i) & 0xff);\n    }\n    return result;\n};\nexports.arrayBuffer2Blob = function(buffer, mimeType) {\n    exports.checkSupport(\"blob\");\n\tmimeType = mimeType || 'application/zip';\n\n    try {\n        // Blob constructor\n        return new Blob([buffer], {\n            type: mimeType\n        });\n    }\n    catch (e) {\n\n        try {\n            // deprecated, browser only, old way\n            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n            var builder = new Builder();\n            builder.append(buffer);\n            return builder.getBlob(mimeType);\n        }\n        catch (e) {\n\n            // well, fuck ?!\n            throw new Error(\"Bug : can't construct the Blob.\");\n        }\n    }\n\n\n};\n/**\n * The identity function.\n * @param {Object} input the input.\n * @return {Object} the same input.\n */\nfunction identity(input) {\n    return input;\n}\n\n/**\n * Fill in an array with a string.\n * @param {String} str the string to use.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to fill in (will be mutated).\n * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated array.\n */\nfunction stringToArrayLike(str, array) {\n    for (var i = 0; i < str.length; ++i) {\n        array[i] = str.charCodeAt(i) & 0xFF;\n    }\n    return array;\n}\n\n/**\n * Transform an array-like object to a string.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to transform.\n * @return {String} the result.\n */\nfunction arrayLikeToString(array) {\n    // Performances notes :\n    // --------------------\n    // String.fromCharCode.apply(null, array) is the fastest, see\n    // see http://jsperf.com/converting-a-uint8array-to-a-string/2\n    // but the stack is limited (and we can get huge arrays !).\n    //\n    // result += String.fromCharCode(array[i]); generate too many strings !\n    //\n    // This code is inspired by http://jsperf.com/arraybuffer-to-string-apply-performance/2\n    var chunk = 65536;\n    var result = [],\n        len = array.length,\n        type = exports.getTypeOf(array),\n        k = 0,\n        canUseApply = true;\n      try {\n         switch(type) {\n            case \"uint8array\":\n               String.fromCharCode.apply(null, new Uint8Array(0));\n               break;\n            case \"nodebuffer\":\n               String.fromCharCode.apply(null, nodeBuffer(0));\n               break;\n         }\n      } catch(e) {\n         canUseApply = false;\n      }\n\n      // no apply : slow and painful algorithm\n      // default browser on android 4.*\n      if (!canUseApply) {\n         var resultStr = \"\";\n         for(var i = 0; i < array.length;i++) {\n            resultStr += String.fromCharCode(array[i]);\n         }\n    return resultStr;\n    }\n    while (k < len && chunk > 1) {\n        try {\n            if (type === \"array\" || type === \"nodebuffer\") {\n                result.push(String.fromCharCode.apply(null, array.slice(k, Math.min(k + chunk, len))));\n            }\n            else {\n                result.push(String.fromCharCode.apply(null, array.subarray(k, Math.min(k + chunk, len))));\n            }\n            k += chunk;\n        }\n        catch (e) {\n            chunk = Math.floor(chunk / 2);\n        }\n    }\n    return result.join(\"\");\n}\n\nexports.applyFromCharCode = arrayLikeToString;\n\n\n/**\n * Copy the data from an array-like to an other array-like.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayFrom the origin array.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayTo the destination array which will be mutated.\n * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated destination array.\n */\nfunction arrayLikeToArrayLike(arrayFrom, arrayTo) {\n    for (var i = 0; i < arrayFrom.length; i++) {\n        arrayTo[i] = arrayFrom[i];\n    }\n    return arrayTo;\n}\n\n// a matrix containing functions to transform everything into everything.\nvar transform = {};\n\n// string to ?\ntransform[\"string\"] = {\n    \"string\": identity,\n    \"array\": function(input) {\n        return stringToArrayLike(input, new Array(input.length));\n    },\n    \"arraybuffer\": function(input) {\n        return transform[\"string\"][\"uint8array\"](input).buffer;\n    },\n    \"uint8array\": function(input) {\n        return stringToArrayLike(input, new Uint8Array(input.length));\n    },\n    \"nodebuffer\": function(input) {\n        return stringToArrayLike(input, nodeBuffer(input.length));\n    }\n};\n\n// array to ?\ntransform[\"array\"] = {\n    \"string\": arrayLikeToString,\n    \"array\": identity,\n    \"arraybuffer\": function(input) {\n        return (new Uint8Array(input)).buffer;\n    },\n    \"uint8array\": function(input) {\n        return new Uint8Array(input);\n    },\n    \"nodebuffer\": function(input) {\n        return nodeBuffer(input);\n    }\n};\n\n// arraybuffer to ?\ntransform[\"arraybuffer\"] = {\n    \"string\": function(input) {\n        return arrayLikeToString(new Uint8Array(input));\n    },\n    \"array\": function(input) {\n        return arrayLikeToArrayLike(new Uint8Array(input), new Array(input.byteLength));\n    },\n    \"arraybuffer\": identity,\n    \"uint8array\": function(input) {\n        return new Uint8Array(input);\n    },\n    \"nodebuffer\": function(input) {\n        return nodeBuffer(new Uint8Array(input));\n    }\n};\n\n// uint8array to ?\ntransform[\"uint8array\"] = {\n    \"string\": arrayLikeToString,\n    \"array\": function(input) {\n        return arrayLikeToArrayLike(input, new Array(input.length));\n    },\n    \"arraybuffer\": function(input) {\n        return input.buffer;\n    },\n    \"uint8array\": identity,\n    \"nodebuffer\": function(input) {\n        return nodeBuffer(input);\n    }\n};\n\n// nodebuffer to ?\ntransform[\"nodebuffer\"] = {\n    \"string\": arrayLikeToString,\n    \"array\": function(input) {\n        return arrayLikeToArrayLike(input, new Array(input.length));\n    },\n    \"arraybuffer\": function(input) {\n        return transform[\"nodebuffer\"][\"uint8array\"](input).buffer;\n    },\n    \"uint8array\": function(input) {\n        return arrayLikeToArrayLike(input, new Uint8Array(input.length));\n    },\n    \"nodebuffer\": identity\n};\n\n/**\n * Transform an input into any type.\n * The supported output type are : string, array, uint8array, arraybuffer, nodebuffer.\n * If no output type is specified, the unmodified input will be returned.\n * @param {String} outputType the output type.\n * @param {String|Array|ArrayBuffer|Uint8Array|Buffer} input the input to convert.\n * @throws {Error} an Error if the browser doesn't support the requested output type.\n */\nexports.transformTo = function(outputType, input) {\n    if (!input) {\n        // undefined, null, etc\n        // an empty string won't harm.\n        input = \"\";\n    }\n    if (!outputType) {\n        return input;\n    }\n    exports.checkSupport(outputType);\n    var inputType = exports.getTypeOf(input);\n    var result = transform[inputType][outputType](input);\n    return result;\n};\n\n/**\n * Return the type of the input.\n * The type will be in a format valid for JSZip.utils.transformTo : string, array, uint8array, arraybuffer.\n * @param {Object} input the input to identify.\n * @return {String} the (lowercase) type of the input.\n */\nexports.getTypeOf = function(input) {\n    if (typeof input === \"string\") {\n        return \"string\";\n    }\n    if (Object.prototype.toString.call(input) === \"[object Array]\") {\n        return \"array\";\n    }\n    if (support.nodebuffer && nodeBuffer.test(input)) {\n        return \"nodebuffer\";\n    }\n    if (support.uint8array && input instanceof Uint8Array) {\n        return \"uint8array\";\n    }\n    if (support.arraybuffer && input instanceof ArrayBuffer) {\n        return \"arraybuffer\";\n    }\n};\n\n/**\n * Throw an exception if the type is not supported.\n * @param {String} type the type to check.\n * @throws {Error} an Error if the browser doesn't support the requested type.\n */\nexports.checkSupport = function(type) {\n    var supported = support[type.toLowerCase()];\n    if (!supported) {\n        throw new Error(type + \" is not supported by this browser\");\n    }\n};\nexports.MAX_VALUE_16BITS = 65535;\nexports.MAX_VALUE_32BITS = -1; // well, \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\" is parsed as -1\n\n/**\n * Prettify a string read as binary.\n * @param {string} str the string to prettify.\n * @return {string} a pretty string.\n */\nexports.pretty = function(str) {\n    var res = '',\n        code, i;\n    for (i = 0; i < (str || \"\").length; i++) {\n        code = str.charCodeAt(i);\n        res += '\\\\x' + (code < 16 ? \"0\" : \"\") + code.toString(16).toUpperCase();\n    }\n    return res;\n};\n\n/**\n * Find a compression registered in JSZip.\n * @param {string} compressionMethod the method magic to find.\n * @return {Object|null} the JSZip compression object, null if none found.\n */\nexports.findCompression = function(compressionMethod) {\n    for (var method in compressions) {\n        if (!compressions.hasOwnProperty(method)) {\n            continue;\n        }\n        if (compressions[method].magic === compressionMethod) {\n            return compressions[method];\n        }\n    }\n    return null;\n};\n/**\n* Cross-window, cross-Node-context regular expression detection\n* @param  {Object}  object Anything\n* @return {Boolean}        true if the object is a regular expression,\n* false otherwise\n*/\nexports.isRegExp = function (object) {\n    return Object.prototype.toString.call(object) === \"[object RegExp]\";\n};\n\n/**\n * Merge the objects passed as parameters into a new one.\n * @private\n * @param {...Object} var_args All objects to merge.\n * @return {Object} a new object with the data of the others.\n */\nexports.extend = function() {\n    var result = {}, i, attr;\n    for (i = 0; i < arguments.length; i++) { // arguments is not enumerable in some browsers\n        for (attr in arguments[i]) {\n            if (arguments[i].hasOwnProperty(attr) && typeof result[attr] === \"undefined\") {\n                result[attr] = arguments[i][attr];\n            }\n        }\n    }\n    return result;\n};\n\n\n},{\"./compressions\":13,\"./nodeBuffer\":21,\"./support\":27}],32:[function(_dereq_,module,exports){\n'use strict';\nvar StringReader = _dereq_('./stringReader');\nvar NodeBufferReader = _dereq_('./nodeBufferReader');\nvar Uint8ArrayReader = _dereq_('./uint8ArrayReader');\nvar ArrayReader = _dereq_('./arrayReader');\nvar utils = _dereq_('./utils');\nvar sig = _dereq_('./signature');\nvar ZipEntry = _dereq_('./zipEntry');\nvar support = _dereq_('./support');\nvar jszipProto = _dereq_('./object');\n//  class ZipEntries {{{\n/**\n * All the entries in the zip file.\n * @constructor\n * @param {String|ArrayBuffer|Uint8Array} data the binary stream to load.\n * @param {Object} loadOptions Options for loading the stream.\n */\nfunction ZipEntries(data, loadOptions) {\n    this.files = [];\n    this.loadOptions = loadOptions;\n    if (data) {\n        this.load(data);\n    }\n}\nZipEntries.prototype = {\n    /**\n     * Check that the reader is on the speficied signature.\n     * @param {string} expectedSignature the expected signature.\n     * @throws {Error} if it is an other signature.\n     */\n    checkSignature: function(expectedSignature) {\n        var signature = this.reader.readString(4);\n        if (signature !== expectedSignature) {\n            throw new Error(\"Corrupted zip or bug : unexpected signature \" + \"(\" + utils.pretty(signature) + \", expected \" + utils.pretty(expectedSignature) + \")\");\n        }\n    },\n    /**\n     * Check if the given signature is at the given index.\n     * @param {number} askedIndex the index to check.\n     * @param {string} expectedSignature the signature to expect.\n     * @return {boolean} true if the signature is here, false otherwise.\n     */\n    isSignature: function(askedIndex, expectedSignature) {\n        var currentIndex = this.reader.index;\n        this.reader.setIndex(askedIndex);\n        var signature = this.reader.readString(4);\n        var result = signature === expectedSignature;\n        this.reader.setIndex(currentIndex);\n        return result;\n    },\n    /**\n     * Read the end of the central directory.\n     */\n    readBlockEndOfCentral: function() {\n        this.diskNumber = this.reader.readInt(2);\n        this.diskWithCentralDirStart = this.reader.readInt(2);\n        this.centralDirRecordsOnThisDisk = this.reader.readInt(2);\n        this.centralDirRecords = this.reader.readInt(2);\n        this.centralDirSize = this.reader.readInt(4);\n        this.centralDirOffset = this.reader.readInt(4);\n\n        this.zipCommentLength = this.reader.readInt(2);\n        // warning : the encoding depends of the system locale\n        // On a linux machine with LANG=en_US.utf8, this field is utf8 encoded.\n        // On a windows machine, this field is encoded with the localized windows code page.\n        var zipComment = this.reader.readData(this.zipCommentLength);\n        var decodeParamType = support.uint8array ? \"uint8array\" : \"array\";\n        // To get consistent behavior with the generation part, we will assume that\n        // this is utf8 encoded unless specified otherwise.\n        var decodeContent = utils.transformTo(decodeParamType, zipComment);\n        this.zipComment = this.loadOptions.decodeFileName(decodeContent);\n    },\n    /**\n     * Read the end of the Zip 64 central directory.\n     * Not merged with the method readEndOfCentral :\n     * The end of central can coexist with its Zip64 brother,\n     * I don't want to read the wrong number of bytes !\n     */\n    readBlockZip64EndOfCentral: function() {\n        this.zip64EndOfCentralSize = this.reader.readInt(8);\n        this.versionMadeBy = this.reader.readString(2);\n        this.versionNeeded = this.reader.readInt(2);\n        this.diskNumber = this.reader.readInt(4);\n        this.diskWithCentralDirStart = this.reader.readInt(4);\n        this.centralDirRecordsOnThisDisk = this.reader.readInt(8);\n        this.centralDirRecords = this.reader.readInt(8);\n        this.centralDirSize = this.reader.readInt(8);\n        this.centralDirOffset = this.reader.readInt(8);\n\n        this.zip64ExtensibleData = {};\n        var extraDataSize = this.zip64EndOfCentralSize - 44,\n            index = 0,\n            extraFieldId,\n            extraFieldLength,\n            extraFieldValue;\n        while (index < extraDataSize) {\n            extraFieldId = this.reader.readInt(2);\n            extraFieldLength = this.reader.readInt(4);\n            extraFieldValue = this.reader.readString(extraFieldLength);\n            this.zip64ExtensibleData[extraFieldId] = {\n                id: extraFieldId,\n                length: extraFieldLength,\n                value: extraFieldValue\n            };\n        }\n    },\n    /**\n     * Read the end of the Zip 64 central directory locator.\n     */\n    readBlockZip64EndOfCentralLocator: function() {\n        this.diskWithZip64CentralDirStart = this.reader.readInt(4);\n        this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8);\n        this.disksCount = this.reader.readInt(4);\n        if (this.disksCount > 1) {\n            throw new Error(\"Multi-volumes zip are not supported\");\n        }\n    },\n    /**\n     * Read the local files, based on the offset read in the central part.\n     */\n    readLocalFiles: function() {\n        var i, file;\n        for (i = 0; i < this.files.length; i++) {\n            file = this.files[i];\n            this.reader.setIndex(file.localHeaderOffset);\n            this.checkSignature(sig.LOCAL_FILE_HEADER);\n            file.readLocalPart(this.reader);\n            file.handleUTF8();\n            file.processAttributes();\n        }\n    },\n    /**\n     * Read the central directory.\n     */\n    readCentralDir: function() {\n        var file;\n\n        this.reader.setIndex(this.centralDirOffset);\n        while (this.reader.readString(4) === sig.CENTRAL_FILE_HEADER) {\n            file = new ZipEntry({\n                zip64: this.zip64\n            }, this.loadOptions);\n            file.readCentralPart(this.reader);\n            this.files.push(file);\n        }\n\n        if (this.centralDirRecords !== this.files.length) {\n            if (this.centralDirRecords !== 0 && this.files.length === 0) {\n                // We expected some records but couldn't find ANY.\n                // This is really suspicious, as if something went wrong.\n                throw new Error(\"Corrupted zip or bug: expected \" + this.centralDirRecords + \" records in central dir, got \" + this.files.length);\n            } else {\n                // We found some records but not all.\n                // Something is wrong but we got something for the user: no error here.\n                // console.warn(\"expected\", this.centralDirRecords, \"records in central dir, got\", this.files.length);\n            }\n        }\n    },\n    /**\n     * Read the end of central directory.\n     */\n    readEndOfCentral: function() {\n        var offset = this.reader.lastIndexOfSignature(sig.CENTRAL_DIRECTORY_END);\n        if (offset < 0) {\n            // Check if the content is a truncated zip or complete garbage.\n            // A \"LOCAL_FILE_HEADER\" is not required at the beginning (auto\n            // extractible zip for example) but it can give a good hint.\n            // If an ajax request was used without responseType, we will also\n            // get unreadable data.\n            var isGarbage = !this.isSignature(0, sig.LOCAL_FILE_HEADER);\n\n            if (isGarbage) {\n                throw new Error(\"Can't find end of central directory : is this a zip file ? \" +\n                                \"If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\");\n            } else {\n                throw new Error(\"Corrupted zip : can't find end of central directory\");\n            }\n        }\n        this.reader.setIndex(offset);\n        var endOfCentralDirOffset = offset;\n        this.checkSignature(sig.CENTRAL_DIRECTORY_END);\n        this.readBlockEndOfCentral();\n\n\n        /* extract from the zip spec :\n            4)  If one of the fields in the end of central directory\n                record is too small to hold required data, the field\n                should be set to -1 (0xFFFF or 0xFFFFFFFF) and the\n                ZIP64 format record should be created.\n            5)  The end of central directory record and the\n                Zip64 end of central directory locator record must\n                reside on the same disk when splitting or spanning\n                an archive.\n         */\n        if (this.diskNumber === utils.MAX_VALUE_16BITS || this.diskWithCentralDirStart === utils.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === utils.MAX_VALUE_16BITS || this.centralDirRecords === utils.MAX_VALUE_16BITS || this.centralDirSize === utils.MAX_VALUE_32BITS || this.centralDirOffset === utils.MAX_VALUE_32BITS) {\n            this.zip64 = true;\n\n            /*\n            Warning : the zip64 extension is supported, but ONLY if the 64bits integer read from\n            the zip file can fit into a 32bits integer. This cannot be solved : Javascript represents\n            all numbers as 64-bit double precision IEEE 754 floating point numbers.\n            So, we have 53bits for integers and bitwise operations treat everything as 32bits.\n            see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Bitwise_Operators\n            and http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf section 8.5\n            */\n\n            // should look for a zip64 EOCD locator\n            offset = this.reader.lastIndexOfSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR);\n            if (offset < 0) {\n                throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");\n            }\n            this.reader.setIndex(offset);\n            this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR);\n            this.readBlockZip64EndOfCentralLocator();\n\n            // now the zip64 EOCD record\n            if (!this.isSignature(this.relativeOffsetEndOfZip64CentralDir, sig.ZIP64_CENTRAL_DIRECTORY_END)) {\n                // console.warn(\"ZIP64 end of central directory not where expected.\");\n                this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(sig.ZIP64_CENTRAL_DIRECTORY_END);\n                if (this.relativeOffsetEndOfZip64CentralDir < 0) {\n                    throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");\n                }\n            }\n            this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir);\n            this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_END);\n            this.readBlockZip64EndOfCentral();\n        }\n\n        var expectedEndOfCentralDirOffset = this.centralDirOffset + this.centralDirSize;\n        if (this.zip64) {\n            expectedEndOfCentralDirOffset += 20; // end of central dir 64 locator\n            expectedEndOfCentralDirOffset += 12 /* should not include the leading 12 bytes */ + this.zip64EndOfCentralSize;\n        }\n\n        var extraBytes = endOfCentralDirOffset - expectedEndOfCentralDirOffset;\n\n        if (extraBytes > 0) {\n            // console.warn(extraBytes, \"extra bytes at beginning or within zipfile\");\n            if (this.isSignature(endOfCentralDirOffset, sig.CENTRAL_FILE_HEADER)) {\n                // The offsets seem wrong, but we have something at the specified offset.\n                // So… we keep it.\n            } else {\n                // the offset is wrong, update the \"zero\" of the reader\n                // this happens if data has been prepended (crx files for example)\n                this.reader.zero = extraBytes;\n            }\n        } else if (extraBytes < 0) {\n            throw new Error(\"Corrupted zip: missing \" + Math.abs(extraBytes) + \" bytes.\");\n        }\n    },\n    prepareReader: function(data) {\n        var type = utils.getTypeOf(data);\n        utils.checkSupport(type);\n        if (type === \"string\" && !support.uint8array) {\n            this.reader = new StringReader(data, this.loadOptions.optimizedBinaryString);\n        }\n        else if (type === \"nodebuffer\") {\n            this.reader = new NodeBufferReader(data);\n        }\n        else if (support.uint8array) {\n            this.reader = new Uint8ArrayReader(utils.transformTo(\"uint8array\", data));\n        } else if (support.array) {\n            this.reader = new ArrayReader(utils.transformTo(\"array\", data));\n        } else {\n            throw new Error(\"Unexpected error: unsupported type '\" + type + \"'\");\n        }\n    },\n    /**\n     * Read a zip file and create ZipEntries.\n     * @param {String|ArrayBuffer|Uint8Array|Buffer} data the binary string representing a zip file.\n     */\n    load: function(data) {\n        this.prepareReader(data);\n        this.readEndOfCentral();\n        this.readCentralDir();\n        this.readLocalFiles();\n    }\n};\n// }}} end of ZipEntries\nmodule.exports = ZipEntries;\n\n},{\"./arrayReader\":10,\"./nodeBufferReader\":22,\"./object\":23,\"./signature\":24,\"./stringReader\":25,\"./support\":27,\"./uint8ArrayReader\":28,\"./utils\":31,\"./zipEntry\":33}],33:[function(_dereq_,module,exports){\n'use strict';\nvar StringReader = _dereq_('./stringReader');\nvar utils = _dereq_('./utils');\nvar CompressedObject = _dereq_('./compressedObject');\nvar jszipProto = _dereq_('./object');\nvar support = _dereq_('./support');\n\nvar MADE_BY_DOS = 0x00;\nvar MADE_BY_UNIX = 0x03;\n\n// class ZipEntry {{{\n/**\n * An entry in the zip file.\n * @constructor\n * @param {Object} options Options of the current file.\n * @param {Object} loadOptions Options for loading the stream.\n */\nfunction ZipEntry(options, loadOptions) {\n    this.options = options;\n    this.loadOptions = loadOptions;\n}\nZipEntry.prototype = {\n    /**\n     * say if the file is encrypted.\n     * @return {boolean} true if the file is encrypted, false otherwise.\n     */\n    isEncrypted: function() {\n        // bit 1 is set\n        return (this.bitFlag & 0x0001) === 0x0001;\n    },\n    /**\n     * say if the file has utf-8 filename/comment.\n     * @return {boolean} true if the filename/comment is in utf-8, false otherwise.\n     */\n    useUTF8: function() {\n        // bit 11 is set\n        return (this.bitFlag & 0x0800) === 0x0800;\n    },\n    /**\n     * Prepare the function used to generate the compressed content from this ZipFile.\n     * @param {DataReader} reader the reader to use.\n     * @param {number} from the offset from where we should read the data.\n     * @param {number} length the length of the data to read.\n     * @return {Function} the callback to get the compressed content (the type depends of the DataReader class).\n     */\n    prepareCompressedContent: function(reader, from, length) {\n        return function() {\n            var previousIndex = reader.index;\n            reader.setIndex(from);\n            var compressedFileData = reader.readData(length);\n            reader.setIndex(previousIndex);\n\n            return compressedFileData;\n        };\n    },\n    /**\n     * Prepare the function used to generate the uncompressed content from this ZipFile.\n     * @param {DataReader} reader the reader to use.\n     * @param {number} from the offset from where we should read the data.\n     * @param {number} length the length of the data to read.\n     * @param {JSZip.compression} compression the compression used on this file.\n     * @param {number} uncompressedSize the uncompressed size to expect.\n     * @return {Function} the callback to get the uncompressed content (the type depends of the DataReader class).\n     */\n    prepareContent: function(reader, from, length, compression, uncompressedSize) {\n        return function() {\n\n            var compressedFileData = utils.transformTo(compression.uncompressInputType, this.getCompressedContent());\n            var uncompressedFileData = compression.uncompress(compressedFileData);\n\n            if (uncompressedFileData.length !== uncompressedSize) {\n                throw new Error(\"Bug : uncompressed data size mismatch\");\n            }\n\n            return uncompressedFileData;\n        };\n    },\n    /**\n     * Read the local part of a zip file and add the info in this object.\n     * @param {DataReader} reader the reader to use.\n     */\n    readLocalPart: function(reader) {\n        var compression, localExtraFieldsLength;\n\n        // we already know everything from the central dir !\n        // If the central dir data are false, we are doomed.\n        // On the bright side, the local part is scary  : zip64, data descriptors, both, etc.\n        // The less data we get here, the more reliable this should be.\n        // Let's skip the whole header and dash to the data !\n        reader.skip(22);\n        // in some zip created on windows, the filename stored in the central dir contains \\ instead of /.\n        // Strangely, the filename here is OK.\n        // I would love to treat these zip files as corrupted (see http://www.info-zip.org/FAQ.html#backslashes\n        // or APPNOTE#4.4.17.1, \"All slashes MUST be forward slashes '/'\") but there are a lot of bad zip generators...\n        // Search \"unzip mismatching \"local\" filename continuing with \"central\" filename version\" on\n        // the internet.\n        //\n        // I think I see the logic here : the central directory is used to display\n        // content and the local directory is used to extract the files. Mixing / and \\\n        // may be used to display \\ to windows users and use / when extracting the files.\n        // Unfortunately, this lead also to some issues : http://seclists.org/fulldisclosure/2009/Sep/394\n        this.fileNameLength = reader.readInt(2);\n        localExtraFieldsLength = reader.readInt(2); // can't be sure this will be the same as the central dir\n        this.fileName = reader.readData(this.fileNameLength);\n        reader.skip(localExtraFieldsLength);\n\n        if (this.compressedSize == -1 || this.uncompressedSize == -1) {\n            throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory \" + \"(compressedSize == -1 || uncompressedSize == -1)\");\n        }\n\n        compression = utils.findCompression(this.compressionMethod);\n        if (compression === null) { // no compression found\n            throw new Error(\"Corrupted zip : compression \" + utils.pretty(this.compressionMethod) + \" unknown (inner file : \" +  utils.transformTo(\"string\", this.fileName) + \")\");\n        }\n        this.decompressed = new CompressedObject();\n        this.decompressed.compressedSize = this.compressedSize;\n        this.decompressed.uncompressedSize = this.uncompressedSize;\n        this.decompressed.crc32 = this.crc32;\n        this.decompressed.compressionMethod = this.compressionMethod;\n        this.decompressed.getCompressedContent = this.prepareCompressedContent(reader, reader.index, this.compressedSize, compression);\n        this.decompressed.getContent = this.prepareContent(reader, reader.index, this.compressedSize, compression, this.uncompressedSize);\n\n        // we need to compute the crc32...\n        if (this.loadOptions.checkCRC32) {\n            this.decompressed = utils.transformTo(\"string\", this.decompressed.getContent());\n            if (jszipProto.crc32(this.decompressed) !== this.crc32) {\n                throw new Error(\"Corrupted zip : CRC32 mismatch\");\n            }\n        }\n    },\n\n    /**\n     * Read the central part of a zip file and add the info in this object.\n     * @param {DataReader} reader the reader to use.\n     */\n    readCentralPart: function(reader) {\n        this.versionMadeBy = reader.readInt(2);\n        this.versionNeeded = reader.readInt(2);\n        this.bitFlag = reader.readInt(2);\n        this.compressionMethod = reader.readString(2);\n        this.date = reader.readDate();\n        this.crc32 = reader.readInt(4);\n        this.compressedSize = reader.readInt(4);\n        this.uncompressedSize = reader.readInt(4);\n        this.fileNameLength = reader.readInt(2);\n        this.extraFieldsLength = reader.readInt(2);\n        this.fileCommentLength = reader.readInt(2);\n        this.diskNumberStart = reader.readInt(2);\n        this.internalFileAttributes = reader.readInt(2);\n        this.externalFileAttributes = reader.readInt(4);\n        this.localHeaderOffset = reader.readInt(4);\n\n        if (this.isEncrypted()) {\n            throw new Error(\"Encrypted zip are not supported\");\n        }\n\n        this.fileName = reader.readData(this.fileNameLength);\n        this.readExtraFields(reader);\n        this.parseZIP64ExtraField(reader);\n        this.fileComment = reader.readData(this.fileCommentLength);\n    },\n\n    /**\n     * Parse the external file attributes and get the unix/dos permissions.\n     */\n    processAttributes: function () {\n        this.unixPermissions = null;\n        this.dosPermissions = null;\n        var madeBy = this.versionMadeBy >> 8;\n\n        // Check if we have the DOS directory flag set.\n        // We look for it in the DOS and UNIX permissions\n        // but some unknown platform could set it as a compatibility flag.\n        this.dir = this.externalFileAttributes & 0x0010 ? true : false;\n\n        if(madeBy === MADE_BY_DOS) {\n            // first 6 bits (0 to 5)\n            this.dosPermissions = this.externalFileAttributes & 0x3F;\n        }\n\n        if(madeBy === MADE_BY_UNIX) {\n            this.unixPermissions = (this.externalFileAttributes >> 16) & 0xFFFF;\n            // the octal permissions are in (this.unixPermissions & 0x01FF).toString(8);\n        }\n\n        // fail safe : if the name ends with a / it probably means a folder\n        if (!this.dir && this.fileNameStr.slice(-1) === '/') {\n            this.dir = true;\n        }\n    },\n\n    /**\n     * Parse the ZIP64 extra field and merge the info in the current ZipEntry.\n     * @param {DataReader} reader the reader to use.\n     */\n    parseZIP64ExtraField: function(reader) {\n\n        if (!this.extraFields[0x0001]) {\n            return;\n        }\n\n        // should be something, preparing the extra reader\n        var extraReader = new StringReader(this.extraFields[0x0001].value);\n\n        // I really hope that these 64bits integer can fit in 32 bits integer, because js\n        // won't let us have more.\n        if (this.uncompressedSize === utils.MAX_VALUE_32BITS) {\n            this.uncompressedSize = extraReader.readInt(8);\n        }\n        if (this.compressedSize === utils.MAX_VALUE_32BITS) {\n            this.compressedSize = extraReader.readInt(8);\n        }\n        if (this.localHeaderOffset === utils.MAX_VALUE_32BITS) {\n            this.localHeaderOffset = extraReader.readInt(8);\n        }\n        if (this.diskNumberStart === utils.MAX_VALUE_32BITS) {\n            this.diskNumberStart = extraReader.readInt(4);\n        }\n    },\n    /**\n     * Read the central part of a zip file and add the info in this object.\n     * @param {DataReader} reader the reader to use.\n     */\n    readExtraFields: function(reader) {\n        var start = reader.index,\n            extraFieldId,\n            extraFieldLength,\n            extraFieldValue;\n\n        this.extraFields = this.extraFields || {};\n\n        while (reader.index < start + this.extraFieldsLength) {\n            extraFieldId = reader.readInt(2);\n            extraFieldLength = reader.readInt(2);\n            extraFieldValue = reader.readString(extraFieldLength);\n\n            this.extraFields[extraFieldId] = {\n                id: extraFieldId,\n                length: extraFieldLength,\n                value: extraFieldValue\n            };\n        }\n    },\n    /**\n     * Apply an UTF8 transformation if needed.\n     */\n    handleUTF8: function() {\n        var decodeParamType = support.uint8array ? \"uint8array\" : \"array\";\n        if (this.useUTF8()) {\n            this.fileNameStr = jszipProto.utf8decode(this.fileName);\n            this.fileCommentStr = jszipProto.utf8decode(this.fileComment);\n        } else {\n            var upath = this.findExtraFieldUnicodePath();\n            if (upath !== null) {\n                this.fileNameStr = upath;\n            } else {\n                var fileNameByteArray =  utils.transformTo(decodeParamType, this.fileName);\n                this.fileNameStr = this.loadOptions.decodeFileName(fileNameByteArray);\n            }\n\n            var ucomment = this.findExtraFieldUnicodeComment();\n            if (ucomment !== null) {\n                this.fileCommentStr = ucomment;\n            } else {\n                var commentByteArray =  utils.transformTo(decodeParamType, this.fileComment);\n                this.fileCommentStr = this.loadOptions.decodeFileName(commentByteArray);\n            }\n        }\n    },\n\n    /**\n     * Find the unicode path declared in the extra field, if any.\n     * @return {String} the unicode path, null otherwise.\n     */\n    findExtraFieldUnicodePath: function() {\n        var upathField = this.extraFields[0x7075];\n        if (upathField) {\n            var extraReader = new StringReader(upathField.value);\n\n            // wrong version\n            if (extraReader.readInt(1) !== 1) {\n                return null;\n            }\n\n            // the crc of the filename changed, this field is out of date.\n            if (jszipProto.crc32(this.fileName) !== extraReader.readInt(4)) {\n                return null;\n            }\n\n            return jszipProto.utf8decode(extraReader.readString(upathField.length - 5));\n        }\n        return null;\n    },\n\n    /**\n     * Find the unicode comment declared in the extra field, if any.\n     * @return {String} the unicode comment, null otherwise.\n     */\n    findExtraFieldUnicodeComment: function() {\n        var ucommentField = this.extraFields[0x6375];\n        if (ucommentField) {\n            var extraReader = new StringReader(ucommentField.value);\n\n            // wrong version\n            if (extraReader.readInt(1) !== 1) {\n                return null;\n            }\n\n            // the crc of the comment changed, this field is out of date.\n            if (jszipProto.crc32(this.fileComment) !== extraReader.readInt(4)) {\n                return null;\n            }\n\n            return jszipProto.utf8decode(extraReader.readString(ucommentField.length - 5));\n        }\n        return null;\n    }\n};\nmodule.exports = ZipEntry;\n\n},{\"./compressedObject\":12,\"./object\":23,\"./stringReader\":25,\"./support\":27,\"./utils\":31}],34:[function(_dereq_,module,exports){\n// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = _dereq_('./lib/utils/common').assign;\n\nvar deflate   = _dereq_('./lib/deflate');\nvar inflate   = _dereq_('./lib/inflate');\nvar constants = _dereq_('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n\n},{\"./lib/deflate\":35,\"./lib/inflate\":36,\"./lib/utils/common\":37,\"./lib/zlib/constants\":40}],35:[function(_dereq_,module,exports){\n'use strict';\n\n\nvar zlib_deflate = _dereq_('./zlib/deflate');\nvar utils        = _dereq_('./utils/common');\nvar strings      = _dereq_('./utils/strings');\nvar msg          = _dereq_('./zlib/messages');\nvar ZStream      = _dereq_('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overriden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n\n},{\"./utils/common\":37,\"./utils/strings\":38,\"./zlib/deflate\":42,\"./zlib/messages\":47,\"./zlib/zstream\":49}],36:[function(_dereq_,module,exports){\n'use strict';\n\n\nvar zlib_inflate = _dereq_('./zlib/inflate');\nvar utils        = _dereq_('./utils/common');\nvar strings      = _dereq_('./utils/strings');\nvar c            = _dereq_('./zlib/constants');\nvar msg          = _dereq_('./zlib/messages');\nvar ZStream      = _dereq_('./zlib/zstream');\nvar GZheader     = _dereq_('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overriden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n  var dict;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      // Convert data if needed\n      if (typeof dictionary === 'string') {\n        dict = strings.string2buf(dictionary);\n      } else if (toString.call(dictionary) === '[object ArrayBuffer]') {\n        dict = new Uint8Array(dictionary);\n      } else {\n        dict = dictionary;\n      }\n\n      status = zlib_inflate.inflateSetDictionary(this.strm, dict);\n\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 alligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n\n},{\"./utils/common\":37,\"./utils/strings\":38,\"./zlib/constants\":40,\"./zlib/gzheader\":43,\"./zlib/inflate\":45,\"./zlib/messages\":47,\"./zlib/zstream\":49}],37:[function(_dereq_,module,exports){\n'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (source.hasOwnProperty(p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n\n},{}],38:[function(_dereq_,module,exports){\n// String encode/decode helpers\n'use strict';\n\n\nvar utils = _dereq_('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safary\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // use fallback for big arrays to avoid stack overflow\n  if (len < 65537) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Fuckup - very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means vuffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\n},{\"./common\":37}],39:[function(_dereq_,module,exports){\n'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It doesn't worth to make additional optimizationa as in original.\n// Small size is preferable.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n\n},{}],40:[function(_dereq_,module,exports){\n'use strict';\n\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n},{}],41:[function(_dereq_,module,exports){\n'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n\n},{}],42:[function(_dereq_,module,exports){\n'use strict';\n\nvar utils   = _dereq_('../utils/common');\nvar trees   = _dereq_('./trees');\nvar adler32 = _dereq_('./adler32');\nvar crc32   = _dereq_('./crc32');\nvar msg     = _dereq_('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n                );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n\n},{\"../utils/common\":37,\"./adler32\":39,\"./crc32\":41,\"./messages\":47,\"./trees\":48}],43:[function(_dereq_,module,exports){\n'use strict';\n\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n\n},{}],44:[function(_dereq_,module,exports){\n'use strict';\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n},{}],45:[function(_dereq_,module,exports){\n'use strict';\n\n\nvar utils         = _dereq_('../utils/common');\nvar adler32       = _dereq_('./adler32');\nvar crc32         = _dereq_('./crc32');\nvar inflate_fast  = _dereq_('./inffast');\nvar inflate_table = _dereq_('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n    case HEAD:\n      if (state.wrap === 0) {\n        state.mode = TYPEDO;\n        break;\n      }\n      //=== NEEDBITS(16);\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n        state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = FLAGS;\n        break;\n      }\n      state.flags = 0;           /* expect zlib header */\n      if (state.head) {\n        state.head.done = false;\n      }\n      if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n        strm.msg = 'incorrect header check';\n        state.mode = BAD;\n        break;\n      }\n      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n        strm.msg = 'unknown compression method';\n        state.mode = BAD;\n        break;\n      }\n      //--- DROPBITS(4) ---//\n      hold >>>= 4;\n      bits -= 4;\n      //---//\n      len = (hold & 0x0f)/*BITS(4)*/ + 8;\n      if (state.wbits === 0) {\n        state.wbits = len;\n      }\n      else if (len > state.wbits) {\n        strm.msg = 'invalid window size';\n        state.mode = BAD;\n        break;\n      }\n      state.dmax = 1 << len;\n      //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n      state.mode = hold & 0x200 ? DICTID : TYPE;\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      break;\n    case FLAGS:\n      //=== NEEDBITS(16); */\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.flags = hold;\n      if ((state.flags & 0xff) !== Z_DEFLATED) {\n        strm.msg = 'unknown compression method';\n        state.mode = BAD;\n        break;\n      }\n      if (state.flags & 0xe000) {\n        strm.msg = 'unknown header flags set';\n        state.mode = BAD;\n        break;\n      }\n      if (state.head) {\n        state.head.text = ((hold >> 8) & 1);\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = TIME;\n      /* falls through */\n    case TIME:\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if (state.head) {\n        state.head.time = hold;\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC4(state.check, hold)\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        hbuf[2] = (hold >>> 16) & 0xff;\n        hbuf[3] = (hold >>> 24) & 0xff;\n        state.check = crc32(state.check, hbuf, 4, 0);\n        //===\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = OS;\n      /* falls through */\n    case OS:\n      //=== NEEDBITS(16); */\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if (state.head) {\n        state.head.xflags = (hold & 0xff);\n        state.head.os = (hold >> 8);\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = EXLEN;\n      /* falls through */\n    case EXLEN:\n      if (state.flags & 0x0400) {\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.length = hold;\n        if (state.head) {\n          state.head.extra_len = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n      }\n      else if (state.head) {\n        state.head.extra = null/*Z_NULL*/;\n      }\n      state.mode = EXTRA;\n      /* falls through */\n    case EXTRA:\n      if (state.flags & 0x0400) {\n        copy = state.length;\n        if (copy > have) { copy = have; }\n        if (copy) {\n          if (state.head) {\n            len = state.head.extra_len - state.length;\n            if (!state.head.extra) {\n              // Use untyped array for more conveniend processing later\n              state.head.extra = new Array(state.head.extra_len);\n            }\n            utils.arraySet(\n              state.head.extra,\n              input,\n              next,\n              // extra field is limited to 65536 bytes\n              // - no need for additional size check\n              copy,\n              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n              len\n            );\n            //zmemcpy(state.head.extra + len, next,\n            //        len + copy > state.head.extra_max ?\n            //        state.head.extra_max - len : copy);\n          }\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          state.length -= copy;\n        }\n        if (state.length) { break inf_leave; }\n      }\n      state.length = 0;\n      state.mode = NAME;\n      /* falls through */\n    case NAME:\n      if (state.flags & 0x0800) {\n        if (have === 0) { break inf_leave; }\n        copy = 0;\n        do {\n          // TODO: 2 or 1 bytes?\n          len = input[next + copy++];\n          /* use constant limit because in js we should not preallocate memory */\n          if (state.head && len &&\n              (state.length < 65536 /*state.head.name_max*/)) {\n            state.head.name += String.fromCharCode(len);\n          }\n        } while (len && copy < have);\n\n        if (state.flags & 0x0200) {\n          state.check = crc32(state.check, input, copy, next);\n        }\n        have -= copy;\n        next += copy;\n        if (len) { break inf_leave; }\n      }\n      else if (state.head) {\n        state.head.name = null;\n      }\n      state.length = 0;\n      state.mode = COMMENT;\n      /* falls through */\n    case COMMENT:\n      if (state.flags & 0x1000) {\n        if (have === 0) { break inf_leave; }\n        copy = 0;\n        do {\n          len = input[next + copy++];\n          /* use constant limit because in js we should not preallocate memory */\n          if (state.head && len &&\n              (state.length < 65536 /*state.head.comm_max*/)) {\n            state.head.comment += String.fromCharCode(len);\n          }\n        } while (len && copy < have);\n        if (state.flags & 0x0200) {\n          state.check = crc32(state.check, input, copy, next);\n        }\n        have -= copy;\n        next += copy;\n        if (len) { break inf_leave; }\n      }\n      else if (state.head) {\n        state.head.comment = null;\n      }\n      state.mode = HCRC;\n      /* falls through */\n    case HCRC:\n      if (state.flags & 0x0200) {\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (hold !== (state.check & 0xffff)) {\n          strm.msg = 'header crc mismatch';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n      }\n      if (state.head) {\n        state.head.hcrc = ((state.flags >> 9) & 1);\n        state.head.done = true;\n      }\n      strm.adler = state.check = 0;\n      state.mode = TYPE;\n      break;\n    case DICTID:\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      strm.adler = state.check = zswap32(hold);\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = DICT;\n      /* falls through */\n    case DICT:\n      if (state.havedict === 0) {\n        //--- RESTORE() ---\n        strm.next_out = put;\n        strm.avail_out = left;\n        strm.next_in = next;\n        strm.avail_in = have;\n        state.hold = hold;\n        state.bits = bits;\n        //---\n        return Z_NEED_DICT;\n      }\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n      state.mode = TYPE;\n      /* falls through */\n    case TYPE:\n      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case TYPEDO:\n      if (state.last) {\n        //--- BYTEBITS() ---//\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        state.mode = CHECK;\n        break;\n      }\n      //=== NEEDBITS(3); */\n      while (bits < 3) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.last = (hold & 0x01)/*BITS(1)*/;\n      //--- DROPBITS(1) ---//\n      hold >>>= 1;\n      bits -= 1;\n      //---//\n\n      switch ((hold & 0x03)/*BITS(2)*/) {\n      case 0:                             /* stored block */\n        //Tracev((stderr, \"inflate:     stored block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = STORED;\n        break;\n      case 1:                             /* fixed block */\n        fixedtables(state);\n        //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = LEN_;             /* decode codes */\n        if (flush === Z_TREES) {\n          //--- DROPBITS(2) ---//\n          hold >>>= 2;\n          bits -= 2;\n          //---//\n          break inf_leave;\n        }\n        break;\n      case 2:                             /* dynamic block */\n        //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = TABLE;\n        break;\n      case 3:\n        strm.msg = 'invalid block type';\n        state.mode = BAD;\n      }\n      //--- DROPBITS(2) ---//\n      hold >>>= 2;\n      bits -= 2;\n      //---//\n      break;\n    case STORED:\n      //--- BYTEBITS() ---// /* go to byte boundary */\n      hold >>>= bits & 7;\n      bits -= bits & 7;\n      //---//\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n        strm.msg = 'invalid stored block lengths';\n        state.mode = BAD;\n        break;\n      }\n      state.length = hold & 0xffff;\n      //Tracev((stderr, \"inflate:       stored length %u\\n\",\n      //        state.length));\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = COPY_;\n      if (flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case COPY_:\n      state.mode = COPY;\n      /* falls through */\n    case COPY:\n      copy = state.length;\n      if (copy) {\n        if (copy > have) { copy = have; }\n        if (copy > left) { copy = left; }\n        if (copy === 0) { break inf_leave; }\n        //--- zmemcpy(put, next, copy); ---\n        utils.arraySet(output, input, next, copy, put);\n        //---//\n        have -= copy;\n        next += copy;\n        left -= copy;\n        put += copy;\n        state.length -= copy;\n        break;\n      }\n      //Tracev((stderr, \"inflate:       stored end\\n\"));\n      state.mode = TYPE;\n      break;\n    case TABLE:\n      //=== NEEDBITS(14); */\n      while (bits < 14) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n      //--- DROPBITS(5) ---//\n      hold >>>= 5;\n      bits -= 5;\n      //---//\n      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n      //--- DROPBITS(5) ---//\n      hold >>>= 5;\n      bits -= 5;\n      //---//\n      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n      //--- DROPBITS(4) ---//\n      hold >>>= 4;\n      bits -= 4;\n      //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n      if (state.nlen > 286 || state.ndist > 30) {\n        strm.msg = 'too many length or distance symbols';\n        state.mode = BAD;\n        break;\n      }\n//#endif\n      //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n      state.have = 0;\n      state.mode = LENLENS;\n      /* falls through */\n    case LENLENS:\n      while (state.have < state.ncode) {\n        //=== NEEDBITS(3);\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n        //--- DROPBITS(3) ---//\n        hold >>>= 3;\n        bits -= 3;\n        //---//\n      }\n      while (state.have < 19) {\n        state.lens[order[state.have++]] = 0;\n      }\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      //state.next = state.codes;\n      //state.lencode = state.next;\n      // Switch to use dynamic table\n      state.lencode = state.lendyn;\n      state.lenbits = 7;\n\n      opts = { bits: state.lenbits };\n      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n      state.lenbits = opts.bits;\n\n      if (ret) {\n        strm.msg = 'invalid code lengths set';\n        state.mode = BAD;\n        break;\n      }\n      //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n      state.have = 0;\n      state.mode = CODELENS;\n      /* falls through */\n    case CODELENS:\n      while (state.have < state.nlen + state.ndist) {\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_val < 16) {\n          //--- DROPBITS(here.bits) ---//\n          hold >>>= here_bits;\n          bits -= here_bits;\n          //---//\n          state.lens[state.have++] = here_val;\n        }\n        else {\n          if (here_val === 16) {\n            //=== NEEDBITS(here.bits + 2);\n            n = here_bits + 2;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            if (state.have === 0) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            len = state.lens[state.have - 1];\n            copy = 3 + (hold & 0x03);//BITS(2);\n            //--- DROPBITS(2) ---//\n            hold >>>= 2;\n            bits -= 2;\n            //---//\n          }\n          else if (here_val === 17) {\n            //=== NEEDBITS(here.bits + 3);\n            n = here_bits + 3;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            len = 0;\n            copy = 3 + (hold & 0x07);//BITS(3);\n            //--- DROPBITS(3) ---//\n            hold >>>= 3;\n            bits -= 3;\n            //---//\n          }\n          else {\n            //=== NEEDBITS(here.bits + 7);\n            n = here_bits + 7;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            len = 0;\n            copy = 11 + (hold & 0x7f);//BITS(7);\n            //--- DROPBITS(7) ---//\n            hold >>>= 7;\n            bits -= 7;\n            //---//\n          }\n          if (state.have + copy > state.nlen + state.ndist) {\n            strm.msg = 'invalid bit length repeat';\n            state.mode = BAD;\n            break;\n          }\n          while (copy--) {\n            state.lens[state.have++] = len;\n          }\n        }\n      }\n\n      /* handle error breaks in while */\n      if (state.mode === BAD) { break; }\n\n      /* check for end-of-block code (better have one) */\n      if (state.lens[256] === 0) {\n        strm.msg = 'invalid code -- missing end-of-block';\n        state.mode = BAD;\n        break;\n      }\n\n      /* build code tables -- note: do not change the lenbits or distbits\n         values here (9 and 6) without reading the comments in inftrees.h\n         concerning the ENOUGH constants, which depend on those values */\n      state.lenbits = 9;\n\n      opts = { bits: state.lenbits };\n      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      // state.next_index = opts.table_index;\n      state.lenbits = opts.bits;\n      // state.lencode = state.next;\n\n      if (ret) {\n        strm.msg = 'invalid literal/lengths set';\n        state.mode = BAD;\n        break;\n      }\n\n      state.distbits = 6;\n      //state.distcode.copy(state.codes);\n      // Switch to use dynamic table\n      state.distcode = state.distdyn;\n      opts = { bits: state.distbits };\n      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      // state.next_index = opts.table_index;\n      state.distbits = opts.bits;\n      // state.distcode = state.next;\n\n      if (ret) {\n        strm.msg = 'invalid distances set';\n        state.mode = BAD;\n        break;\n      }\n      //Tracev((stderr, 'inflate:       codes ok\\n'));\n      state.mode = LEN_;\n      if (flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case LEN_:\n      state.mode = LEN;\n      /* falls through */\n    case LEN:\n      if (have >= 6 && left >= 258) {\n        //--- RESTORE() ---\n        strm.next_out = put;\n        strm.avail_out = left;\n        strm.next_in = next;\n        strm.avail_in = have;\n        state.hold = hold;\n        state.bits = bits;\n        //---\n        inflate_fast(strm, _out);\n        //--- LOAD() ---\n        put = strm.next_out;\n        output = strm.output;\n        left = strm.avail_out;\n        next = strm.next_in;\n        input = strm.input;\n        have = strm.avail_in;\n        hold = state.hold;\n        bits = state.bits;\n        //---\n\n        if (state.mode === TYPE) {\n          state.back = -1;\n        }\n        break;\n      }\n      state.back = 0;\n      for (;;) {\n        here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n        here_bits = here >>> 24;\n        here_op = (here >>> 16) & 0xff;\n        here_val = here & 0xffff;\n\n        if (here_bits <= bits) { break; }\n        //--- PULLBYTE() ---//\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n        //---//\n      }\n      if (here_op && (here_op & 0xf0) === 0) {\n        last_bits = here_bits;\n        last_op = here_op;\n        last_val = here_val;\n        for (;;) {\n          here = state.lencode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((last_bits + here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        //--- DROPBITS(last.bits) ---//\n        hold >>>= last_bits;\n        bits -= last_bits;\n        //---//\n        state.back += last_bits;\n      }\n      //--- DROPBITS(here.bits) ---//\n      hold >>>= here_bits;\n      bits -= here_bits;\n      //---//\n      state.back += here_bits;\n      state.length = here_val;\n      if (here_op === 0) {\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        state.mode = LIT;\n        break;\n      }\n      if (here_op & 32) {\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.back = -1;\n        state.mode = TYPE;\n        break;\n      }\n      if (here_op & 64) {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break;\n      }\n      state.extra = here_op & 15;\n      state.mode = LENEXT;\n      /* falls through */\n    case LENEXT:\n      if (state.extra) {\n        //=== NEEDBITS(state.extra);\n        n = state.extra;\n        while (bits < n) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n        //--- DROPBITS(state.extra) ---//\n        hold >>>= state.extra;\n        bits -= state.extra;\n        //---//\n        state.back += state.extra;\n      }\n      //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n      state.was = state.length;\n      state.mode = DIST;\n      /* falls through */\n    case DIST:\n      for (;;) {\n        here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n        here_bits = here >>> 24;\n        here_op = (here >>> 16) & 0xff;\n        here_val = here & 0xffff;\n\n        if ((here_bits) <= bits) { break; }\n        //--- PULLBYTE() ---//\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n        //---//\n      }\n      if ((here_op & 0xf0) === 0) {\n        last_bits = here_bits;\n        last_op = here_op;\n        last_val = here_val;\n        for (;;) {\n          here = state.distcode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((last_bits + here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        //--- DROPBITS(last.bits) ---//\n        hold >>>= last_bits;\n        bits -= last_bits;\n        //---//\n        state.back += last_bits;\n      }\n      //--- DROPBITS(here.bits) ---//\n      hold >>>= here_bits;\n      bits -= here_bits;\n      //---//\n      state.back += here_bits;\n      if (here_op & 64) {\n        strm.msg = 'invalid distance code';\n        state.mode = BAD;\n        break;\n      }\n      state.offset = here_val;\n      state.extra = (here_op) & 15;\n      state.mode = DISTEXT;\n      /* falls through */\n    case DISTEXT:\n      if (state.extra) {\n        //=== NEEDBITS(state.extra);\n        n = state.extra;\n        while (bits < n) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n        //--- DROPBITS(state.extra) ---//\n        hold >>>= state.extra;\n        bits -= state.extra;\n        //---//\n        state.back += state.extra;\n      }\n//#ifdef INFLATE_STRICT\n      if (state.offset > state.dmax) {\n        strm.msg = 'invalid distance too far back';\n        state.mode = BAD;\n        break;\n      }\n//#endif\n      //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n      state.mode = MATCH;\n      /* falls through */\n    case MATCH:\n      if (left === 0) { break inf_leave; }\n      copy = _out - left;\n      if (state.offset > copy) {         /* copy from window */\n        copy = state.offset - copy;\n        if (copy > state.whave) {\n          if (state.sane) {\n            strm.msg = 'invalid distance too far back';\n            state.mode = BAD;\n            break;\n          }\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n        }\n        if (copy > state.wnext) {\n          copy -= state.wnext;\n          from = state.wsize - copy;\n        }\n        else {\n          from = state.wnext - copy;\n        }\n        if (copy > state.length) { copy = state.length; }\n        from_source = state.window;\n      }\n      else {                              /* copy from output */\n        from_source = output;\n        from = put - state.offset;\n        copy = state.length;\n      }\n      if (copy > left) { copy = left; }\n      left -= copy;\n      state.length -= copy;\n      do {\n        output[put++] = from_source[from++];\n      } while (--copy);\n      if (state.length === 0) { state.mode = LEN; }\n      break;\n    case LIT:\n      if (left === 0) { break inf_leave; }\n      output[put++] = state.length;\n      left--;\n      state.mode = LEN;\n      break;\n    case CHECK:\n      if (state.wrap) {\n        //=== NEEDBITS(32);\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          // Use '|' insdead of '+' to make sure that result is signed\n          hold |= input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        _out -= left;\n        strm.total_out += _out;\n        state.total += _out;\n        if (_out) {\n          strm.adler = state.check =\n              /*UPDATE(state.check, put - _out, _out);*/\n              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n        }\n        _out = left;\n        // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n        if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n          strm.msg = 'incorrect data check';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n      }\n      state.mode = LENGTH;\n      /* falls through */\n    case LENGTH:\n      if (state.wrap && state.flags) {\n        //=== NEEDBITS(32);\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (hold !== (state.total & 0xffffffff)) {\n          strm.msg = 'incorrect length check';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n      }\n      state.mode = DONE;\n      /* falls through */\n    case DONE:\n      ret = Z_STREAM_END;\n      break inf_leave;\n    case BAD:\n      ret = Z_DATA_ERROR;\n      break inf_leave;\n    case MEM:\n      return Z_MEM_ERROR;\n    case SYNC:\n      /* falls through */\n    default:\n      return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n\n},{\"../utils/common\":37,\"./adler32\":39,\"./crc32\":41,\"./inffast\":44,\"./inftrees\":46}],46:[function(_dereq_,module,exports){\n'use strict';\n\n\nvar utils = _dereq_('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n},{\"../utils/common\":37}],47:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n},{}],48:[function(_dereq_,module,exports){\n'use strict';\n\n\nvar utils = _dereq_('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n\n},{\"../utils/common\":37}],49:[function(_dereq_,module,exports){\n'use strict';\n\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n\n},{}],50:[function(_dereq_,module,exports){\n'use strict';\r\n\r\nmodule.exports = INTERNAL;\r\n\r\nfunction INTERNAL() {}\n},{}],51:[function(_dereq_,module,exports){\n'use strict';\r\nvar Promise = _dereq_('./promise');\r\nvar reject = _dereq_('./reject');\r\nvar resolve = _dereq_('./resolve');\r\nvar INTERNAL = _dereq_('./INTERNAL');\r\nvar handlers = _dereq_('./handlers');\r\nmodule.exports = all;\r\nfunction all(iterable) {\r\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\r\n    return reject(new TypeError('must be an array'));\r\n  }\r\n\r\n  var len = iterable.length;\r\n  var called = false;\r\n  if (!len) {\r\n    return resolve([]);\r\n  }\r\n\r\n  var values = new Array(len);\r\n  var resolved = 0;\r\n  var i = -1;\r\n  var promise = new Promise(INTERNAL);\r\n  \r\n  while (++i < len) {\r\n    allResolver(iterable[i], i);\r\n  }\r\n  return promise;\r\n  function allResolver(value, i) {\r\n    resolve(value).then(resolveFromAll, function (error) {\r\n      if (!called) {\r\n        called = true;\r\n        handlers.reject(promise, error);\r\n      }\r\n    });\r\n    function resolveFromAll(outValue) {\r\n      values[i] = outValue;\r\n      if (++resolved === len & !called) {\r\n        called = true;\r\n        handlers.resolve(promise, values);\r\n      }\r\n    }\r\n  }\r\n}\n},{\"./INTERNAL\":50,\"./handlers\":52,\"./promise\":54,\"./reject\":57,\"./resolve\":58}],52:[function(_dereq_,module,exports){\n'use strict';\r\nvar tryCatch = _dereq_('./tryCatch');\r\nvar resolveThenable = _dereq_('./resolveThenable');\r\nvar states = _dereq_('./states');\r\n\r\nexports.resolve = function (self, value) {\r\n  var result = tryCatch(getThen, value);\r\n  if (result.status === 'error') {\r\n    return exports.reject(self, result.value);\r\n  }\r\n  var thenable = result.value;\r\n\r\n  if (thenable) {\r\n    resolveThenable.safely(self, thenable);\r\n  } else {\r\n    self.state = states.FULFILLED;\r\n    self.outcome = value;\r\n    var i = -1;\r\n    var len = self.queue.length;\r\n    while (++i < len) {\r\n      self.queue[i].callFulfilled(value);\r\n    }\r\n  }\r\n  return self;\r\n};\r\nexports.reject = function (self, error) {\r\n  self.state = states.REJECTED;\r\n  self.outcome = error;\r\n  var i = -1;\r\n  var len = self.queue.length;\r\n  while (++i < len) {\r\n    self.queue[i].callRejected(error);\r\n  }\r\n  return self;\r\n};\r\n\r\nfunction getThen(obj) {\r\n  // Make sure we only access the accessor once as required by the spec\r\n  var then = obj && obj.then;\r\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\r\n    return function appyThen() {\r\n      then.apply(obj, arguments);\r\n    };\r\n  }\r\n}\r\n\n},{\"./resolveThenable\":59,\"./states\":60,\"./tryCatch\":61}],53:[function(_dereq_,module,exports){\nmodule.exports = exports = _dereq_('./promise');\r\n\r\nexports.resolve = _dereq_('./resolve');\r\nexports.reject = _dereq_('./reject');\r\nexports.all = _dereq_('./all');\r\nexports.race = _dereq_('./race');\r\n\n},{\"./all\":51,\"./promise\":54,\"./race\":56,\"./reject\":57,\"./resolve\":58}],54:[function(_dereq_,module,exports){\n'use strict';\r\n\r\nvar unwrap = _dereq_('./unwrap');\r\nvar INTERNAL = _dereq_('./INTERNAL');\r\nvar resolveThenable = _dereq_('./resolveThenable');\r\nvar states = _dereq_('./states');\r\nvar QueueItem = _dereq_('./queueItem');\r\n\r\nmodule.exports = Promise;\r\nfunction Promise(resolver) {\r\n  if (!(this instanceof Promise)) {\r\n    return new Promise(resolver);\r\n  }\r\n  if (typeof resolver !== 'function') {\r\n    throw new TypeError('resolver must be a function');\r\n  }\r\n  this.state = states.PENDING;\r\n  this.queue = [];\r\n  this.outcome = void 0;\r\n  if (resolver !== INTERNAL) {\r\n    resolveThenable.safely(this, resolver);\r\n  }\r\n}\r\n\r\nPromise.prototype['catch'] = function (onRejected) {\r\n  return this.then(null, onRejected);\r\n};\r\nPromise.prototype.then = function (onFulfilled, onRejected) {\r\n  if (typeof onFulfilled !== 'function' && this.state === states.FULFILLED ||\r\n    typeof onRejected !== 'function' && this.state === states.REJECTED) {\r\n    return this;\r\n  }\r\n  var promise = new Promise(INTERNAL);\r\n  if (this.state !== states.PENDING) {\r\n    var resolver = this.state === states.FULFILLED ? onFulfilled : onRejected;\r\n    unwrap(promise, resolver, this.outcome);\r\n  } else {\r\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\r\n  }\r\n\r\n  return promise;\r\n};\r\n\n},{\"./INTERNAL\":50,\"./queueItem\":55,\"./resolveThenable\":59,\"./states\":60,\"./unwrap\":62}],55:[function(_dereq_,module,exports){\n'use strict';\r\nvar handlers = _dereq_('./handlers');\r\nvar unwrap = _dereq_('./unwrap');\r\n\r\nmodule.exports = QueueItem;\r\nfunction QueueItem(promise, onFulfilled, onRejected) {\r\n  this.promise = promise;\r\n  if (typeof onFulfilled === 'function') {\r\n    this.onFulfilled = onFulfilled;\r\n    this.callFulfilled = this.otherCallFulfilled;\r\n  }\r\n  if (typeof onRejected === 'function') {\r\n    this.onRejected = onRejected;\r\n    this.callRejected = this.otherCallRejected;\r\n  }\r\n}\r\nQueueItem.prototype.callFulfilled = function (value) {\r\n  handlers.resolve(this.promise, value);\r\n};\r\nQueueItem.prototype.otherCallFulfilled = function (value) {\r\n  unwrap(this.promise, this.onFulfilled, value);\r\n};\r\nQueueItem.prototype.callRejected = function (value) {\r\n  handlers.reject(this.promise, value);\r\n};\r\nQueueItem.prototype.otherCallRejected = function (value) {\r\n  unwrap(this.promise, this.onRejected, value);\r\n};\r\n\n},{\"./handlers\":52,\"./unwrap\":62}],56:[function(_dereq_,module,exports){\n'use strict';\r\nvar Promise = _dereq_('./promise');\r\nvar reject = _dereq_('./reject');\r\nvar resolve = _dereq_('./resolve');\r\nvar INTERNAL = _dereq_('./INTERNAL');\r\nvar handlers = _dereq_('./handlers');\r\nmodule.exports = race;\r\nfunction race(iterable) {\r\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\r\n    return reject(new TypeError('must be an array'));\r\n  }\r\n\r\n  var len = iterable.length;\r\n  var called = false;\r\n  if (!len) {\r\n    return resolve([]);\r\n  }\r\n\r\n  var i = -1;\r\n  var promise = new Promise(INTERNAL);\r\n\r\n  while (++i < len) {\r\n    resolver(iterable[i]);\r\n  }\r\n  return promise;\r\n  function resolver(value) {\r\n    resolve(value).then(function (response) {\r\n      if (!called) {\r\n        called = true;\r\n        handlers.resolve(promise, response);\r\n      }\r\n    }, function (error) {\r\n      if (!called) {\r\n        called = true;\r\n        handlers.reject(promise, error);\r\n      }\r\n    });\r\n  }\r\n}\r\n\n},{\"./INTERNAL\":50,\"./handlers\":52,\"./promise\":54,\"./reject\":57,\"./resolve\":58}],57:[function(_dereq_,module,exports){\n'use strict';\r\n\r\nvar Promise = _dereq_('./promise');\r\nvar INTERNAL = _dereq_('./INTERNAL');\r\nvar handlers = _dereq_('./handlers');\r\nmodule.exports = reject;\r\n\r\nfunction reject(reason) {\r\n\tvar promise = new Promise(INTERNAL);\r\n\treturn handlers.reject(promise, reason);\r\n}\n},{\"./INTERNAL\":50,\"./handlers\":52,\"./promise\":54}],58:[function(_dereq_,module,exports){\n'use strict';\r\n\r\nvar Promise = _dereq_('./promise');\r\nvar INTERNAL = _dereq_('./INTERNAL');\r\nvar handlers = _dereq_('./handlers');\r\nmodule.exports = resolve;\r\n\r\nvar FALSE = handlers.resolve(new Promise(INTERNAL), false);\r\nvar NULL = handlers.resolve(new Promise(INTERNAL), null);\r\nvar UNDEFINED = handlers.resolve(new Promise(INTERNAL), void 0);\r\nvar ZERO = handlers.resolve(new Promise(INTERNAL), 0);\r\nvar EMPTYSTRING = handlers.resolve(new Promise(INTERNAL), '');\r\n\r\nfunction resolve(value) {\r\n  if (value) {\r\n    if (value instanceof Promise) {\r\n      return value;\r\n    }\r\n    return handlers.resolve(new Promise(INTERNAL), value);\r\n  }\r\n  var valueType = typeof value;\r\n  switch (valueType) {\r\n    case 'boolean':\r\n      return FALSE;\r\n    case 'undefined':\r\n      return UNDEFINED;\r\n    case 'object':\r\n      return NULL;\r\n    case 'number':\r\n      return ZERO;\r\n    case 'string':\r\n      return EMPTYSTRING;\r\n  }\r\n}\n},{\"./INTERNAL\":50,\"./handlers\":52,\"./promise\":54}],59:[function(_dereq_,module,exports){\n'use strict';\r\nvar handlers = _dereq_('./handlers');\r\nvar tryCatch = _dereq_('./tryCatch');\r\nfunction safelyResolveThenable(self, thenable) {\r\n  // Either fulfill, reject or reject with error\r\n  var called = false;\r\n  function onError(value) {\r\n    if (called) {\r\n      return;\r\n    }\r\n    called = true;\r\n    handlers.reject(self, value);\r\n  }\r\n\r\n  function onSuccess(value) {\r\n    if (called) {\r\n      return;\r\n    }\r\n    called = true;\r\n    handlers.resolve(self, value);\r\n  }\r\n\r\n  function tryToUnwrap() {\r\n    thenable(onSuccess, onError);\r\n  }\r\n  \r\n  var result = tryCatch(tryToUnwrap);\r\n  if (result.status === 'error') {\r\n    onError(result.value);\r\n  }\r\n}\r\nexports.safely = safelyResolveThenable;\n},{\"./handlers\":52,\"./tryCatch\":61}],60:[function(_dereq_,module,exports){\n// Lazy man's symbols for states\r\n\r\nexports.REJECTED = ['REJECTED'];\r\nexports.FULFILLED = ['FULFILLED'];\r\nexports.PENDING = ['PENDING'];\r\n\n},{}],61:[function(_dereq_,module,exports){\n'use strict';\r\n\r\nmodule.exports = tryCatch;\r\n\r\nfunction tryCatch(func, value) {\r\n  var out = {};\r\n  try {\r\n    out.value = func(value);\r\n    out.status = 'success';\r\n  } catch (e) {\r\n    out.status = 'error';\r\n    out.value = e;\r\n  }\r\n  return out;\r\n}\n},{}],62:[function(_dereq_,module,exports){\n'use strict';\r\n\r\nvar immediate = _dereq_('immediate');\r\nvar handlers = _dereq_('./handlers');\r\nmodule.exports = unwrap;\r\n\r\nfunction unwrap(promise, func, value) {\r\n  immediate(function () {\r\n    var returnValue;\r\n    try {\r\n      returnValue = func(value);\r\n    } catch (e) {\r\n      return handlers.reject(promise, e);\r\n    }\r\n    if (returnValue === promise) {\r\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\r\n    } else {\r\n      handlers.resolve(promise, returnValue);\r\n    }\r\n  });\r\n}\n},{\"./handlers\":52,\"immediate\":8}],63:[function(_dereq_,module,exports){\n;(function () { // closure for web browsers\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = LRUCache\n} else {\n  // just set the global for non-node platforms.\n  this.LRUCache = LRUCache\n}\n\nfunction hOP (obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key)\n}\n\nfunction naiveLength () { return 1 }\n\nvar didTypeWarning = false\nfunction typeCheckKey(key) {\n  if (!didTypeWarning && typeof key !== 'string' && typeof key !== 'number') {\n    didTypeWarning = true\n    console.error(new TypeError(\"LRU: key must be a string or number. Almost certainly a bug! \" + typeof key).stack)\n  }\n}\n\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache))\n    return new LRUCache(options)\n\n  if (typeof options === 'number')\n    options = { max: options }\n\n  if (!options)\n    options = {}\n\n  this._max = options.max\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!this._max || !(typeof this._max === \"number\") || this._max <= 0 )\n    this._max = Infinity\n\n  this._lengthCalculator = options.length || naiveLength\n  if (typeof this._lengthCalculator !== \"function\")\n    this._lengthCalculator = naiveLength\n\n  this._allowStale = options.stale || false\n  this._maxAge = options.maxAge || null\n  this._dispose = options.dispose\n  this.reset()\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, \"max\",\n  { set : function (mL) {\n      if (!mL || !(typeof mL === \"number\") || mL <= 0 ) mL = Infinity\n      this._max = mL\n      if (this._length > this._max) trim(this)\n    }\n  , get : function () { return this._max }\n  , enumerable : true\n  })\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, \"lengthCalculator\",\n  { set : function (lC) {\n      if (typeof lC !== \"function\") {\n        this._lengthCalculator = naiveLength\n        this._length = this._itemCount\n        for (var key in this._cache) {\n          this._cache[key].length = 1\n        }\n      } else {\n        this._lengthCalculator = lC\n        this._length = 0\n        for (var key in this._cache) {\n          this._cache[key].length = this._lengthCalculator(this._cache[key].value)\n          this._length += this._cache[key].length\n        }\n      }\n\n      if (this._length > this._max) trim(this)\n    }\n  , get : function () { return this._lengthCalculator }\n  , enumerable : true\n  })\n\nObject.defineProperty(LRUCache.prototype, \"length\",\n  { get : function () { return this._length }\n  , enumerable : true\n  })\n\n\nObject.defineProperty(LRUCache.prototype, \"itemCount\",\n  { get : function () { return this._itemCount }\n  , enumerable : true\n  })\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  var i = 0\n  var itemCount = this._itemCount\n\n  for (var k = this._mru - 1; k >= 0 && i < itemCount; k--) if (this._lruList[k]) {\n    i++\n    var hit = this._lruList[k]\n    if (isStale(this, hit)) {\n      del(this, hit)\n      if (!this._allowStale) hit = undefined\n    }\n    if (hit) {\n      fn.call(thisp, hit.value, hit.key, this)\n    }\n  }\n}\n\nLRUCache.prototype.keys = function () {\n  var keys = new Array(this._itemCount)\n  var i = 0\n  for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n    var hit = this._lruList[k]\n    keys[i++] = hit.key\n  }\n  return keys\n}\n\nLRUCache.prototype.values = function () {\n  var values = new Array(this._itemCount)\n  var i = 0\n  for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n    var hit = this._lruList[k]\n    values[i++] = hit.value\n  }\n  return values\n}\n\nLRUCache.prototype.reset = function () {\n  if (this._dispose && this._cache) {\n    for (var k in this._cache) {\n      this._dispose(k, this._cache[k].value)\n    }\n  }\n\n  this._cache = Object.create(null) // hash of items by key\n  this._lruList = Object.create(null) // list of items in order of use recency\n  this._mru = 0 // most recently used\n  this._lru = 0 // least recently used\n  this._length = 0 // number of items in the list\n  this._itemCount = 0\n}\n\nLRUCache.prototype.dump = function () {\n  var arr = []\n  var i = 0\n\n  for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n    var hit = this._lruList[k]\n    if (!isStale(this, hit)) {\n      //Do not store staled hits\n      ++i\n      arr.push({\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      });\n    }\n  }\n  //arr has the most read first\n  return arr\n}\n\nLRUCache.prototype.dumpLru = function () {\n  return this._lruList\n}\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || this._maxAge\n  typeCheckKey(key)\n\n  var now = maxAge ? Date.now() : 0\n  var len = this._lengthCalculator(value)\n\n  if (hOP(this._cache, key)) {\n    if (len > this._max) {\n      del(this, this._cache[key])\n      return false\n    }\n    // dispose of the old one before overwriting\n    if (this._dispose)\n      this._dispose(key, this._cache[key].value)\n\n    this._cache[key].now = now\n    this._cache[key].maxAge = maxAge\n    this._cache[key].value = value\n    this._length += (len - this._cache[key].length)\n    this._cache[key].length = len\n    this.get(key)\n\n    if (this._length > this._max)\n      trim(this)\n\n    return true\n  }\n\n  var hit = new Entry(key, value, this._mru++, len, now, maxAge)\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > this._max) {\n    if (this._dispose) this._dispose(key, value)\n    return false\n  }\n\n  this._length += hit.length\n  this._lruList[hit.lu] = this._cache[key] = hit\n  this._itemCount ++\n\n  if (this._length > this._max)\n    trim(this)\n\n  return true\n}\n\nLRUCache.prototype.has = function (key) {\n  typeCheckKey(key)\n  if (!hOP(this._cache, key)) return false\n  var hit = this._cache[key]\n  if (isStale(this, hit)) {\n    return false\n  }\n  return true\n}\n\nLRUCache.prototype.get = function (key) {\n  typeCheckKey(key)\n  return get(this, key, true)\n}\n\nLRUCache.prototype.peek = function (key) {\n  typeCheckKey(key)\n  return get(this, key, false)\n}\n\nLRUCache.prototype.pop = function () {\n  var hit = this._lruList[this._lru]\n  del(this, hit)\n  return hit || null\n}\n\nLRUCache.prototype.del = function (key) {\n  typeCheckKey(key)\n  del(this, this._cache[key])\n}\n\nLRUCache.prototype.load = function (arr) {\n  //reset the cache\n  this.reset();\n\n  var now = Date.now()\n  //A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l-- ) {\n    var hit = arr[l]\n    typeCheckKey(hit.k)\n    var expiresAt = hit.e || 0\n    if (expiresAt === 0) {\n      //the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v)\n    } else {\n      var maxAge = expiresAt - now\n      //dont add already expired items\n      if (maxAge > 0) this.set(hit.k, hit.v, maxAge)\n    }\n  }\n}\n\nfunction get (self, key, doUse) {\n  typeCheckKey(key)\n  var hit = self._cache[key]\n  if (hit) {\n    if (isStale(self, hit)) {\n      del(self, hit)\n      if (!self._allowStale) hit = undefined\n    } else {\n      if (doUse) use(self, hit)\n    }\n    if (hit) hit = hit.value\n  }\n  return hit\n}\n\nfunction isStale(self, hit) {\n  if (!hit || (!hit.maxAge && !self._maxAge)) return false\n  var stale = false;\n  var diff = Date.now() - hit.now\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge\n  } else {\n    stale = self._maxAge && (diff > self._maxAge)\n  }\n  return stale;\n}\n\nfunction use (self, hit) {\n  shiftLU(self, hit)\n  hit.lu = self._mru ++\n  self._lruList[hit.lu] = hit\n}\n\nfunction trim (self) {\n  while (self._lru < self._mru && self._length > self._max)\n    del(self, self._lruList[self._lru])\n}\n\nfunction shiftLU (self, hit) {\n  delete self._lruList[ hit.lu ]\n  while (self._lru < self._mru && !self._lruList[self._lru]) self._lru ++\n}\n\nfunction del (self, hit) {\n  if (hit) {\n    if (self._dispose) self._dispose(hit.key, hit.value)\n    self._length -= hit.length\n    self._itemCount --\n    delete self._cache[ hit.key ]\n    shiftLU(self, hit)\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, lu, length, now, maxAge) {\n  this.key = key\n  this.value = value\n  this.lu = lu\n  this.length = length\n  this.now = now\n  if (maxAge) this.maxAge = maxAge\n}\n\n})()\n\n},{}],64:[function(_dereq_,module,exports){\n\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\n\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexports.forward = function(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexports.inverse = function(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexports.toPoint = function(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n},{}],65:[function(_dereq_,module,exports){\nfunction dbfHeader(buffer){\n\tvar data = new DataView(buffer);\n\tvar out = {};\n\tout.lastUpdated = new Date(data.getUint8(1,true)+1900,data.getUint8(2,true),data.getUint8(3,true));\n\tout.records = data.getUint32(4,true);\n\tout.headerLen = data.getUint16(8,true);\n\tout.recLen = data.getUint16(10,true);\n\treturn out;\n}\n\nfunction dbfRowHeader(buffer){\n\tvar data = new DataView(buffer);\n\tvar out = [];\n\tvar offset = 32;\n\twhile(true){\n\t\tout.push({\n\t\t\tname : String.fromCharCode.apply(this,(new Uint8Array(buffer,offset,10))).replace(/\\0|\\s+$/g,''),\n\t\t\tdataType : String.fromCharCode(data.getUint8(offset+11)),\n\t\t\tlen : data.getUint8(offset+16),\n\t\t\tdecimal : data.getUint8(offset+17)\n\t\t});\n\t\tif(data.getUint8(offset+32)===13){\n\t\t\tbreak;\n\t\t}else{\n\t\t\toffset+=32;\n\t\t}\n\t}\n\treturn out;\n}\nfunction rowFuncs(buffer,offset,len,type){\n\tvar data = (new Uint8Array(buffer,offset,len));\n\tvar textData = String.fromCharCode.apply(this,data).replace(/\\0|\\s+$/g,'');\n\tswitch(type){\n\t\tcase 'N':\n\t\tcase 'F':\n\t\tcase 'O':\n\t\t\treturn parseFloat(textData,10);\n\t\tcase 'D':\n\t\t\treturn new Date(textData.slice(0,4), parseInt(textData.slice(4,6),10)-1, textData.slice(6,8));\n\t\tcase 'L':\n\t\t\treturn textData.toLowerCase() === 'y' || textData.toLowerCase() === 't';\n\t\tdefault:\n\t\t\treturn textData;\n\t}\n}\nfunction parseRow(buffer,offset,rowHeaders){\n\tvar out={};\n\tvar i = 0;\n\tvar len = rowHeaders.length;\n\tvar field;\n\tvar header;\n\twhile(i<len){\n\t\theader = rowHeaders[i];\n\t\tfield = rowFuncs(buffer,offset,header.len,header.dataType);\n\t\toffset += header.len;\n\t\tif(typeof field !== 'undefined'){\n\t\t\tout[header.name]=field;\n\t\t}\n\t\ti++;\n\t}\n\treturn out;\n}\nmodule.exports = function(buffer){\n\tvar rowHeaders = dbfRowHeader(buffer);\n\tvar header = dbfHeader(buffer);\n\tvar offset = ((rowHeaders.length+1)<<5)+2;\n\tvar recLen = header.recLen;\n\tvar records = header.records;\n\tvar out = [];\n\twhile(records){\n\t\tout.push(parseRow(buffer,offset,rowHeaders));\n\t\toffset += recLen;\n\t\trecords--;\n\t}\n\treturn out;\n};\n\n},{}],66:[function(_dereq_,module,exports){\nvar mgrs = _dereq_('mgrs');\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(mgrs.toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return mgrs.forward([this.x, this.y], accuracy);\n};\nmodule.exports = Point;\n\n},{\"mgrs\":64}],67:[function(_dereq_,module,exports){\nvar parseCode = _dereq_(\"./parseCode\");\nvar extend = _dereq_('./extend');\nvar projections = _dereq_('./projections');\nvar deriveConstants = _dereq_('./deriveConstants');\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var modifiedJSON = deriveConstants(json);\n  var ourProj = Projection.projections.get(modifiedJSON.projName);\n  if(ourProj){\n    extend(this, modifiedJSON);\n    extend(this, ourProj);\n    this.init();\n    callback(null, this);\n  }else{\n    callback(srsCode);\n  }\n}\nProjection.projections = projections;\nProjection.projections.start();\nmodule.exports = Projection;\n\n},{\"./deriveConstants\":98,\"./extend\":99,\"./parseCode\":103,\"./projections\":105}],68:[function(_dereq_,module,exports){\nmodule.exports = function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      point[t] = v;\n      break;\n    case 'w':\n      point[t] = -v;\n      break;\n    case 'n':\n      point[t] = v;\n      break;\n    case 's':\n      point[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        point.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        point.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return point;\n};\n\n},{}],69:[function(_dereq_,module,exports){\nvar HALF_PI = Math.PI/2;\nvar sign = _dereq_('./sign');\n\nmodule.exports = function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n};\n},{\"./sign\":86}],70:[function(_dereq_,module,exports){\nvar TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nvar SPI = 3.14159265359;\nvar sign = _dereq_('./sign');\n\nmodule.exports = function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n};\n},{\"./sign\":86}],71:[function(_dereq_,module,exports){\nmodule.exports = function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n};\n},{}],72:[function(_dereq_,module,exports){\nmodule.exports = function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n};\n},{}],73:[function(_dereq_,module,exports){\nmodule.exports = function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n};\n},{}],74:[function(_dereq_,module,exports){\nmodule.exports = function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n};\n},{}],75:[function(_dereq_,module,exports){\nmodule.exports = function(x) {\n  return (x * x * x * (35 / 3072));\n};\n},{}],76:[function(_dereq_,module,exports){\nmodule.exports = function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n};\n},{}],77:[function(_dereq_,module,exports){\nmodule.exports = function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n};\n},{}],78:[function(_dereq_,module,exports){\nvar HALF_PI = Math.PI/2;\n\nmodule.exports = function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n};\n},{}],79:[function(_dereq_,module,exports){\nmodule.exports = function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n};\n},{}],80:[function(_dereq_,module,exports){\nmodule.exports = function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n};\n},{}],81:[function(_dereq_,module,exports){\nvar HALF_PI = Math.PI/2;\nmodule.exports = function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n};\n},{}],82:[function(_dereq_,module,exports){\nvar C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nmodule.exports = function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n};\n},{}],83:[function(_dereq_,module,exports){\nvar pj_mlfn = _dereq_(\"./pj_mlfn\");\nvar EPSLN = 1.0e-10;\nvar MAX_ITER = 20;\nmodule.exports = function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n};\n},{\"./pj_mlfn\":84}],84:[function(_dereq_,module,exports){\nmodule.exports = function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n};\n},{}],85:[function(_dereq_,module,exports){\nmodule.exports = function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n};\n},{}],86:[function(_dereq_,module,exports){\nmodule.exports = function(x) {\n  return x<0 ? -1 : 1;\n};\n},{}],87:[function(_dereq_,module,exports){\nmodule.exports = function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n};\n},{}],88:[function(_dereq_,module,exports){\nmodule.exports = function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n};\n},{}],89:[function(_dereq_,module,exports){\nvar HALF_PI = Math.PI/2;\n\nmodule.exports = function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n};\n},{}],90:[function(_dereq_,module,exports){\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n},{}],91:[function(_dereq_,module,exports){\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\nexports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n},{}],92:[function(_dereq_,module,exports){\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n},{}],93:[function(_dereq_,module,exports){\nexports.ft = {to_meter: 0.3048};\nexports['us-ft'] = {to_meter: 1200 / 3937};\n\n},{}],94:[function(_dereq_,module,exports){\nvar proj = _dereq_('./Proj');\nvar transform = _dereq_('./transform');\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    return transform(from, to, coords);\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nmodule.exports = proj4;\n},{\"./Proj\":67,\"./transform\":131}],95:[function(_dereq_,module,exports){\nvar HALF_PI = Math.PI/2;\nvar PJD_3PARAM = 1;\nvar PJD_7PARAM = 2;\nvar PJD_GRIDSHIFT = 3;\nvar PJD_WGS84 = 4; // WGS84 or equivalent\nvar PJD_NODATUM = 5; // WGS84 or equivalent\nvar SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nvar AD_C = 1.0026000;\nvar COS_67P5 = 0.38268343236508977;\nvar datum = function(proj) {\n  if (!(this instanceof datum)) {\n    return new datum(proj);\n  }\n  this.datum_type = PJD_WGS84; //default setting\n  if (!proj) {\n    return;\n  }\n  if (proj.datumCode && proj.datumCode === 'none') {\n    this.datum_type = PJD_NODATUM;\n  }\n\n  if (proj.datum_params) {\n    this.datum_params = proj.datum_params.map(parseFloat);\n    if (this.datum_params[0] !== 0 || this.datum_params[1] !== 0 || this.datum_params[2] !== 0) {\n      this.datum_type = PJD_3PARAM;\n    }\n    if (this.datum_params.length > 3) {\n      if (this.datum_params[3] !== 0 || this.datum_params[4] !== 0 || this.datum_params[5] !== 0 || this.datum_params[6] !== 0) {\n        this.datum_type = PJD_7PARAM;\n        this.datum_params[3] *= SEC_TO_RAD;\n        this.datum_params[4] *= SEC_TO_RAD;\n        this.datum_params[5] *= SEC_TO_RAD;\n        this.datum_params[6] = (this.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  // DGR 2011-03-21 : nadgrids support\n  this.datum_type = proj.grids ? PJD_GRIDSHIFT : this.datum_type;\n\n  this.a = proj.a; //datum object also uses these values\n  this.b = proj.b;\n  this.es = proj.es;\n  this.ep2 = proj.ep2;\n  if (this.datum_type === PJD_GRIDSHIFT) {\n    this.grids = proj.grids;\n  }\n};\ndatum.prototype = {\n\n\n  /****************************************************************/\n  // cs_compare_datums()\n  //   Returns TRUE if the two datums match, otherwise FALSE.\n  compare_datums: function(dest) {\n    if (this.datum_type !== dest.datum_type) {\n      return false; // false, datums are not equal\n    }\n    else if (this.a !== dest.a || Math.abs(this.es - dest.es) > 0.000000000050) {\n      // the tolerence for es is to ensure that GRS80 and WGS84\n      // are considered identical\n      return false;\n    }\n    else if (this.datum_type === PJD_3PARAM) {\n      return (this.datum_params[0] === dest.datum_params[0] && this.datum_params[1] === dest.datum_params[1] && this.datum_params[2] === dest.datum_params[2]);\n    }\n    else if (this.datum_type === PJD_7PARAM) {\n      return (this.datum_params[0] === dest.datum_params[0] && this.datum_params[1] === dest.datum_params[1] && this.datum_params[2] === dest.datum_params[2] && this.datum_params[3] === dest.datum_params[3] && this.datum_params[4] === dest.datum_params[4] && this.datum_params[5] === dest.datum_params[5] && this.datum_params[6] === dest.datum_params[6]);\n    }\n    else if (this.datum_type === PJD_GRIDSHIFT || dest.datum_type === PJD_GRIDSHIFT) {\n      //alert(\"ERROR: Grid shift transformations are not implemented.\");\n      //return false\n      //DGR 2012-07-29 lazy ...\n      return this.nadgrids === dest.nadgrids;\n    }\n    else {\n      return true; // datums are equal\n    }\n  }, // cs_compare_datums()\n\n  /*\n   * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n   * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n   * according to the current ellipsoid parameters.\n   *\n   *    Latitude  : Geodetic latitude in radians                     (input)\n   *    Longitude : Geodetic longitude in radians                    (input)\n   *    Height    : Geodetic height, in meters                       (input)\n   *    X         : Calculated Geocentric X coordinate, in meters    (output)\n   *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n   *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n   *\n   */\n  geodetic_to_geocentric: function(p) {\n    var Longitude = p.x;\n    var Latitude = p.y;\n    var Height = p.z ? p.z : 0; //Z value not always supplied\n    var X; // output\n    var Y;\n    var Z;\n\n    var Error_Code = 0; //  GEOCENT_NO_ERROR;\n    var Rn; /*  Earth radius at location  */\n    var Sin_Lat; /*  Math.sin(Latitude)  */\n    var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n    var Cos_Lat; /*  Math.cos(Latitude)  */\n\n    /*\n     ** Don't blow up if Latitude is just a little out of the value\n     ** range as it may just be a rounding issue.  Also removed longitude\n     ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n     */\n    if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n      Latitude = -HALF_PI;\n    }\n    else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n      Latitude = HALF_PI;\n    }\n    else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n      /* Latitude out of range */\n      //..reportError('geocent:lat out of range:' + Latitude);\n      return null;\n    }\n\n    if (Longitude > Math.PI) {\n      Longitude -= (2 * Math.PI);\n    }\n    Sin_Lat = Math.sin(Latitude);\n    Cos_Lat = Math.cos(Latitude);\n    Sin2_Lat = Sin_Lat * Sin_Lat;\n    Rn = this.a / (Math.sqrt(1.0e0 - this.es * Sin2_Lat));\n    X = (Rn + Height) * Cos_Lat * Math.cos(Longitude);\n    Y = (Rn + Height) * Cos_Lat * Math.sin(Longitude);\n    Z = ((Rn * (1 - this.es)) + Height) * Sin_Lat;\n\n    p.x = X;\n    p.y = Y;\n    p.z = Z;\n    return Error_Code;\n  }, // cs_geodetic_to_geocentric()\n\n\n  geocentric_to_geodetic: function(p) {\n    /* local defintions and variables */\n    /* end-criterium of loop, accuracy of sin(Latitude) */\n    var genau = 1e-12;\n    var genau2 = (genau * genau);\n    var maxiter = 30;\n\n    var P; /* distance between semi-minor axis and location */\n    var RR; /* distance between center and location */\n    var CT; /* sin of geocentric latitude */\n    var ST; /* cos of geocentric latitude */\n    var RX;\n    var RK;\n    var RN; /* Earth radius at location */\n    var CPHI0; /* cos of start or old geodetic latitude in iterations */\n    var SPHI0; /* sin of start or old geodetic latitude in iterations */\n    var CPHI; /* cos of searched geodetic latitude */\n    var SPHI; /* sin of searched geodetic latitude */\n    var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n    var At_Pole; /* indicates location is in polar region */\n    var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n    var X = p.x;\n    var Y = p.y;\n    var Z = p.z ? p.z : 0.0; //Z value not always supplied\n    var Longitude;\n    var Latitude;\n    var Height;\n\n    At_Pole = false;\n    P = Math.sqrt(X * X + Y * Y);\n    RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n    /*      special cases for latitude and longitude */\n    if (P / this.a < genau) {\n\n      /*  special case, if P=0. (X=0., Y=0.) */\n      At_Pole = true;\n      Longitude = 0.0;\n\n      /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n       *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n      if (RR / this.a < genau) {\n        Latitude = HALF_PI;\n        Height = -this.b;\n        return;\n      }\n    }\n    else {\n      /*  ellipsoidal (geodetic) longitude\n       *  interval: -PI < Longitude <= +PI */\n      Longitude = Math.atan2(Y, X);\n    }\n\n    /* --------------------------------------------------------------\n     * Following iterative algorithm was developped by\n     * \"Institut for Erdmessung\", University of Hannover, July 1988.\n     * Internet: www.ife.uni-hannover.de\n     * Iterative computation of CPHI,SPHI and Height.\n     * Iteration of CPHI and SPHI to 10**-12 radian resp.\n     * 2*10**-7 arcsec.\n     * --------------------------------------------------------------\n     */\n    CT = Z / RR;\n    ST = P / RR;\n    RX = 1.0 / Math.sqrt(1.0 - this.es * (2.0 - this.es) * ST * ST);\n    CPHI0 = ST * (1.0 - this.es) * RX;\n    SPHI0 = CT * RX;\n    iter = 0;\n\n    /* loop to find sin(Latitude) resp. Latitude\n     * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n    do {\n      iter++;\n      RN = this.a / Math.sqrt(1.0 - this.es * SPHI0 * SPHI0);\n\n      /*  ellipsoidal (geodetic) height */\n      Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - this.es * SPHI0 * SPHI0);\n\n      RK = this.es * RN / (RN + Height);\n      RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n      CPHI = ST * (1.0 - RK) * RX;\n      SPHI = CT * RX;\n      SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n      CPHI0 = CPHI;\n      SPHI0 = SPHI;\n    }\n    while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n    /*      ellipsoidal (geodetic) latitude */\n    Latitude = Math.atan(SPHI / Math.abs(CPHI));\n\n    p.x = Longitude;\n    p.y = Latitude;\n    p.z = Height;\n    return p;\n  }, // cs_geocentric_to_geodetic()\n\n  /** Convert_Geocentric_To_Geodetic\n   * The method used here is derived from 'An Improved Algorithm for\n   * Geocentric to Geodetic Coordinate Conversion', by Ralph Toms, Feb 1996\n   */\n  geocentric_to_geodetic_noniter: function(p) {\n    var X = p.x;\n    var Y = p.y;\n    var Z = p.z ? p.z : 0; //Z value not always supplied\n    var Longitude;\n    var Latitude;\n    var Height;\n\n    var W; /* distance from Z axis */\n    var W2; /* square of distance from Z axis */\n    var T0; /* initial estimate of vertical component */\n    var T1; /* corrected estimate of vertical component */\n    var S0; /* initial estimate of horizontal component */\n    var S1; /* corrected estimate of horizontal component */\n    var Sin_B0; /* Math.sin(B0), B0 is estimate of Bowring aux variable */\n    var Sin3_B0; /* cube of Math.sin(B0) */\n    var Cos_B0; /* Math.cos(B0) */\n    var Sin_p1; /* Math.sin(phi1), phi1 is estimated latitude */\n    var Cos_p1; /* Math.cos(phi1) */\n    var Rn; /* Earth radius at location */\n    var Sum; /* numerator of Math.cos(phi1) */\n    var At_Pole; /* indicates location is in polar region */\n\n    X = parseFloat(X); // cast from string to float\n    Y = parseFloat(Y);\n    Z = parseFloat(Z);\n\n    At_Pole = false;\n    if (X !== 0.0) {\n      Longitude = Math.atan2(Y, X);\n    }\n    else {\n      if (Y > 0) {\n        Longitude = HALF_PI;\n      }\n      else if (Y < 0) {\n        Longitude = -HALF_PI;\n      }\n      else {\n        At_Pole = true;\n        Longitude = 0.0;\n        if (Z > 0.0) { /* north pole */\n          Latitude = HALF_PI;\n        }\n        else if (Z < 0.0) { /* south pole */\n          Latitude = -HALF_PI;\n        }\n        else { /* center of earth */\n          Latitude = HALF_PI;\n          Height = -this.b;\n          return;\n        }\n      }\n    }\n    W2 = X * X + Y * Y;\n    W = Math.sqrt(W2);\n    T0 = Z * AD_C;\n    S0 = Math.sqrt(T0 * T0 + W2);\n    Sin_B0 = T0 / S0;\n    Cos_B0 = W / S0;\n    Sin3_B0 = Sin_B0 * Sin_B0 * Sin_B0;\n    T1 = Z + this.b * this.ep2 * Sin3_B0;\n    Sum = W - this.a * this.es * Cos_B0 * Cos_B0 * Cos_B0;\n    S1 = Math.sqrt(T1 * T1 + Sum * Sum);\n    Sin_p1 = T1 / S1;\n    Cos_p1 = Sum / S1;\n    Rn = this.a / Math.sqrt(1.0 - this.es * Sin_p1 * Sin_p1);\n    if (Cos_p1 >= COS_67P5) {\n      Height = W / Cos_p1 - Rn;\n    }\n    else if (Cos_p1 <= -COS_67P5) {\n      Height = W / -Cos_p1 - Rn;\n    }\n    else {\n      Height = Z / Sin_p1 + Rn * (this.es - 1.0);\n    }\n    if (At_Pole === false) {\n      Latitude = Math.atan(Sin_p1 / Cos_p1);\n    }\n\n    p.x = Longitude;\n    p.y = Latitude;\n    p.z = Height;\n    return p;\n  }, // geocentric_to_geodetic_noniter()\n\n  /****************************************************************/\n  // pj_geocentic_to_wgs84( p )\n  //  p = point to transform in geocentric coordinates (x,y,z)\n  geocentric_to_wgs84: function(p) {\n\n    if (this.datum_type === PJD_3PARAM) {\n      // if( x[io] === HUGE_VAL )\n      //    continue;\n      p.x += this.datum_params[0];\n      p.y += this.datum_params[1];\n      p.z += this.datum_params[2];\n\n    }\n    else if (this.datum_type === PJD_7PARAM) {\n      var Dx_BF = this.datum_params[0];\n      var Dy_BF = this.datum_params[1];\n      var Dz_BF = this.datum_params[2];\n      var Rx_BF = this.datum_params[3];\n      var Ry_BF = this.datum_params[4];\n      var Rz_BF = this.datum_params[5];\n      var M_BF = this.datum_params[6];\n      // if( x[io] === HUGE_VAL )\n      //    continue;\n      var x_out = M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF;\n      var y_out = M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF;\n      var z_out = M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF;\n      p.x = x_out;\n      p.y = y_out;\n      p.z = z_out;\n    }\n  }, // cs_geocentric_to_wgs84\n\n  /****************************************************************/\n  // pj_geocentic_from_wgs84()\n  //  coordinate system definition,\n  //  point to transform in geocentric coordinates (x,y,z)\n  geocentric_from_wgs84: function(p) {\n\n    if (this.datum_type === PJD_3PARAM) {\n      //if( x[io] === HUGE_VAL )\n      //    continue;\n      p.x -= this.datum_params[0];\n      p.y -= this.datum_params[1];\n      p.z -= this.datum_params[2];\n\n    }\n    else if (this.datum_type === PJD_7PARAM) {\n      var Dx_BF = this.datum_params[0];\n      var Dy_BF = this.datum_params[1];\n      var Dz_BF = this.datum_params[2];\n      var Rx_BF = this.datum_params[3];\n      var Ry_BF = this.datum_params[4];\n      var Rz_BF = this.datum_params[5];\n      var M_BF = this.datum_params[6];\n      var x_tmp = (p.x - Dx_BF) / M_BF;\n      var y_tmp = (p.y - Dy_BF) / M_BF;\n      var z_tmp = (p.z - Dz_BF) / M_BF;\n      //if( x[io] === HUGE_VAL )\n      //    continue;\n\n      p.x = x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp;\n      p.y = -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp;\n      p.z = Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp;\n    } //cs_geocentric_from_wgs84()\n  }\n};\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nmodule.exports = datum;\n\n},{}],96:[function(_dereq_,module,exports){\nvar PJD_3PARAM = 1;\nvar PJD_7PARAM = 2;\nvar PJD_GRIDSHIFT = 3;\nvar PJD_NODATUM = 5; // WGS84 or equivalent\nvar SRS_WGS84_SEMIMAJOR = 6378137; // only used in grid shift transforms\nvar SRS_WGS84_ESQUARED = 0.006694379990141316; //DGR: 2012-07-29\nmodule.exports = function(source, dest, point) {\n  var wp, i, l;\n\n  function checkParams(fallback) {\n    return (fallback === PJD_3PARAM || fallback === PJD_7PARAM);\n  }\n  // Short cut if the datums are identical.\n  if (source.compare_datums(dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  //DGR: 2012-07-29 : add nadgrids support (begin)\n  var src_a = source.a;\n  var src_es = source.es;\n\n  var dst_a = dest.a;\n  var dst_es = dest.es;\n\n  var fallback = source.datum_type;\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  if (fallback === PJD_GRIDSHIFT) {\n    if (this.apply_gridshift(source, 0, point) === 0) {\n      source.a = SRS_WGS84_SEMIMAJOR;\n      source.es = SRS_WGS84_ESQUARED;\n    }\n    else {\n      // try 3 or 7 params transformation or nothing ?\n      if (!source.datum_params) {\n        source.a = src_a;\n        source.es = source.es;\n        return point;\n      }\n      wp = 1;\n      for (i = 0, l = source.datum_params.length; i < l; i++) {\n        wp *= source.datum_params[i];\n      }\n      if (wp === 0) {\n        source.a = src_a;\n        source.es = source.es;\n        return point;\n      }\n      if (source.datum_params.length > 3) {\n        fallback = PJD_7PARAM;\n      }\n      else {\n        fallback = PJD_3PARAM;\n      }\n    }\n  }\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest.a = SRS_WGS84_SEMIMAJOR;\n    dest.es = SRS_WGS84_ESQUARED;\n  }\n  // Do we need to go through geocentric coordinates?\n  if (source.es !== dest.es || source.a !== dest.a || checkParams(fallback) || checkParams(dest.datum_type)) {\n    //DGR: 2012-07-29 : add nadgrids support (end)\n    // Convert to geocentric coordinates.\n    source.geodetic_to_geocentric(point);\n    // CHECK_RETURN;\n    // Convert between datums\n    if (checkParams(source.datum_type)) {\n      source.geocentric_to_wgs84(point);\n      // CHECK_RETURN;\n    }\n    if (checkParams(dest.datum_type)) {\n      dest.geocentric_from_wgs84(point);\n      // CHECK_RETURN;\n    }\n    // Convert back to geodetic coordinates\n    dest.geocentric_to_geodetic(point);\n    // CHECK_RETURN;\n  }\n  // Apply grid shift to destination if required\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    this.apply_gridshift(dest, 1, point);\n    // CHECK_RETURN;\n  }\n\n  source.a = src_a;\n  source.es = src_es;\n  dest.a = dst_a;\n  dest.es = dst_es;\n\n  return point;\n};\n\n\n},{}],97:[function(_dereq_,module,exports){\nvar globals = _dereq_('./global');\nvar parseProj = _dereq_('./projString');\nvar wkt = _dereq_('./wkt');\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nmodule.exports = defs;\n\n},{\"./global\":100,\"./projString\":104,\"./wkt\":132}],98:[function(_dereq_,module,exports){\nvar Datum = _dereq_('./constants/Datum');\nvar Ellipsoid = _dereq_('./constants/Ellipsoid');\nvar extend = _dereq_('./extend');\nvar datum = _dereq_('./datum');\nvar EPSLN = 1.0e-10;\n// ellipoid pj_set_ell.c\nvar SIXTH = 0.1666666666666666667;\n/* 1/6 */\nvar RA4 = 0.04722222222222222222;\n/* 17/360 */\nvar RA6 = 0.02215608465608465608;\nmodule.exports = function(json) {\n  // DGR 2011-03-20 : nagrids -> nadgrids\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = Datum[json.datumCode];\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  if (!json.a) { // do we have an ellipsoid?\n    var ellipse = Ellipsoid[json.ellps] ? Ellipsoid[json.ellps] : Ellipsoid.WGS84;\n    extend(json, ellipse);\n  }\n  if (json.rf && !json.b) {\n    json.b = (1.0 - 1.0 / json.rf) * json.a;\n  }\n  if (json.rf === 0 || Math.abs(json.a - json.b) < EPSLN) {\n    json.sphere = true;\n    json.b = json.a;\n  }\n  json.a2 = json.a * json.a; // used in geocentric\n  json.b2 = json.b * json.b; // used in geocentric\n  json.es = (json.a2 - json.b2) / json.a2; // e ^ 2\n  json.e = Math.sqrt(json.es); // eccentricity\n  if (json.R_A) {\n    json.a *= 1 - json.es * (SIXTH + json.es * (RA4 + json.es * RA6));\n    json.a2 = json.a * json.a;\n    json.b2 = json.b * json.b;\n    json.es = 0;\n  }\n  json.ep2 = (json.a2 - json.b2) / json.b2; // used in geocentric\n  if (!json.k0) {\n    json.k0 = 1.0; //default value\n  }\n  //DGR 2010-11-12: axis\n  if (!json.axis) {\n    json.axis = \"enu\";\n  }\n\n  if (!json.datum) {\n    json.datum = datum(json);\n  }\n  return json;\n};\n\n},{\"./constants/Datum\":90,\"./constants/Ellipsoid\":91,\"./datum\":95,\"./extend\":99}],99:[function(_dereq_,module,exports){\nmodule.exports = function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n};\n\n},{}],100:[function(_dereq_,module,exports){\nmodule.exports = function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n};\n\n},{}],101:[function(_dereq_,module,exports){\nvar projs = [\n  _dereq_('./projections/tmerc'),\n  _dereq_('./projections/utm'),\n  _dereq_('./projections/sterea'),\n  _dereq_('./projections/stere'),\n  _dereq_('./projections/somerc'),\n  _dereq_('./projections/omerc'),\n  _dereq_('./projections/lcc'),\n  _dereq_('./projections/krovak'),\n  _dereq_('./projections/cass'),\n  _dereq_('./projections/laea'),\n  _dereq_('./projections/aea'),\n  _dereq_('./projections/gnom'),\n  _dereq_('./projections/cea'),\n  _dereq_('./projections/eqc'),\n  _dereq_('./projections/poly'),\n  _dereq_('./projections/nzmg'),\n  _dereq_('./projections/mill'),\n  _dereq_('./projections/sinu'),\n  _dereq_('./projections/moll'),\n  _dereq_('./projections/eqdc'),\n  _dereq_('./projections/vandg'),\n  _dereq_('./projections/aeqd')\n];\nmodule.exports = function(proj4){\n  projs.forEach(function(proj){\n    proj4.Proj.projections.add(proj);\n  });\n};\n},{\"./projections/aea\":106,\"./projections/aeqd\":107,\"./projections/cass\":108,\"./projections/cea\":109,\"./projections/eqc\":110,\"./projections/eqdc\":111,\"./projections/gnom\":113,\"./projections/krovak\":114,\"./projections/laea\":115,\"./projections/lcc\":116,\"./projections/mill\":119,\"./projections/moll\":120,\"./projections/nzmg\":121,\"./projections/omerc\":122,\"./projections/poly\":123,\"./projections/sinu\":124,\"./projections/somerc\":125,\"./projections/stere\":126,\"./projections/sterea\":127,\"./projections/tmerc\":128,\"./projections/utm\":129,\"./projections/vandg\":130}],102:[function(_dereq_,module,exports){\nvar proj4 = _dereq_('./core');\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = _dereq_('./Proj');\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = _dereq_('./Point');\nproj4.toPoint = _dereq_(\"./common/toPoint\");\nproj4.defs = _dereq_('./defs');\nproj4.transform = _dereq_('./transform');\nproj4.mgrs = _dereq_('mgrs');\nproj4.version = _dereq_('../package.json').version;\n_dereq_('./includedProjections')(proj4);\nmodule.exports = proj4;\n},{\"../package.json\":133,\"./Point\":66,\"./Proj\":67,\"./common/toPoint\":88,\"./core\":94,\"./defs\":97,\"./includedProjections\":101,\"./transform\":131,\"mgrs\":64}],103:[function(_dereq_,module,exports){\nvar defs = _dereq_('./defs');\nvar wkt = _dereq_('./wkt');\nvar projStr = _dereq_('./projString');\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nfunction testWKT(code){\n  var codeWords = ['GEOGCS','GEOCCS','PROJCS','LOCAL_CS'];\n  return codeWords.reduce(function(a,b){\n    return a+1+code.indexOf(b);\n  },0);\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    else if (testWKT(code)) {\n      return wkt(code);\n    }\n    else if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nmodule.exports = parse;\n},{\"./defs\":97,\"./projString\":104,\"./wkt\":132}],104:[function(_dereq_,module,exports){\nvar D2R = 0.01745329251994329577;\nvar PrimeMeridian = _dereq_('./constants/PrimeMeridian');\nvar units = _dereq_('./constants/units');\n\nmodule.exports = function(defData) {\n  var self = {};\n  var paramObj = {};\n  defData.split(\"+\").map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).forEach(function(a) {\n    var split = a.split(\"=\");\n    split.push(true);\n    paramObj[split[0].toLowerCase()] = split[1];\n  });\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      if (units[v]) {\n        self.to_meter = units[v].to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      self.from_greenwich = (PrimeMeridian[v] ? PrimeMeridian[v] : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n};\n\n},{\"./constants/PrimeMeridian\":92,\"./constants/units\":93}],105:[function(_dereq_,module,exports){\nvar projs = [\n  _dereq_('./projections/merc'),\n  _dereq_('./projections/longlat')\n];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexports.add = add;\n\nexports.get = function(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n};\nexports.start = function() {\n  projs.forEach(add);\n};\n\n},{\"./projections/longlat\":117,\"./projections/merc\":118}],106:[function(_dereq_,module,exports){\nvar EPSLN = 1.0e-10;\nvar msfnz = _dereq_('../common/msfnz');\nvar qsfnz = _dereq_('../common/qsfnz');\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar asinz = _dereq_('../common/asinz');\nexports.init = function() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n};\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexports.forward = function(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n};\n\n\nexports.inverse = function(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n};\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexports.phi1z = function(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n};\nexports.names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\n\n},{\"../common/adjust_lon\":70,\"../common/asinz\":71,\"../common/msfnz\":80,\"../common/qsfnz\":85}],107:[function(_dereq_,module,exports){\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar HALF_PI = Math.PI/2;\nvar EPSLN = 1.0e-10;\nvar mlfn = _dereq_('../common/mlfn');\nvar e0fn = _dereq_('../common/e0fn');\nvar e1fn = _dereq_('../common/e1fn');\nvar e2fn = _dereq_('../common/e2fn');\nvar e3fn = _dereq_('../common/e3fn');\nvar gN = _dereq_('../common/gN');\nvar asinz = _dereq_('../common/asinz');\nvar imlfn = _dereq_('../common/imlfn');\nexports.init = function() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n};\n\nexports.forward = function(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n};\n\nexports.inverse = function(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n};\nexports.names = [\"Azimuthal_Equidistant\", \"aeqd\"];\n\n},{\"../common/adjust_lon\":70,\"../common/asinz\":71,\"../common/e0fn\":72,\"../common/e1fn\":73,\"../common/e2fn\":74,\"../common/e3fn\":75,\"../common/gN\":76,\"../common/imlfn\":77,\"../common/mlfn\":79}],108:[function(_dereq_,module,exports){\nvar mlfn = _dereq_('../common/mlfn');\nvar e0fn = _dereq_('../common/e0fn');\nvar e1fn = _dereq_('../common/e1fn');\nvar e2fn = _dereq_('../common/e2fn');\nvar e3fn = _dereq_('../common/e3fn');\nvar gN = _dereq_('../common/gN');\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar adjust_lat = _dereq_('../common/adjust_lat');\nvar imlfn = _dereq_('../common/imlfn');\nvar HALF_PI = Math.PI/2;\nvar EPSLN = 1.0e-10;\nexports.init = function() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n};\n\n\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexports.forward = function(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n};\n\n/* Inverse equations\n  -----------------*/\nexports.inverse = function(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n};\nexports.names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\n},{\"../common/adjust_lat\":69,\"../common/adjust_lon\":70,\"../common/e0fn\":72,\"../common/e1fn\":73,\"../common/e2fn\":74,\"../common/e3fn\":75,\"../common/gN\":76,\"../common/imlfn\":77,\"../common/mlfn\":79}],109:[function(_dereq_,module,exports){\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar qsfnz = _dereq_('../common/qsfnz');\nvar msfnz = _dereq_('../common/msfnz');\nvar iqsfnz = _dereq_('../common/iqsfnz');\n/*\n  reference:  \n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexports.init = function() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n};\n\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexports.forward = function(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n};\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexports.inverse = function(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n};\nexports.names = [\"cea\"];\n\n},{\"../common/adjust_lon\":70,\"../common/iqsfnz\":78,\"../common/msfnz\":80,\"../common/qsfnz\":85}],110:[function(_dereq_,module,exports){\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar adjust_lat = _dereq_('../common/adjust_lat');\nexports.init = function() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n};\n\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexports.forward = function(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n};\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexports.inverse = function(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n};\nexports.names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\n\n},{\"../common/adjust_lat\":69,\"../common/adjust_lon\":70}],111:[function(_dereq_,module,exports){\nvar e0fn = _dereq_('../common/e0fn');\nvar e1fn = _dereq_('../common/e1fn');\nvar e2fn = _dereq_('../common/e2fn');\nvar e3fn = _dereq_('../common/e3fn');\nvar msfnz = _dereq_('../common/msfnz');\nvar mlfn = _dereq_('../common/mlfn');\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar adjust_lat = _dereq_('../common/adjust_lat');\nvar imlfn = _dereq_('../common/imlfn');\nvar EPSLN = 1.0e-10;\nexports.init = function() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n};\n\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexports.forward = function(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n};\n\n/* Inverse equations\n  -----------------*/\nexports.inverse = function(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n};\nexports.names = [\"Equidistant_Conic\", \"eqdc\"];\n\n},{\"../common/adjust_lat\":69,\"../common/adjust_lon\":70,\"../common/e0fn\":72,\"../common/e1fn\":73,\"../common/e2fn\":74,\"../common/e3fn\":75,\"../common/imlfn\":77,\"../common/mlfn\":79,\"../common/msfnz\":80}],112:[function(_dereq_,module,exports){\nvar FORTPI = Math.PI/4;\nvar srat = _dereq_('../common/srat');\nvar HALF_PI = Math.PI/2;\nvar MAX_ITER = 20;\nexports.init = function() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n};\n\nexports.forward = function(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n};\n\nexports.inverse = function(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n};\nexports.names = [\"gauss\"];\n\n},{\"../common/srat\":87}],113:[function(_dereq_,module,exports){\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar EPSLN = 1.0e-10;\nvar asinz = _dereq_('../common/asinz');\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexports.init = function() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n};\n\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexports.forward = function(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project \n    // to infinity, on a bearing \n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that \n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n};\n\n\nexports.inverse = function(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n};\nexports.names = [\"gnom\"];\n\n},{\"../common/adjust_lon\":70,\"../common/asinz\":71}],114:[function(_dereq_,module,exports){\nvar adjust_lon = _dereq_('../common/adjust_lon');\nexports.init = function() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n};\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexports.forward = function(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n};\n\n/* calculate lat/lon from xy */\nexports.inverse = function(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n};\nexports.names = [\"Krovak\", \"krovak\"];\n\n},{\"../common/adjust_lon\":70}],115:[function(_dereq_,module,exports){\nvar HALF_PI = Math.PI/2;\nvar FORTPI = Math.PI/4;\nvar EPSLN = 1.0e-10;\nvar qsfnz = _dereq_('../common/qsfnz');\nvar adjust_lon = _dereq_('../common/adjust_lon');\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexports.S_POLE = 1;\nexports.N_POLE = 2;\nexports.EQUIT = 3;\nexports.OBLIQ = 4;\n\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexports.init = function() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = this.authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n};\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexports.forward = function(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n};\n\n/* Inverse equations\n  -----------------*/\nexports.inverse = function(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = this.authlat(Math.asin(ab), this.apa);\n  }\n\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n};\n\n/* determine latitude from authalic latitude */\nexports.P00 = 0.33333333333333333333;\nexports.P01 = 0.17222222222222222222;\nexports.P02 = 0.10257936507936507936;\nexports.P10 = 0.06388888888888888888;\nexports.P11 = 0.06640211640211640211;\nexports.P20 = 0.01641501294219154443;\n\nexports.authset = function(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * this.P00;\n  t = es * es;\n  APA[0] += t * this.P01;\n  APA[1] = t * this.P10;\n  t *= es;\n  APA[0] += t * this.P02;\n  APA[1] += t * this.P11;\n  APA[2] = t * this.P20;\n  return APA;\n};\n\nexports.authlat = function(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n};\nexports.names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\n\n},{\"../common/adjust_lon\":70,\"../common/qsfnz\":85}],116:[function(_dereq_,module,exports){\nvar EPSLN = 1.0e-10;\nvar msfnz = _dereq_('../common/msfnz');\nvar tsfnz = _dereq_('../common/tsfnz');\nvar HALF_PI = Math.PI/2;\nvar sign = _dereq_('../common/sign');\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar phi2z = _dereq_('../common/phi2z');\nexports.init = function() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n};\n\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexports.forward = function(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n};\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexports.inverse = function(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n};\n\nexports.names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\n\n},{\"../common/adjust_lon\":70,\"../common/msfnz\":80,\"../common/phi2z\":81,\"../common/sign\":86,\"../common/tsfnz\":89}],117:[function(_dereq_,module,exports){\nexports.init = function() {\n  //no-op for longlat\n};\n\nfunction identity(pt) {\n  return pt;\n}\nexports.forward = identity;\nexports.inverse = identity;\nexports.names = [\"longlat\", \"identity\"];\n\n},{}],118:[function(_dereq_,module,exports){\nvar msfnz = _dereq_('../common/msfnz');\nvar HALF_PI = Math.PI/2;\nvar EPSLN = 1.0e-10;\nvar R2D = 57.29577951308232088;\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar FORTPI = Math.PI/4;\nvar tsfnz = _dereq_('../common/tsfnz');\nvar phi2z = _dereq_('../common/phi2z');\nexports.init = function() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n};\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexports.forward = function(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n};\n\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexports.inverse = function(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n};\n\nexports.names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\n\n},{\"../common/adjust_lon\":70,\"../common/msfnz\":80,\"../common/phi2z\":81,\"../common/tsfnz\":89}],119:[function(_dereq_,module,exports){\nvar adjust_lon = _dereq_('../common/adjust_lon');\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexports.init = function() {\n  //no-op\n};\n\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexports.forward = function(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n};\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexports.inverse = function(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n};\nexports.names = [\"Miller_Cylindrical\", \"mill\"];\n\n},{\"../common/adjust_lon\":70}],120:[function(_dereq_,module,exports){\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar EPSLN = 1.0e-10;\nexports.init = function() {};\n\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexports.forward = function(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  for (var i = 0; true; i++) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n};\n\nexports.inverse = function(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n};\nexports.names = [\"Mollweide\", \"moll\"];\n\n},{\"../common/adjust_lon\":70}],121:[function(_dereq_,module,exports){\nvar SEC_TO_RAD = 4.84813681109535993589914102357e-6;\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexports.iterations = 1;\n\nexports.init = function() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n};\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexports.forward = function(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n};\n\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexports.inverse = function(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n};\nexports.names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\n},{}],122:[function(_dereq_,module,exports){\nvar tsfnz = _dereq_('../common/tsfnz');\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar phi2z = _dereq_('../common/phi2z');\nvar HALF_PI = Math.PI/2;\nvar FORTPI = Math.PI/4;\nvar EPSLN = 1.0e-10;\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexports.init = function() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n};\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexports.forward = function(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n};\n\nexports.inverse = function(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n};\n\nexports.names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\n},{\"../common/adjust_lon\":70,\"../common/phi2z\":81,\"../common/tsfnz\":89}],123:[function(_dereq_,module,exports){\nvar e0fn = _dereq_('../common/e0fn');\nvar e1fn = _dereq_('../common/e1fn');\nvar e2fn = _dereq_('../common/e2fn');\nvar e3fn = _dereq_('../common/e3fn');\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar adjust_lat = _dereq_('../common/adjust_lat');\nvar mlfn = _dereq_('../common/mlfn');\nvar EPSLN = 1.0e-10;\nvar gN = _dereq_('../common/gN');\nvar MAX_ITER = 20;\nexports.init = function() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n};\n\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexports.forward = function(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n};\n\n\n/* Inverse equations\n  -----------------*/\nexports.inverse = function(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n};\nexports.names = [\"Polyconic\", \"poly\"];\n},{\"../common/adjust_lat\":69,\"../common/adjust_lon\":70,\"../common/e0fn\":72,\"../common/e1fn\":73,\"../common/e2fn\":74,\"../common/e3fn\":75,\"../common/gN\":76,\"../common/mlfn\":79}],124:[function(_dereq_,module,exports){\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar adjust_lat = _dereq_('../common/adjust_lat');\nvar pj_enfn = _dereq_('../common/pj_enfn');\nvar MAX_ITER = 20;\nvar pj_mlfn = _dereq_('../common/pj_mlfn');\nvar pj_inv_mlfn = _dereq_('../common/pj_inv_mlfn');\nvar HALF_PI = Math.PI/2;\nvar EPSLN = 1.0e-10;\nvar asinz = _dereq_('../common/asinz');\nexports.init = function() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n};\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexports.forward = function(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n};\n\nexports.inverse = function(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n};\nexports.names = [\"Sinusoidal\", \"sinu\"];\n},{\"../common/adjust_lat\":69,\"../common/adjust_lon\":70,\"../common/asinz\":71,\"../common/pj_enfn\":82,\"../common/pj_inv_mlfn\":83,\"../common/pj_mlfn\":84}],125:[function(_dereq_,module,exports){\n/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\nexports.init = function() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n};\n\n\nexports.forward = function(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n};\n\nexports.inverse = function(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n};\n\nexports.names = [\"somerc\"];\n\n},{}],126:[function(_dereq_,module,exports){\nvar HALF_PI = Math.PI/2;\nvar EPSLN = 1.0e-10;\nvar sign = _dereq_('../common/sign');\nvar msfnz = _dereq_('../common/msfnz');\nvar tsfnz = _dereq_('../common/tsfnz');\nvar phi2z = _dereq_('../common/phi2z');\nvar adjust_lon = _dereq_('../common/adjust_lon');\nexports.ssfn_ = function(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n};\n\nexports.init = function() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n};\n\n// Stereographic forward equations--mapping lat,long to x,y\nexports.forward = function(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n};\n\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexports.inverse = function(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n};\nexports.names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\n\n},{\"../common/adjust_lon\":70,\"../common/msfnz\":80,\"../common/phi2z\":81,\"../common/sign\":86,\"../common/tsfnz\":89}],127:[function(_dereq_,module,exports){\nvar gauss = _dereq_('./gauss');\nvar adjust_lon = _dereq_('../common/adjust_lon');\nexports.init = function() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n};\n\nexports.forward = function(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n};\n\nexports.inverse = function(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n};\n\nexports.names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\n\n},{\"../common/adjust_lon\":70,\"./gauss\":112}],128:[function(_dereq_,module,exports){\nvar e0fn = _dereq_('../common/e0fn');\nvar e1fn = _dereq_('../common/e1fn');\nvar e2fn = _dereq_('../common/e2fn');\nvar e3fn = _dereq_('../common/e3fn');\nvar mlfn = _dereq_('../common/mlfn');\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar HALF_PI = Math.PI/2;\nvar EPSLN = 1.0e-10;\nvar sign = _dereq_('../common/sign');\nvar asinz = _dereq_('../common/asinz');\n\nexports.init = function() {\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n};\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexports.forward = function(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (this.sphere) {\n    var b = cos_phi * Math.sin(delta_lon);\n    if ((Math.abs(Math.abs(b) - 1)) < 0.0000000001) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b));\n      con = Math.acos(cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - b * b));\n      if (lat < 0) {\n        con = -con;\n      }\n      y = this.a * this.k0 * (con - this.lat0);\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var tq = Math.tan(lat);\n    var t = Math.pow(tq, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    var n = this.a / Math.sqrt(con);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n\n    x = this.k0 * n * al * (1 + als / 6 * (1 - t + c + als / 20 * (5 - 18 * t + Math.pow(t, 2) + 72 * c - 58 * this.ep2))) + this.x0;\n    y = this.k0 * (ml - this.ml0 + n * tq * (als * (0.5 + als / 24 * (5 - t + 9 * c + 4 * Math.pow(c, 2) + als / 30 * (61 - 58 * t + Math.pow(t, 2) + 600 * c - 330 * this.ep2))))) + this.y0;\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n};\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexports.inverse = function(p) {\n  var con, phi;\n  var delta_phi;\n  var i;\n  var max_iter = 6;\n  var lat, lon;\n\n  if (this.sphere) {\n    var f = Math.exp(p.x / (this.a * this.k0));\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + p.y / (this.a * this.k0);\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - h * h) / (1 + g * g));\n    lat = asinz(con);\n    if (temp < 0) {\n      lat = -lat;\n    }\n    if ((g === 0) && (h === 0)) {\n      lon = this.long0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    var x = p.x - this.x0;\n    var y = p.y - this.y0;\n\n    con = (this.ml0 + y / this.k0) / this.a;\n    phi = con;\n    for (i = 0; true; i++) {\n      delta_phi = ((con + this.e1 * Math.sin(2 * phi) - this.e2 * Math.sin(4 * phi) + this.e3 * Math.sin(6 * phi)) / this.e0) - phi;\n      phi += delta_phi;\n      if (Math.abs(delta_phi) <= EPSLN) {\n        break;\n      }\n      if (i >= max_iter) {\n        return (95);\n      }\n    } // for()\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.tan(phi);\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var n = this.a / Math.sqrt(con);\n      var r = n * (1 - this.es) / con;\n      var d = x / (n * this.k0);\n      var ds = Math.pow(d, 2);\n      lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24 * (5 + 3 * t + 10 * c - 4 * cs - 9 * this.ep2 - ds / 30 * (61 + 90 * t + 298 * c + 45 * ts - 252 * this.ep2 - 3 * cs)));\n      lon = adjust_lon(this.long0 + (d * (1 - ds / 6 * (1 + 2 * t + c - ds / 20 * (5 - 2 * c + 28 * t - 3 * cs + 8 * this.ep2 + 24 * ts))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n};\nexports.names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\n\n},{\"../common/adjust_lon\":70,\"../common/asinz\":71,\"../common/e0fn\":72,\"../common/e1fn\":73,\"../common/e2fn\":74,\"../common/e3fn\":75,\"../common/mlfn\":79,\"../common/sign\":86}],129:[function(_dereq_,module,exports){\nvar D2R = 0.01745329251994329577;\nvar tmerc = _dereq_('./tmerc');\nexports.dependsOn = 'tmerc';\nexports.init = function() {\n  if (!this.zone) {\n    return;\n  }\n  this.lat0 = 0;\n  this.long0 = ((6 * Math.abs(this.zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  tmerc.init.apply(this);\n  this.forward = tmerc.forward;\n  this.inverse = tmerc.inverse;\n};\nexports.names = [\"Universal Transverse Mercator System\", \"utm\"];\n\n},{\"./tmerc\":128}],130:[function(_dereq_,module,exports){\nvar adjust_lon = _dereq_('../common/adjust_lon');\nvar HALF_PI = Math.PI/2;\nvar EPSLN = 1.0e-10;\nvar asinz = _dereq_('../common/asinz');\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexports.init = function() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n};\n\nexports.forward = function(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n};\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexports.inverse = function(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n};\nexports.names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\n},{\"../common/adjust_lon\":70,\"../common/asinz\":71}],131:[function(_dereq_,module,exports){\nvar D2R = 0.01745329251994329577;\nvar R2D = 57.29577951308232088;\nvar PJD_3PARAM = 1;\nvar PJD_7PARAM = 2;\nvar datum_transform = _dereq_('./datum_transform');\nvar adjust_axis = _dereq_('./adjust_axis');\nvar proj = _dereq_('./Proj');\nvar toPoint = _dereq_('./common/toPoint');\nmodule.exports = function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  function checkNotWGS(source, dest) {\n    return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== \"WGS84\");\n  }\n\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && (checkNotWGS(source, dest) || checkNotWGS(dest, source))) {\n    wgs84 = new proj('WGS84');\n    transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== \"enu\") {\n    adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === \"longlat\") {\n    point.x *= D2R; // convert degrees to radians\n    point.y *= D2R;\n  }\n  else {\n    if (source.to_meter) {\n      point.x *= source.to_meter;\n      point.y *= source.to_meter;\n    }\n    source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point.x -= dest.from_greenwich;\n  }\n\n  if (dest.projName === \"longlat\") {\n    // convert radians to decimal degrees\n    point.x *= R2D;\n    point.y *= R2D;\n  }\n  else { // else project\n    dest.forward(point);\n    if (dest.to_meter) {\n      point.x /= dest.to_meter;\n      point.y /= dest.to_meter;\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== \"enu\") {\n    adjust_axis(dest, true, point);\n  }\n\n  return point;\n};\n},{\"./Proj\":67,\"./adjust_axis\":68,\"./common/toPoint\":88,\"./datum_transform\":96}],132:[function(_dereq_,module,exports){\nvar D2R = 0.01745329251994329577;\nvar extend = _dereq_('./extend');\n\nfunction mapit(obj, key, v) {\n  obj[key] = v.map(function(aa) {\n    var o = {};\n    sExpr(aa, o);\n    return o;\n  }).reduce(function(a, b) {\n    return extend(a, b);\n  }, {});\n}\n\nfunction sExpr(v, obj) {\n  var key;\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  else {\n    key = v.shift();\n    if (key === 'PARAMETER') {\n      key = v.shift();\n    }\n    if (v.length === 1) {\n      if (Array.isArray(v[0])) {\n        obj[key] = {};\n        sExpr(v[0], obj[key]);\n      }\n      else {\n        obj[key] = v[0];\n      }\n    }\n    else if (!v.length) {\n      obj[key] = true;\n    }\n    else if (key === 'TOWGS84') {\n      obj[key] = v;\n    }\n    else {\n      obj[key] = {};\n      if (['UNIT', 'PRIMEM', 'VERT_DATUM'].indexOf(key) > -1) {\n        obj[key] = {\n          name: v[0].toLowerCase(),\n          convert: v[1]\n        };\n        if (v.length === 3) {\n          obj[key].auth = v[2];\n        }\n      }\n      else if (key === 'SPHEROID') {\n        obj[key] = {\n          name: v[0],\n          a: v[1],\n          rf: v[2]\n        };\n        if (v.length === 4) {\n          obj[key].auth = v[3];\n        }\n      }\n      else if (['GEOGCS', 'GEOCCS', 'DATUM', 'VERT_CS', 'COMPD_CS', 'LOCAL_CS', 'FITTED_CS', 'LOCAL_DATUM'].indexOf(key) > -1) {\n        v[0] = ['name', v[0]];\n        mapit(obj, key, v);\n      }\n      else if (v.every(function(aa) {\n        return Array.isArray(aa);\n      })) {\n        mapit(obj, key, v);\n      }\n      else {\n        sExpr(v, obj[key]);\n      }\n    }\n  }\n}\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  }\n  else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  }\n  else {\n    if (typeof wkt.PROJECTION === \"object\") {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    }\n    else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = parseFloat(wkt.UNIT.convert, 10)*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = parseFloat(wkt.UNIT.convert, 10);\n      }\n    }\n  }\n\n  if (wkt.GEOGCS) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (wkt.GEOGCS.DATUM) {\n      wkt.datumCode = wkt.GEOGCS.DATUM.name.toLowerCase();\n    }\n    else {\n      wkt.datumCode = wkt.GEOGCS.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === \"wgs_1984\") {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = \"rnb72\";\n    }\n    if (wkt.GEOGCS.DATUM && wkt.GEOGCS.DATUM.SPHEROID) {\n      wkt.ellps = wkt.GEOGCS.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === \"international\") {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = wkt.GEOGCS.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(wkt.GEOGCS.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = \"osgb36\";\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return parseFloat(input, 10) * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === \"Lambert_Azimuthal_Equal_Area\")) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nmodule.exports = function(wkt, self) {\n  var lisp = JSON.parse((\",\" + wkt).replace(/\\s*\\,\\s*([A-Z_0-9]+?)(\\[)/g, ',[\"$1\",').slice(1).replace(/\\s*\\,\\s*([A-Z_0-9]+?)\\]/g, ',\"$1\"]').replace(/,\\[\"VERTCS\".+/,''));\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  lisp.unshift('output');\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj.output);\n  return extend(self, obj.output);\n};\n\n},{\"./extend\":99}],133:[function(_dereq_,module,exports){\nmodule.exports={\n  \"_args\": [\n    [\n      {\n        \"raw\": \"proj4@^2.3.12\",\n        \"scope\": null,\n        \"escapedName\": \"proj4\",\n        \"name\": \"proj4\",\n        \"rawSpec\": \"^2.3.12\",\n        \"spec\": \">=2.3.12 <3.0.0\",\n        \"type\": \"range\"\n      },\n      \"C:\\\\Users\\\\Miles.Petrov\\\\Repo\\\\geoApi\"\n    ]\n  ],\n  \"_from\": \"proj4@>=2.3.12 <3.0.0\",\n  \"_id\": \"proj4@2.3.15\",\n  \"_inCache\": true,\n  \"_location\": \"/proj4\",\n  \"_nodeVersion\": \"6.1.0\",\n  \"_npmOperationalInternal\": {\n    \"host\": \"packages-12-west.internal.npmjs.com\",\n    \"tmp\": \"tmp/proj4-2.3.15.tgz_1471808262546_0.6752060337457806\"\n  },\n  \"_npmUser\": {\n    \"name\": \"ahocevar\",\n    \"email\": \"andreas.hocevar@gmail.com\"\n  },\n  \"_npmVersion\": \"3.8.6\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"raw\": \"proj4@^2.3.12\",\n    \"scope\": null,\n    \"escapedName\": \"proj4\",\n    \"name\": \"proj4\",\n    \"rawSpec\": \"^2.3.12\",\n    \"spec\": \">=2.3.12 <3.0.0\",\n    \"type\": \"range\"\n  },\n  \"_requiredBy\": [\n    \"#DEV:/\",\n    \"/shpjs\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/proj4/-/proj4-2.3.15.tgz\",\n  \"_shasum\": \"5ad06e8bca30be0ffa389a49e4565f51f06d089e\",\n  \"_shrinkwrap\": null,\n  \"_spec\": \"proj4@^2.3.12\",\n  \"_where\": \"C:\\\\Users\\\\Miles.Petrov\\\\Repo\\\\geoApi\",\n  \"author\": \"\",\n  \"bugs\": {\n    \"url\": \"https://github.com/proj4js/proj4js/issues\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Mike Adair\",\n      \"email\": \"madair@dmsolutions.ca\"\n    },\n    {\n      \"name\": \"Richard Greenwood\",\n      \"email\": \"rich@greenwoodmap.com\"\n    },\n    {\n      \"name\": \"Calvin Metcalf\",\n      \"email\": \"calvin.metcalf@gmail.com\"\n    },\n    {\n      \"name\": \"Richard Marsden\",\n      \"url\": \"http://www.winwaed.com\"\n    },\n    {\n      \"name\": \"T. Mittan\"\n    },\n    {\n      \"name\": \"D. Steinwand\"\n    },\n    {\n      \"name\": \"S. Nelson\"\n    }\n  ],\n  \"dependencies\": {\n    \"mgrs\": \"~0.0.2\"\n  },\n  \"description\": \"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\n  \"devDependencies\": {\n    \"browserify\": \"~12.0.1\",\n    \"chai\": \"~1.8.1\",\n    \"curl\": \"git://github.com/cujojs/curl.git\",\n    \"grunt\": \"~0.4.2\",\n    \"grunt-browserify\": \"~4.0.1\",\n    \"grunt-cli\": \"~0.1.13\",\n    \"grunt-contrib-connect\": \"~0.6.0\",\n    \"grunt-contrib-jshint\": \"~0.8.0\",\n    \"grunt-contrib-uglify\": \"~0.11.1\",\n    \"grunt-mocha-phantomjs\": \"~0.4.0\",\n    \"istanbul\": \"~0.2.4\",\n    \"mocha\": \"~1.17.1\",\n    \"tin\": \"~0.4.0\"\n  },\n  \"directories\": {\n    \"test\": \"test\",\n    \"doc\": \"docs\"\n  },\n  \"dist\": {\n    \"shasum\": \"5ad06e8bca30be0ffa389a49e4565f51f06d089e\",\n    \"tarball\": \"https://registry.npmjs.org/proj4/-/proj4-2.3.15.tgz\"\n  },\n  \"gitHead\": \"9fa5249c1f4183d5ddee3c4793dfd7b9f29f1886\",\n  \"homepage\": \"https://github.com/proj4js/proj4js#readme\",\n  \"jam\": {\n    \"main\": \"dist/proj4.js\",\n    \"include\": [\n      \"dist/proj4.js\",\n      \"README.md\",\n      \"AUTHORS\",\n      \"LICENSE.md\"\n    ]\n  },\n  \"license\": \"MIT\",\n  \"main\": \"lib/index.js\",\n  \"maintainers\": [\n    {\n      \"name\": \"cwmma\",\n      \"email\": \"calvin.metcalf@gmail.com\"\n    },\n    {\n      \"name\": \"ahocevar\",\n      \"email\": \"andreas.hocevar@gmail.com\"\n    }\n  ],\n  \"name\": \"proj4\",\n  \"optionalDependencies\": {},\n  \"readme\": \"ERROR: No README data found!\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/proj4js/proj4js.git\"\n  },\n  \"scripts\": {\n    \"test\": \"./node_modules/istanbul/lib/cli.js test ./node_modules/mocha/bin/_mocha test/test.js\"\n  },\n  \"version\": \"2.3.15\"\n}\n\n},{}],134:[function(_dereq_,module,exports){\n/*\n\tBased on rgbcolor.js by Stoyan Stefanov <sstoo@gmail.com>\n\thttp://www.phpied.com/rgb-color-parser-in-javascript/\n*/\n\nmodule.exports = function(color_string) {\n    this.ok = false;\n    this.alpha = 1.0;\n\n    // strip any leading #\n    if (color_string.charAt(0) == '#') { // remove # if any\n        color_string = color_string.substr(1,6);\n    }\n\n    color_string = color_string.replace(/ /g,'');\n    color_string = color_string.toLowerCase();\n\n    // before getting into regexps, try simple matches\n    // and overwrite the input\n    var simple_colors = {\n        aliceblue: 'f0f8ff',\n        antiquewhite: 'faebd7',\n        aqua: '00ffff',\n        aquamarine: '7fffd4',\n        azure: 'f0ffff',\n        beige: 'f5f5dc',\n        bisque: 'ffe4c4',\n        black: '000000',\n        blanchedalmond: 'ffebcd',\n        blue: '0000ff',\n        blueviolet: '8a2be2',\n        brown: 'a52a2a',\n        burlywood: 'deb887',\n        cadetblue: '5f9ea0',\n        chartreuse: '7fff00',\n        chocolate: 'd2691e',\n        coral: 'ff7f50',\n        cornflowerblue: '6495ed',\n        cornsilk: 'fff8dc',\n        crimson: 'dc143c',\n        cyan: '00ffff',\n        darkblue: '00008b',\n        darkcyan: '008b8b',\n        darkgoldenrod: 'b8860b',\n        darkgray: 'a9a9a9',\n        darkgreen: '006400',\n        darkkhaki: 'bdb76b',\n        darkmagenta: '8b008b',\n        darkolivegreen: '556b2f',\n        darkorange: 'ff8c00',\n        darkorchid: '9932cc',\n        darkred: '8b0000',\n        darksalmon: 'e9967a',\n        darkseagreen: '8fbc8f',\n        darkslateblue: '483d8b',\n        darkslategray: '2f4f4f',\n        darkturquoise: '00ced1',\n        darkviolet: '9400d3',\n        deeppink: 'ff1493',\n        deepskyblue: '00bfff',\n        dimgray: '696969',\n        dodgerblue: '1e90ff',\n        feldspar: 'd19275',\n        firebrick: 'b22222',\n        floralwhite: 'fffaf0',\n        forestgreen: '228b22',\n        fuchsia: 'ff00ff',\n        gainsboro: 'dcdcdc',\n        ghostwhite: 'f8f8ff',\n        gold: 'ffd700',\n        goldenrod: 'daa520',\n        gray: '808080',\n        green: '008000',\n        greenyellow: 'adff2f',\n        honeydew: 'f0fff0',\n        hotpink: 'ff69b4',\n        indianred : 'cd5c5c',\n        indigo : '4b0082',\n        ivory: 'fffff0',\n        khaki: 'f0e68c',\n        lavender: 'e6e6fa',\n        lavenderblush: 'fff0f5',\n        lawngreen: '7cfc00',\n        lemonchiffon: 'fffacd',\n        lightblue: 'add8e6',\n        lightcoral: 'f08080',\n        lightcyan: 'e0ffff',\n        lightgoldenrodyellow: 'fafad2',\n        lightgrey: 'd3d3d3',\n        lightgreen: '90ee90',\n        lightpink: 'ffb6c1',\n        lightsalmon: 'ffa07a',\n        lightseagreen: '20b2aa',\n        lightskyblue: '87cefa',\n        lightslateblue: '8470ff',\n        lightslategray: '778899',\n        lightsteelblue: 'b0c4de',\n        lightyellow: 'ffffe0',\n        lime: '00ff00',\n        limegreen: '32cd32',\n        linen: 'faf0e6',\n        magenta: 'ff00ff',\n        maroon: '800000',\n        mediumaquamarine: '66cdaa',\n        mediumblue: '0000cd',\n        mediumorchid: 'ba55d3',\n        mediumpurple: '9370d8',\n        mediumseagreen: '3cb371',\n        mediumslateblue: '7b68ee',\n        mediumspringgreen: '00fa9a',\n        mediumturquoise: '48d1cc',\n        mediumvioletred: 'c71585',\n        midnightblue: '191970',\n        mintcream: 'f5fffa',\n        mistyrose: 'ffe4e1',\n        moccasin: 'ffe4b5',\n        navajowhite: 'ffdead',\n        navy: '000080',\n        oldlace: 'fdf5e6',\n        olive: '808000',\n        olivedrab: '6b8e23',\n        orange: 'ffa500',\n        orangered: 'ff4500',\n        orchid: 'da70d6',\n        palegoldenrod: 'eee8aa',\n        palegreen: '98fb98',\n        paleturquoise: 'afeeee',\n        palevioletred: 'd87093',\n        papayawhip: 'ffefd5',\n        peachpuff: 'ffdab9',\n        peru: 'cd853f',\n        pink: 'ffc0cb',\n        plum: 'dda0dd',\n        powderblue: 'b0e0e6',\n        purple: '800080',\n        red: 'ff0000',\n        rosybrown: 'bc8f8f',\n        royalblue: '4169e1',\n        saddlebrown: '8b4513',\n        salmon: 'fa8072',\n        sandybrown: 'f4a460',\n        seagreen: '2e8b57',\n        seashell: 'fff5ee',\n        sienna: 'a0522d',\n        silver: 'c0c0c0',\n        skyblue: '87ceeb',\n        slateblue: '6a5acd',\n        slategray: '708090',\n        snow: 'fffafa',\n        springgreen: '00ff7f',\n        steelblue: '4682b4',\n        tan: 'd2b48c',\n        teal: '008080',\n        thistle: 'd8bfd8',\n        tomato: 'ff6347',\n        turquoise: '40e0d0',\n        violet: 'ee82ee',\n        violetred: 'd02090',\n        wheat: 'f5deb3',\n        white: 'ffffff',\n        whitesmoke: 'f5f5f5',\n        yellow: 'ffff00',\n        yellowgreen: '9acd32'\n    };\n    color_string = simple_colors[color_string] || color_string;\n    // emd of simple type-in colors\n\n    // array of color definition objects\n    var color_defs = [\n        {\n            re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*((?:\\d?\\.)?\\d)\\)$/,\n            example: ['rgba(123, 234, 45, 0.8)', 'rgba(255,234,245,1.0)'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1]),\n                    parseInt(bits[2]),\n                    parseInt(bits[3]),\n                    parseFloat(bits[4])\n                ];\n            }\n        },\n        {\n            re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n            example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1]),\n                    parseInt(bits[2]),\n                    parseInt(bits[3])\n                ];\n            }\n        },\n        {\n            re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n            example: ['#00ff00', '336699'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1], 16),\n                    parseInt(bits[2], 16),\n                    parseInt(bits[3], 16)\n                ];\n            }\n        },\n        {\n            re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n            example: ['#fb0', 'f0f'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1] + bits[1], 16),\n                    parseInt(bits[2] + bits[2], 16),\n                    parseInt(bits[3] + bits[3], 16)\n                ];\n            }\n        }\n    ];\n\n    // search through the definitions to find a match\n    for (var i = 0; i < color_defs.length; i++) {\n        var re = color_defs[i].re;\n        var processor = color_defs[i].process;\n        var bits = re.exec(color_string);\n        if (bits) {\n            var channels = processor(bits);\n            this.r = channels[0];\n            this.g = channels[1];\n            this.b = channels[2];\n            if (channels.length > 3) {\n                this.alpha = channels[3];\n            }\n            this.ok = true;\n        }\n\n    }\n\n    // validate/cleanup values\n    this.r = (this.r < 0 || isNaN(this.r)) ? 0 : ((this.r > 255) ? 255 : this.r);\n    this.g = (this.g < 0 || isNaN(this.g)) ? 0 : ((this.g > 255) ? 255 : this.g);\n    this.b = (this.b < 0 || isNaN(this.b)) ? 0 : ((this.b > 255) ? 255 : this.b);\n    this.alpha = (this.alpha < 0) ? 0 : ((this.alpha > 1.0 || isNaN(this.alpha)) ? 1.0 : this.alpha);\n\n    // some getters\n    this.toRGB = function () {\n        return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';\n    }\n    this.toRGBA = function () {\n        return 'rgba(' + this.r + ', ' + this.g + ', ' + this.b + ', ' + this.alpha + ')';\n    }\n    this.toHex = function () {\n        var r = this.r.toString(16);\n        var g = this.g.toString(16);\n        var b = this.b.toString(16);\n        if (r.length == 1) r = '0' + r;\n        if (g.length == 1) g = '0' + g;\n        if (b.length == 1) b = '0' + b;\n        return '#' + r + g + b;\n    }\n\n    // help\n    this.getHelpXML = function () {\n\n        var examples = new Array();\n        // add regexps\n        for (var i = 0; i < color_defs.length; i++) {\n            var example = color_defs[i].example;\n            for (var j = 0; j < example.length; j++) {\n                examples[examples.length] = example[j];\n            }\n        }\n        // add type-in colors\n        for (var sc in simple_colors) {\n            examples[examples.length] = sc;\n        }\n\n        var xml = document.createElement('ul');\n        xml.setAttribute('id', 'rgbcolor-examples');\n        for (var i = 0; i < examples.length; i++) {\n            try {\n                var list_item = document.createElement('li');\n                var list_color = new RGBColor(examples[i]);\n                var example_div = document.createElement('div');\n                example_div.style.cssText =\n                        'margin: 3px; '\n                        + 'border: 1px solid black; '\n                        + 'background:' + list_color.toHex() + '; '\n                        + 'color:' + list_color.toHex()\n                ;\n                example_div.appendChild(document.createTextNode('test'));\n                var list_item_value = document.createTextNode(\n                    ' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex()\n                );\n                list_item.appendChild(example_div);\n                list_item.appendChild(list_item_value);\n                xml.appendChild(list_item);\n\n            } catch(e){}\n        }\n        return xml;\n\n    }\n\n}\n\n},{}],135:[function(_dereq_,module,exports){\nmodule.exports = element;\nmodule.exports.pair = pair;\nmodule.exports.format = format;\nmodule.exports.formatPair = formatPair;\n\nfunction element(x, dims) {\n    return search(x, dims).val;\n}\n\nfunction formatPair(x) {\n    return format(x.lat, 'lat') + ' ' + format(x.lon, 'lon');\n}\n\n// Is 0 North or South?\nfunction format(x, dim) {\n    var dirs = {\n            lat: ['N', 'S'],\n            lon: ['E', 'W']\n        }[dim] || '',\n        dir = dirs[x >= 0 ? 0 : 1],\n        abs = Math.abs(x),\n        whole = Math.floor(abs),\n        fraction = abs - whole,\n        fractionMinutes = fraction * 60,\n        minutes = Math.floor(fractionMinutes),\n        seconds = Math.floor((fractionMinutes - minutes) * 60);\n\n    return whole + '° ' +\n        (minutes ? minutes + \"' \" : '') +\n        (seconds ? seconds + '\" ' : '') + dir;\n}\n\nfunction search(x, dims, r) {\n    if (!dims) dims = 'NSEW';\n    if (typeof x !== 'string') return { val: null, regex: r };\n    r = r || /[\\s\\,]*([\\-|\\—|\\―]?[0-9.]+)°? *(?:([0-9.]+)['’′‘] *)?(?:([0-9.]+)(?:''|\"|”|″) *)?([NSEW])?/gi;\n    var m = r.exec(x);\n    if (!m) return { val: null, regex: r };\n    else if (m[4] && dims.indexOf(m[4]) === -1) return { val: null, regex: r };\n    else return {\n        val: (((m[1]) ? parseFloat(m[1]) : 0) +\n            ((m[2] ? parseFloat(m[2]) / 60 : 0)) +\n            ((m[3] ? parseFloat(m[3]) / 3600 : 0))) *\n            ((m[4] && m[4] === 'S' || m[4] === 'W') ? -1 : 1),\n        regex: r,\n        raw: m[0],\n        dim: m[4]\n    };\n}\n\nfunction pair(x, dims) {\n    x = x.trim();\n    var one = search(x, dims);\n    if (one.val === null) return null;\n    var two = search(x, dims, one.regex);\n    if (two.val === null) return null;\n    // null if one/two are not contiguous.\n    if (one.raw + two.raw !== x) return null;\n    if (one.dim) return swapdim(one.val, two.val, one.dim);\n    else return [one.val, two.val];\n}\n\nfunction swapdim(a, b, dim) {\n    if (dim == 'N' || dim == 'S') return [a, b];\n    if (dim == 'W' || dim == 'E') return [b, a];\n}\n\n},{}],136:[function(_dereq_,module,exports){\n'use strict';\r\nvar Promise = _dereq_('lie');\r\nmodule.exports = binaryAjax;\r\nfunction binaryAjax(url){\r\n\treturn new Promise(function(resolve,reject){\r\n\t\tvar type = url.slice(-3);\r\n\t\tvar ajax = new XMLHttpRequest();\r\n\t\tajax.open('GET',url,true);\r\n\t\tif(type !== 'prj'){\r\n\t\t\tajax.responseType='arraybuffer';\r\n\t\t}\r\n\t\tajax.addEventListener('load', function (){\r\n\t\t\tif(ajax.status>399){\r\n\t\t\t\tif(type==='prj'){\r\n\t\t\t\t\treturn resolve(false);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn reject(new Error(ajax.status));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresolve(ajax.response);\r\n\t\t}, false);\r\n\t\tajax.send();\r\n\t});\r\n}\n},{\"lie\":53}],137:[function(_dereq_,module,exports){\n(function (Buffer){\n'use strict';\r\nvar proj4 = _dereq_('proj4');\r\nvar unzip = _dereq_('./unzip');\r\nvar binaryAjax = _dereq_('./binaryajax');\r\nvar parseShp = _dereq_('./parseShp');\r\nvar toArrayBuffer = _dereq_('./toArrayBuffer');\r\nvar parseDbf = _dereq_('parsedbf');\r\nvar Promise = _dereq_('lie');\r\nvar Cache = _dereq_('lru-cache');\r\nvar cache = new Cache({\r\n\tmax: 20\r\n});\r\nfunction shp(base, whiteList) {\r\n\tif (typeof base === 'string' && cache.has(base)) {\r\n\t\treturn Promise.resolve(cache.get(base));\r\n\t}\r\n\treturn shp.getShapefile(base, whiteList).then(function (resp) {\r\n\t\tif (typeof base === 'string') {\r\n\t\t\tcache.set(base, resp);\r\n\t\t}\r\n\t\treturn resp;\r\n\t});\r\n}\r\nshp.combine = function(arr) {\r\n\tvar out = {};\r\n\tout.type = 'FeatureCollection';\r\n\tout.features = [];\r\n\tvar i = 0;\r\n\tvar len = arr[0].length;\r\n\twhile (i < len) {\r\n\t\tout.features.push({\r\n\t\t\t'type': 'Feature',\r\n\t\t\t'geometry': arr[0][i],\r\n\t\t\t'properties': arr[1][i]\r\n\t\t});\r\n\t\ti++;\r\n\t}\r\n\treturn out;\r\n};\r\nshp.parseZip = function(buffer, whiteList) {\r\n\tvar key;\r\n\tvar zip = unzip(buffer);\r\n\tvar names = [];\r\n\twhiteList = whiteList || [];\r\n\tfor (key in zip) {\r\n\t\tif (key.indexOf('__MACOSX') !== -1) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (key.slice(-3).toLowerCase() === 'shp') {\r\n\t\t\tnames.push(key.slice(0, - 4));\r\n\t\t}\r\n\t\telse if (key.slice(-3).toLowerCase() === 'dbf') {\r\n\t\t\tzip[key.slice(0, -3) + key.slice(-3).toLowerCase()] = parseDbf(zip[key]);\r\n\t\t}\r\n\t\telse if (key.slice(-3).toLowerCase() === 'prj') {\r\n\t\t\tzip[key.slice(0, -3) + key.slice(-3).toLowerCase()] = proj4(zip[key]);\r\n\t\t}\r\n\t\telse if (key.slice(-4).toLowerCase() === 'json' || whiteList.indexOf(key.split('.').pop()) > -1) {\r\n\t\t\tnames.push(key.slice(0, -3) + key.slice(-3).toLowerCase());\r\n\t\t}\r\n\t}\r\n\tif (!names.length) {\r\n\t\tthrow new Error('no layers founds');\r\n\t}\r\n\tvar geojson = names.map(function(name) {\r\n\t\tvar parsed;\r\n\t\tif (name.slice(-4).toLowerCase() === 'json') {\r\n\t\t\tparsed = JSON.parse(zip[name]);\r\n\t\t\tparsed.fileName = name.slice(0, name.lastIndexOf('.'));\r\n\t\t}\r\n\t\telse if (whiteList.indexOf(name.slice(name.lastIndexOf('.') + 1)) > -1) {\r\n\t\t\tparsed = zip[name];\r\n\t\t\tparsed.fileName = name;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tparsed = shp.combine([parseShp(zip[name + '.shp'], zip[name + '.prj']), zip[name + '.dbf']]);\r\n\t\t\tparsed.fileName = name;\r\n\t\t}\r\n\t\treturn parsed;\r\n\t});\r\n\tif (geojson.length === 1) {\r\n\t\treturn geojson[0];\r\n\t}\r\n\telse {\r\n\t\treturn geojson;\r\n\t}\r\n};\r\n\r\nfunction getZip(base, whiteList) {\r\n\treturn binaryAjax(base).then(function(a) {\r\n\t\treturn shp.parseZip(a, whiteList);\r\n\t});\r\n}\r\nshp.getShapefile = function(base, whiteList) {\r\n\tif (typeof base === 'string') {\r\n\t\tif (base.slice(-4) === '.zip') {\r\n\t\t\treturn getZip(base, whiteList);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn Promise.all([\r\n\t\t\t\tPromise.all([\r\n\t\t\t\t\tbinaryAjax(base + '.shp'),\r\n\t\t\t\t\tbinaryAjax(base + '.prj')\r\n\t\t\t\t]).then(function(args) {\r\n\t\t\t\t\treturn parseShp(args[0], args[1] ? proj4(args[1]) : false);\r\n\t\t\t\t}),\r\n\t\t\t\tbinaryAjax(base + '.dbf').then(parseDbf)\r\n\t\t\t]).then(shp.combine);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\treturn new Promise(function(resolve) {\r\n\t\t\tresolve(shp.parseZip(base));\r\n\t\t});\r\n\t}\r\n};\r\nshp.parseShp = function (shp, prj) {\r\n\tif (Buffer.isBuffer(shp)) {\r\n\t\tshp = toArrayBuffer(shp);\r\n\t}\r\n\tif (Buffer.isBuffer(prj)) {\r\n\t\tprj = prj.toString();\r\n\t}\r\n\tif (typeof prj === 'string') {\r\n\t\tprj = proj4(prj);\r\n\t\treturn parseShp(shp, prj);\r\n\t} else {\r\n\t\treturn parseShp(shp);\r\n\t}\r\n};\r\nshp.parseDbf = function (dbf) {\r\n\tif (Buffer.isBuffer(dbf)) {\r\n\t\tdbf = toArrayBuffer(dbf);\r\n\t}\r\n\treturn parseDbf(dbf);\r\n};\r\nmodule.exports = shp;\r\n\n}).call(this,{\"isBuffer\":_dereq_(\"../../is-buffer/index.js\")})\n},{\"../../is-buffer/index.js\":9,\"./binaryajax\":136,\"./parseShp\":138,\"./toArrayBuffer\":139,\"./unzip\":140,\"lie\":53,\"lru-cache\":63,\"parsedbf\":65,\"proj4\":102}],138:[function(_dereq_,module,exports){\n'use strict';\r\nfunction isClockWise(array){\r\n\tvar sum = 0;\r\n\tvar i = 1;\r\n\tvar len = array.length;\r\n\tvar prev,cur;\r\n\twhile(i<len){\r\n\t\tprev = cur||array[0];\r\n\t\tcur = array[i];\r\n\t\tsum += ((cur[0]-prev[0])*(cur[1]+prev[1]));\r\n\t\ti++;\r\n\t}\r\n\treturn sum > 0;\r\n}\r\nfunction polyReduce(a,b){\r\n\tif(isClockWise(b)||!a.length){\r\n\t\ta.push([b]);\r\n\t}else{\r\n\t\ta[a.length-1].push(b);\r\n\t}\r\n\treturn a;\r\n}\r\nParseShp.prototype.parsePoint = function (data){\r\n\treturn {\r\n\t\t'type': 'Point',\r\n\t\t'coordinates': this.parseCoord(data,0)\r\n\t};\r\n};\r\nParseShp.prototype.parseZPoint = function (data){\r\n\tvar pointXY = this.parsePoint(data);\r\n\tpointXY.coordinates.push(this.parseCoord(data,16));\r\n\treturn pointXY;\r\n};\r\nParseShp.prototype.parsePointArray = function (data,offset,num){\r\n\tvar out = [];\r\n\tvar done = 0;\r\n\twhile(done<num){\r\n\t\tout.push(this.parseCoord(data,offset));\r\n\t\toffset += 16;\r\n\t\tdone++;\r\n\t}\r\n\treturn out;\r\n};\r\nParseShp.prototype.parseZPointArray = function (data,zOffset,num,coordinates){\r\n\tvar i = 0;\r\n\twhile(i<num){\r\n\t\tcoordinates[i].push(data.getFloat64(zOffset,true));\r\n\t\ti++;\r\n\t\tzOffset += 8;\r\n\t}\r\n\treturn coordinates;\r\n};\r\nParseShp.prototype.parseArrayGroup = function (data,offset,partOffset,num,tot){\r\n\tvar out = [];\r\n\tvar done = 0;\r\n\tvar curNum,nextNum=0,pointNumber;\r\n\twhile(done<num){\r\n\t\tdone++;\r\n\t\tpartOffset += 4;\r\n\t\tcurNum = nextNum;\r\n\t\tif(done===num){\r\n\t\t\tnextNum = tot;\r\n\t\t}else{\r\n\t\t\tnextNum = data.getInt32(partOffset,true);\r\n\t\t}\r\n\t\tpointNumber = nextNum - curNum;\r\n\t\tif(!pointNumber){\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tout.push(this.parsePointArray(data,offset,pointNumber));\r\n\t\toffset += (pointNumber<<4);\r\n\t}\r\n\treturn out;\r\n};\r\nParseShp.prototype.parseZArrayGroup = function(data,zOffset,num,coordinates){\r\n\tvar i = 0;\r\n\twhile(i<num){\r\n\t\tcoordinates[i] = this.parseZPointArray(data,zOffset,coordinates[i].length,coordinates[i]);\r\n\t\tzOffset += (coordinates[i].length<<3);\r\n\t\ti++;\r\n\t}\r\n\treturn coordinates;\r\n};\r\nParseShp.prototype.parseMultiPoint = function (data){\r\n\tvar out = {};\r\n\tvar mins = this.parseCoord(data,0);\r\n\tvar maxs = this.parseCoord(data,16);\r\n\tout.bbox = [\r\n\t\tmins[0],\r\n\t\tmins[1],\r\n\t\tmaxs[0],\r\n\t\tmaxs[1]\r\n\t];\r\n\tvar num = data.getInt32(32,true);\r\n\tvar offset = 36;\r\n\tif(num===1){\r\n\t\tout.type = 'Point';\r\n\t\tout.coordinates = this.parseCoord(data,offset);\r\n\t}else{\r\n\t\tout.type = 'MultiPoint';\r\n\t\tout.coordinates = this.parsePointArray(data,offset,num);\r\n\t}\r\n\treturn out;\r\n};\r\nParseShp.prototype.parseZMultiPoint = function(data){\r\n\tvar geoJson = this.parseMultiPoint(data);\r\n\tvar num;\r\n\tif(geoJson.type === 'Point'){\r\n\t\tgeoJson.coordinates.push(data.getFloat64(72,true));\r\n\t\treturn geoJson;\r\n\t}else{\r\n\t\tnum = geoJson.coordinates.length;\r\n\t}\r\n\tvar zOffset = 56 + (num<<4);\r\n\tgeoJson.coordinates =  this.parseZPointArray(data,zOffset,num,geoJson.coordinates);\r\n\treturn geoJson;\r\n};\r\nParseShp.prototype.parsePolyline = function (data){\r\n\tvar out = {};\r\n\tvar mins = this.parseCoord(data,0);\r\n\tvar maxs = this.parseCoord(data,16);\r\n\tout.bbox = [\r\n\t\tmins[0],\r\n\t\tmins[1],\r\n\t\tmaxs[0],\r\n\t\tmaxs[1]\r\n\t];\r\n\tvar numParts = data.getInt32(32,true);\r\n\tvar num = data.getInt32(36,true);\r\n\tvar offset,partOffset;\r\n\tif(numParts === 1){\r\n\t\tout.type = 'LineString';\r\n\t\toffset = 44;\r\n\t\tout.coordinates = this.parsePointArray(data,offset,num);\r\n\t}else{\r\n\t\tout.type = 'MultiLineString';\r\n\t\toffset = 40 + (numParts<<2);\r\n\t\tpartOffset = 40;\r\n\t\tout.coordinates = this.parseArrayGroup(data,offset,partOffset,numParts,num);\r\n\t}\r\n\treturn out;\r\n};\r\nParseShp.prototype.parseZPolyline = function(data){\r\n\tvar geoJson = this.parsePolyline(data);\r\n\tvar num = geoJson.coordinates.length;\r\n\tvar zOffset = 60 + (num<<4);\r\n\tif(geoJson.type === 'LineString'){\r\n\t\tgeoJson.coordinates =  this.parseZPointArray(data,zOffset,num,geoJson.coordinates);\r\n\t\treturn geoJson;\r\n\t}else{\r\n\t\tgeoJson.coordinates =  this.parseZArrayGroup(data,zOffset,num,geoJson.coordinates);\r\n\t\treturn geoJson;\r\n\t}\r\n};\r\nParseShp.prototype.polyFuncs = function (out){\r\n\tif(out.type === 'LineString'){\r\n\t\tout.type = 'Polygon';\r\n\t\tout.coordinates = [out.coordinates];\r\n\t\treturn out;\r\n\t}else{\r\n\t\tout.coordinates = out.coordinates.reduce(polyReduce,[]);\r\n\t\tif(out.coordinates.length === 1){\r\n\t\t\tout.type = 'Polygon';\r\n\t\t\tout.coordinates = out.coordinates[0];\r\n\t\t\treturn out;\r\n\t\t}else{\r\n\t\t\tout.type = 'MultiPolygon';\r\n\t\t\treturn out;\r\n\t\t}\r\n\t}\r\n};\r\nParseShp.prototype.parsePolygon = function (data){\r\n\treturn this.polyFuncs(this.parsePolyline(data));\r\n};\r\nParseShp.prototype.parseZPolygon = function(data){\r\n\treturn this.polyFuncs(this.parseZPolyline(data));\r\n};\r\nvar shpFuncObj = {\r\n\t1:'parsePoint',\r\n\t3:'parsePolyline',\r\n\t5:'parsePolygon',\r\n\t8:'parseMultiPoint',\r\n\t11:'parseZPoint',\r\n\t13:'parseZPolyline',\r\n\t15:'parseZPolygon',\r\n\t18:'parseZMultiPoint'\r\n};\r\n\r\n\r\n\r\nfunction makeParseCoord(trans){\r\n\tif(trans){\r\n\t\treturn function(data,offset){\r\n\t\t\treturn trans.inverse([data.getFloat64(offset,true),data.getFloat64(offset+8,true)]);\r\n\t\t};\r\n\t}else{\r\n\t\treturn function(data,offset){\r\n\t\t\treturn [data.getFloat64(offset,true),data.getFloat64(offset+8,true)];\r\n\t\t};\r\n\t}\r\n}\r\nfunction ParseShp(buffer,trans){\r\n\tif(!(this instanceof ParseShp)){\r\n\t\treturn new ParseShp(buffer,trans);\r\n\t}\r\n\tthis.buffer = buffer;\r\n\tthis.shpFuncs(trans);\r\n\tthis.rows = this.getRows();\r\n}\r\nParseShp.prototype.shpFuncs = function (tran){\r\n\tvar num = this.getShpCode();\r\n\tif(num>20){\r\n\t\tnum -= 20;\r\n\t}\r\n\tif(!(num in shpFuncObj)){\r\n\t\tthrow new Error('I don\\'t know that shp type');\r\n\t}\r\n\tthis.parseFunc = this[shpFuncObj[num]];\r\n\tthis.parseCoord = makeParseCoord(tran);\r\n};\r\nParseShp.prototype.getShpCode = function(){\r\n\treturn this.parseHeader().shpCode;\r\n};\r\nParseShp.prototype.parseHeader = function (){\r\n\tvar view = new DataView(this.buffer,0,100) ;\r\n\treturn {\r\n\t\tlength : view.getInt32(6<<2,false),\r\n\t\tversion : view.getInt32(7<<2,true),\r\n\t\tshpCode : view.getInt32(8<<2,true),\r\n\t\tbbox : [\r\n\t\t\tview.getFloat64(9<<2,true),\r\n\t\t\tview.getFloat64(11<<2,true),\r\n\t\t\tview.getFloat64(13<<2,true),\r\n\t\t\tview.getFloat64(13<<2,true)\r\n\t\t]\r\n\t};\r\n};\r\nParseShp.prototype.getRows = function(){\r\n\tvar offset=100;\r\n\tvar len = this.buffer.byteLength;\r\n\tvar out = [];\r\n\tvar current;\r\n\twhile(offset<len){\r\n\t\tcurrent = this.getRow(offset);\r\n\t\toffset += 8;\r\n\t\toffset += current.len;\r\n\t\tif(current.type){\r\n\t\t\tout.push(this.parseFunc(current.data));\r\n\t\t}\r\n\t}\r\n\treturn out;\r\n};\r\nParseShp.prototype.getRow = function(offset){\r\n\tvar view = new DataView(this.buffer,offset,12);\r\n\tvar len = view.getInt32(4,false) << 1;\r\n\tvar data = new DataView(this.buffer,offset+12,len - 4);\r\n\t\r\n\treturn {\r\n\t\tid:view.getInt32(0,false),\r\n\t\tlen:len,\r\n\t\tdata:data,\r\n\t\ttype:view.getInt32(8,true)\r\n\t};\r\n};\r\nmodule.exports = function(buffer, trans){\r\n\treturn new ParseShp(buffer, trans).rows;\r\n};\n},{}],139:[function(_dereq_,module,exports){\n'use strict';\r\nmodule.exports = toArrayBuffer;\r\nfunction toArrayBuffer(buffer) {\r\n    var arrayBuffer = new ArrayBuffer(buffer.length);\r\n    var view = new Uint8Array(arrayBuffer);\r\n    var i = -1;\r\n    var len = buffer.length;\r\n    while (++i < len) {\r\n        view[i] = buffer[i];\r\n    }\r\n    return arrayBuffer;\r\n}\n},{}],140:[function(_dereq_,module,exports){\n'use strict';\r\n\r\nvar JSZip = _dereq_('jszip');\r\nmodule.exports = function(buffer) {\r\n\tvar zip = new JSZip(buffer);\r\n\tvar files = zip.file(/.+/);\r\n\tvar out = {};\r\n\tfiles.forEach(function(a) {\r\n\t\tif (a.name.slice(-3).toLowerCase() === 'shp' || a.name.slice(-3).toLowerCase() === 'dbf') {\r\n\t\t\tout[a.name] = a.asText();\r\n\t\t\tout[a.name] = a.asArrayBuffer();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tout[a.name] = a.asText();\r\n\t\t}\r\n\t});\r\n\treturn out;\r\n};\r\n\n},{\"jszip\":19}],141:[function(_dereq_,module,exports){\n/*\n\nStackBlur - a fast almost Gaussian Blur For Canvas\n\nVersion: \t0.5\nAuthor:\t\tMario Klingemann\nContact: \tmario@quasimondo.com\nWebsite:\thttp://www.quasimondo.com/StackBlurForCanvas\nTwitter:\t@quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr: \nhttps://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2010 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar mul_table = [\n        512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,\n        454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,\n        482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,\n        437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,\n        497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,\n        320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,\n        446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,\n        329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,\n        505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,\n        399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,\n        324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,\n        268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,\n        451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,\n        385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,\n        332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,\n        289,287,285,282,280,278,275,273,271,269,267,265,263,261,259];\n        \n   \nvar shg_table = [\n\t     9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, \n\t\t17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, \n\t\t19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20,\n\t\t20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21,\n\t\t21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\n\t\t21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, \n\t\t22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\n\t\t22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, \n\t\t23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n\t\t23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n\t\t23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, \n\t\t23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, \n\t\t24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t\t24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t\t24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t\t24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24 ];\n\nfunction blur( pixels, width, height, radius )\n{\n\tif ( isNaN(radius) || radius < 1 ) return;\n\tradius |= 0;\n\n\tvar x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, \n\tr_out_sum, g_out_sum, b_out_sum, a_out_sum,\n\tr_in_sum, g_in_sum, b_in_sum, a_in_sum, \n\tpr, pg, pb, pa, rbs;\n\t\t\t\n\tvar div = radius + radius + 1;\n\tvar w4 = width << 2;\n\tvar widthMinus1  = width - 1;\n\tvar heightMinus1 = height - 1;\n\tvar radiusPlus1  = radius + 1;\n\tvar sumFactor = radiusPlus1 * ( radiusPlus1 + 1 ) / 2;\n\t\n\tvar stackStart = new BlurStack();\n\tvar stack = stackStart;\n\tfor ( i = 1; i < div; i++ )\n\t{\n\t\tstack = stack.next = new BlurStack();\n\t\tif ( i == radiusPlus1 ) var stackEnd = stack;\n\t}\n\tstack.next = stackStart;\n\tvar stackIn = null;\n\tvar stackOut = null;\n\t\n\tyw = yi = 0;\n\t\n\tvar mul_sum = mul_table[radius];\n\tvar shg_sum = shg_table[radius];\n\t\n\tfor ( y = 0; y < height; y++ )\n\t{\n\t\tr_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n\t\t\n\t\tr_out_sum = radiusPlus1 * ( pr = pixels[yi] );\n\t\tg_out_sum = radiusPlus1 * ( pg = pixels[yi+1] );\n\t\tb_out_sum = radiusPlus1 * ( pb = pixels[yi+2] );\n\t\ta_out_sum = radiusPlus1 * ( pa = pixels[yi+3] );\n\t\t\n\t\tr_sum += sumFactor * pr;\n\t\tg_sum += sumFactor * pg;\n\t\tb_sum += sumFactor * pb;\n\t\ta_sum += sumFactor * pa;\n\t\t\n\t\tstack = stackStart;\n\t\t\n\t\tfor( i = 0; i < radiusPlus1; i++ )\n\t\t{\n\t\t\tstack.r = pr;\n\t\t\tstack.g = pg;\n\t\t\tstack.b = pb;\n\t\t\tstack.a = pa;\n\t\t\tstack = stack.next;\n\t\t}\n\t\t\n\t\tfor( i = 1; i < radiusPlus1; i++ )\n\t\t{\n\t\t\tp = yi + (( widthMinus1 < i ? widthMinus1 : i ) << 2 );\n\t\t\tr_sum += ( stack.r = ( pr = pixels[p])) * ( rbs = radiusPlus1 - i );\n\t\t\tg_sum += ( stack.g = ( pg = pixels[p+1])) * rbs;\n\t\t\tb_sum += ( stack.b = ( pb = pixels[p+2])) * rbs;\n\t\t\ta_sum += ( stack.a = ( pa = pixels[p+3])) * rbs;\n\t\t\t\n\t\t\tr_in_sum += pr;\n\t\t\tg_in_sum += pg;\n\t\t\tb_in_sum += pb;\n\t\t\ta_in_sum += pa;\n\t\t\t\n\t\t\tstack = stack.next;\n\t\t}\n\t\t\n\t\t\n\t\tstackIn = stackStart;\n\t\tstackOut = stackEnd;\n\t\tfor ( x = 0; x < width; x++ )\n\t\t{\n\t\t\tpixels[yi+3] = pa = (a_sum * mul_sum) >> shg_sum;\n\t\t\tif ( pa != 0 )\n\t\t\t{\n\t\t\t\tpa = 255 / pa;\n\t\t\t\tpixels[yi]   = ((r_sum * mul_sum) >> shg_sum) * pa;\n\t\t\t\tpixels[yi+1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n\t\t\t\tpixels[yi+2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n\t\t\t} else {\n\t\t\t\tpixels[yi] = pixels[yi+1] = pixels[yi+2] = 0;\n\t\t\t}\n\t\t\t\n\t\t\tr_sum -= r_out_sum;\n\t\t\tg_sum -= g_out_sum;\n\t\t\tb_sum -= b_out_sum;\n\t\t\ta_sum -= a_out_sum;\n\t\t\t\n\t\t\tr_out_sum -= stackIn.r;\n\t\t\tg_out_sum -= stackIn.g;\n\t\t\tb_out_sum -= stackIn.b;\n\t\t\ta_out_sum -= stackIn.a;\n\t\t\t\n\t\t\tp =  ( yw + ( ( p = x + radius + 1 ) < widthMinus1 ? p : widthMinus1 ) ) << 2;\n\t\t\t\n\t\t\tr_in_sum += ( stackIn.r = pixels[p]);\n\t\t\tg_in_sum += ( stackIn.g = pixels[p+1]);\n\t\t\tb_in_sum += ( stackIn.b = pixels[p+2]);\n\t\t\ta_in_sum += ( stackIn.a = pixels[p+3]);\n\t\t\t\n\t\t\tr_sum += r_in_sum;\n\t\t\tg_sum += g_in_sum;\n\t\t\tb_sum += b_in_sum;\n\t\t\ta_sum += a_in_sum;\n\t\t\t\n\t\t\tstackIn = stackIn.next;\n\t\t\t\n\t\t\tr_out_sum += ( pr = stackOut.r );\n\t\t\tg_out_sum += ( pg = stackOut.g );\n\t\t\tb_out_sum += ( pb = stackOut.b );\n\t\t\ta_out_sum += ( pa = stackOut.a );\n\t\t\t\n\t\t\tr_in_sum -= pr;\n\t\t\tg_in_sum -= pg;\n\t\t\tb_in_sum -= pb;\n\t\t\ta_in_sum -= pa;\n\t\t\t\n\t\t\tstackOut = stackOut.next;\n\n\t\t\tyi += 4;\n\t\t}\n\t\tyw += width;\n\t}\n\n\t\n\tfor ( x = 0; x < width; x++ )\n\t{\n\t\tg_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n\t\t\n\t\tyi = x << 2;\n\t\tr_out_sum = radiusPlus1 * ( pr = pixels[yi]);\n\t\tg_out_sum = radiusPlus1 * ( pg = pixels[yi+1]);\n\t\tb_out_sum = radiusPlus1 * ( pb = pixels[yi+2]);\n\t\ta_out_sum = radiusPlus1 * ( pa = pixels[yi+3]);\n\t\t\n\t\tr_sum += sumFactor * pr;\n\t\tg_sum += sumFactor * pg;\n\t\tb_sum += sumFactor * pb;\n\t\ta_sum += sumFactor * pa;\n\t\t\n\t\tstack = stackStart;\n\t\t\n\t\tfor( i = 0; i < radiusPlus1; i++ )\n\t\t{\n\t\t\tstack.r = pr;\n\t\t\tstack.g = pg;\n\t\t\tstack.b = pb;\n\t\t\tstack.a = pa;\n\t\t\tstack = stack.next;\n\t\t}\n\t\t\n\t\typ = width;\n\t\t\n\t\tfor( i = 1; i <= radius; i++ )\n\t\t{\n\t\t\tyi = ( yp + x ) << 2;\n\t\t\t\n\t\t\tr_sum += ( stack.r = ( pr = pixels[yi])) * ( rbs = radiusPlus1 - i );\n\t\t\tg_sum += ( stack.g = ( pg = pixels[yi+1])) * rbs;\n\t\t\tb_sum += ( stack.b = ( pb = pixels[yi+2])) * rbs;\n\t\t\ta_sum += ( stack.a = ( pa = pixels[yi+3])) * rbs;\n\t\t   \n\t\t\tr_in_sum += pr;\n\t\t\tg_in_sum += pg;\n\t\t\tb_in_sum += pb;\n\t\t\ta_in_sum += pa;\n\t\t\t\n\t\t\tstack = stack.next;\n\t\t\n\t\t\tif( i < heightMinus1 )\n\t\t\t{\n\t\t\t\typ += width;\n\t\t\t}\n\t\t}\n\t\t\n\t\tyi = x;\n\t\tstackIn = stackStart;\n\t\tstackOut = stackEnd;\n\t\tfor ( y = 0; y < height; y++ )\n\t\t{\n\t\t\tp = yi << 2;\n\t\t\tpixels[p+3] = pa = (a_sum * mul_sum) >> shg_sum;\n\t\t\tif ( pa > 0 )\n\t\t\t{\n\t\t\t\tpa = 255 / pa;\n\t\t\t\tpixels[p]   = ((r_sum * mul_sum) >> shg_sum ) * pa;\n\t\t\t\tpixels[p+1] = ((g_sum * mul_sum) >> shg_sum ) * pa;\n\t\t\t\tpixels[p+2] = ((b_sum * mul_sum) >> shg_sum ) * pa;\n\t\t\t} else {\n\t\t\t\tpixels[p] = pixels[p+1] = pixels[p+2] = 0;\n\t\t\t}\n\t\t\t\n\t\t\tr_sum -= r_out_sum;\n\t\t\tg_sum -= g_out_sum;\n\t\t\tb_sum -= b_out_sum;\n\t\t\ta_sum -= a_out_sum;\n\t\t   \n\t\t\tr_out_sum -= stackIn.r;\n\t\t\tg_out_sum -= stackIn.g;\n\t\t\tb_out_sum -= stackIn.b;\n\t\t\ta_out_sum -= stackIn.a;\n\t\t\t\n\t\t\tp = ( x + (( ( p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1 ) * width )) << 2;\n\t\t\t\n\t\t\tr_sum += ( r_in_sum += ( stackIn.r = pixels[p]));\n\t\t\tg_sum += ( g_in_sum += ( stackIn.g = pixels[p+1]));\n\t\t\tb_sum += ( b_in_sum += ( stackIn.b = pixels[p+2]));\n\t\t\ta_sum += ( a_in_sum += ( stackIn.a = pixels[p+3]));\n\t\t   \n\t\t\tstackIn = stackIn.next;\n\t\t\t\n\t\t\tr_out_sum += ( pr = stackOut.r );\n\t\t\tg_out_sum += ( pg = stackOut.g );\n\t\t\tb_out_sum += ( pb = stackOut.b );\n\t\t\ta_out_sum += ( pa = stackOut.a );\n\t\t\t\n\t\t\tr_in_sum -= pr;\n\t\t\tg_in_sum -= pg;\n\t\t\tb_in_sum -= pb;\n\t\t\ta_in_sum -= pa;\n\t\t\t\n\t\t\tstackOut = stackOut.next;\n\t\t\t\n\t\t\tyi += width;\n\t\t}\n\t}\n}\n\nfunction BlurStack()\n{\n\tthis.r = 0;\n\tthis.g = 0;\n\tthis.b = 0;\n\tthis.a = 0;\n\tthis.next = null;\n}\n\nmodule.exports = blur;\n},{}],142:[function(_dereq_,module,exports){\n/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.3.7\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Sat Jan 14 2017 07:23:18 GMT+0100 (CET)\n*/;\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(function(){\n      return factory(root, root.document)\n    })\n  } else if (typeof exports === 'object') {\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\n  } else {\n    root.SVG = factory(root, root.document)\n  }\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\n\n// The main wrapping element\nvar SVG = this.SVG = function(element) {\n  if (SVG.supported) {\n    element = new SVG.Doc(element)\n\n    if(!SVG.parser.draw)\n      SVG.prepare()\n\n    return element\n  }\n}\n\n// Default namespaces\nSVG.ns    = 'http://www.w3.org/2000/svg'\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\nSVG.xlink = 'http://www.w3.org/1999/xlink'\nSVG.svgjs = 'http://svgjs.com/svgjs'\n\n// Svg support test\nSVG.supported = (function() {\n  return !! document.createElementNS &&\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\n})()\n\n// Don't bother to continue if SVG is not supported\nif (!SVG.supported) return false\n\n// Element id sequence\nSVG.did  = 1000\n\n// Get next named element id\nSVG.eid = function(name) {\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\n}\n\n// Method for element creation\nSVG.create = function(name) {\n  // create element\n  var element = document.createElementNS(this.ns, name)\n\n  // apply unique id\n  element.setAttribute('id', this.eid(name))\n\n  return element\n}\n\n// Method for extending objects\nSVG.extend = function() {\n  var modules, methods, key, i\n\n  // Get list of modules\n  modules = [].slice.call(arguments)\n\n  // Get object with extensions\n  methods = modules.pop()\n\n  for (i = modules.length - 1; i >= 0; i--)\n    if (modules[i])\n      for (key in methods)\n        modules[i].prototype[key] = methods[key]\n\n  // Make sure SVG.Set inherits any newly added methods\n  if (SVG.Set && SVG.Set.inherit)\n    SVG.Set.inherit()\n}\n\n// Invent new element\nSVG.invent = function(config) {\n  // Create element initializer\n  var initializer = typeof config.create == 'function' ?\n    config.create :\n    function() {\n      this.constructor.call(this, SVG.create(config.create))\n    }\n\n  // Inherit prototype\n  if (config.inherit)\n    initializer.prototype = new config.inherit\n\n  // Extend with methods\n  if (config.extend)\n    SVG.extend(initializer, config.extend)\n\n  // Attach construct method to parent\n  if (config.construct)\n    SVG.extend(config.parent || SVG.Container, config.construct)\n\n  return initializer\n}\n\n// Adopt existing svg elements\nSVG.adopt = function(node) {\n  // check for presence of node\n  if (!node) return null\n\n  // make sure a node isn't already adopted\n  if (node.instance) return node.instance\n\n  // initialize variables\n  var element\n\n  // adopt with element-specific settings\n  if (node.nodeName == 'svg')\n    element = node.parentNode instanceof SVGElement ? new SVG.Nested : new SVG.Doc\n  else if (node.nodeName == 'linearGradient')\n    element = new SVG.Gradient('linear')\n  else if (node.nodeName == 'radialGradient')\n    element = new SVG.Gradient('radial')\n  else if (SVG[capitalize(node.nodeName)])\n    element = new SVG[capitalize(node.nodeName)]\n  else\n    element = new SVG.Element(node)\n\n  // ensure references\n  element.type  = node.nodeName\n  element.node  = node\n  node.instance = element\n\n  // SVG.Class specific preparations\n  if (element instanceof SVG.Doc)\n    element.namespace().defs()\n\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\n\n  return element\n}\n\n// Initialize parsing element\nSVG.prepare = function() {\n  // Select document body and create invisible svg element\n  var body = document.getElementsByTagName('body')[0]\n    , draw = (body ? new SVG.Doc(body) :  new SVG.Doc(document.documentElement).nested()).size(2, 0)\n\n  // Create parser object\n  SVG.parser = {\n    body: body || document.documentElement\n  , draw: draw.style('opacity:0;position:fixed;left:100%;top:100%;overflow:hidden')\n  , poly: draw.polyline().node\n  , path: draw.path().node\n  , native: SVG.create('svg')\n  }\n}\n\nSVG.parser = {\n  native: SVG.create('svg')\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  if(!SVG.parser.draw)\n    SVG.prepare()\n}, false)\n\n// Storage for regular expressions\nSVG.regex = {\n  // Parse unit value\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\n\n  // Parse hex value\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\n\n  // Parse rgb value\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\n\n  // Parse reference id\n, reference:        /#([a-z0-9\\-_]+)/i\n\n  // Parse matrix wrapper\n, matrix:           /matrix\\(|\\)/g\n\n  // Elements of a matrix\n, matrixElements:   /,*\\s+|,/\n\n  // Whitespace\n, whitespace:       /\\s/g\n\n  // Test hex value\n, isHex:            /^#[a-f0-9]{3,6}$/i\n\n  // Test rgb value\n, isRgb:            /^rgb\\(/\n\n  // Test css declaration\n, isCss:            /[^:]+:[^;]+;?/\n\n  // Test for blank string\n, isBlank:          /^(\\s+)?$/\n\n  // Test for numeric string\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\n\n  // Test for percent value\n, isPercent:        /^-?[\\d\\.]+%$/\n\n  // Test for image url\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\n\n  // The following regex are used to parse the d attribute of a path\n\n  // Replaces all negative exponents\n, negExp:           /e\\-/gi\n\n  // Replaces all comma\n, comma:            /,/g\n\n  // Replaces all hyphens\n, hyphen:           /\\-/g\n\n  // Replaces and tests for all path letters\n, pathLetters:      /[MLHVCSQTAZ]/gi\n\n  // yes we need this one, too\n, isPathLetter:     /[MLHVCSQTAZ]/i\n\n  // split at whitespaces\n, whitespaces:      /\\s+/\n\n  // matches X\n, X:                /X/g\n}\n\nSVG.utils = {\n  // Map function\n  map: function(array, block) {\n    var i\n      , il = array.length\n      , result = []\n\n    for (i = 0; i < il; i++)\n      result.push(block(array[i]))\n\n    return result\n  }\n\n  // Filter function\n, filter: function(array, block) {\n    var i\n      , il = array.length\n      , result = []\n\n    for (i = 0; i < il; i++)\n      if (block(array[i]))\n        result.push(array[i])\n\n    return result\n  }\n\n  // Degrees to radians\n, radians: function(d) {\n    return d % 360 * Math.PI / 180\n  }\n\n  // Radians to degrees\n, degrees: function(r) {\n    return r * 180 / Math.PI % 360\n  }\n\n, filterSVGElements: function(nodes) {\n    return this.filter( nodes, function(el) { return el instanceof SVGElement })\n  }\n\n}\n\nSVG.defaults = {\n  // Default attribute values\n  attrs: {\n    // fill and stroke\n    'fill-opacity':     1\n  , 'stroke-opacity':   1\n  , 'stroke-width':     0\n  , 'stroke-linejoin':  'miter'\n  , 'stroke-linecap':   'butt'\n  , fill:               '#000000'\n  , stroke:             '#000000'\n  , opacity:            1\n    // position\n  , x:                  0\n  , y:                  0\n  , cx:                 0\n  , cy:                 0\n    // size\n  , width:              0\n  , height:             0\n    // radius\n  , r:                  0\n  , rx:                 0\n  , ry:                 0\n    // gradient\n  , offset:             0\n  , 'stop-opacity':     1\n  , 'stop-color':       '#000000'\n    // text\n  , 'font-size':        16\n  , 'font-family':      'Helvetica, Arial, sans-serif'\n  , 'text-anchor':      'start'\n  }\n\n}\n// Module for color convertions\nSVG.Color = function(color) {\n  var match\n\n  // initialize defaults\n  this.r = 0\n  this.g = 0\n  this.b = 0\n\n  if(!color) return\n\n  // parse color\n  if (typeof color === 'string') {\n    if (SVG.regex.isRgb.test(color)) {\n      // get rgb values\n      match = SVG.regex.rgb.exec(color.replace(/\\s/g,''))\n\n      // parse numeric values\n      this.r = parseInt(match[1])\n      this.g = parseInt(match[2])\n      this.b = parseInt(match[3])\n\n    } else if (SVG.regex.isHex.test(color)) {\n      // get hex values\n      match = SVG.regex.hex.exec(fullHex(color))\n\n      // parse numeric values\n      this.r = parseInt(match[1], 16)\n      this.g = parseInt(match[2], 16)\n      this.b = parseInt(match[3], 16)\n\n    }\n\n  } else if (typeof color === 'object') {\n    this.r = color.r\n    this.g = color.g\n    this.b = color.b\n\n  }\n\n}\n\nSVG.extend(SVG.Color, {\n  // Default to hex conversion\n  toString: function() {\n    return this.toHex()\n  }\n  // Build hex value\n, toHex: function() {\n    return '#'\n      + compToHex(this.r)\n      + compToHex(this.g)\n      + compToHex(this.b)\n  }\n  // Build rgb value\n, toRgb: function() {\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\n  }\n  // Calculate true brightness\n, brightness: function() {\n    return (this.r / 255 * 0.30)\n         + (this.g / 255 * 0.59)\n         + (this.b / 255 * 0.11)\n  }\n  // Make color morphable\n, morph: function(color) {\n    this.destination = new SVG.Color(color)\n\n    return this\n  }\n  // Get morphed color at given position\n, at: function(pos) {\n    // make sure a destination is defined\n    if (!this.destination) return this\n\n    // normalise pos\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\n\n    // generate morphed color\n    return new SVG.Color({\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\n    })\n  }\n\n})\n\n// Testers\n\n// Test if given value is a color string\nSVG.Color.test = function(color) {\n  color += ''\n  return SVG.regex.isHex.test(color)\n      || SVG.regex.isRgb.test(color)\n}\n\n// Test if given value is a rgb object\nSVG.Color.isRgb = function(color) {\n  return color && typeof color.r == 'number'\n               && typeof color.g == 'number'\n               && typeof color.b == 'number'\n}\n\n// Test if given value is a color\nSVG.Color.isColor = function(color) {\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\n}\n// Module for array conversion\nSVG.Array = function(array, fallback) {\n  array = (array || []).valueOf()\n\n  // if array is empty and fallback is provided, use fallback\n  if (array.length == 0 && fallback)\n    array = fallback.valueOf()\n\n  // parse array\n  this.value = this.parse(array)\n}\n\nSVG.extend(SVG.Array, {\n  // Make array morphable\n  morph: function(array) {\n    this.destination = this.parse(array)\n\n    // normalize length of arrays\n    if (this.value.length != this.destination.length) {\n      var lastValue       = this.value[this.value.length - 1]\n        , lastDestination = this.destination[this.destination.length - 1]\n\n      while(this.value.length > this.destination.length)\n        this.destination.push(lastDestination)\n      while(this.value.length < this.destination.length)\n        this.value.push(lastValue)\n    }\n\n    return this\n  }\n  // Clean up any duplicate points\n, settle: function() {\n    // find all unique values\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\n      if (seen.indexOf(this.value[i]) == -1)\n        seen.push(this.value[i])\n\n    // set new value\n    return this.value = seen\n  }\n  // Get morphed array at given position\n, at: function(pos) {\n    // make sure a destination is defined\n    if (!this.destination) return this\n\n    // generate morphed array\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\n\n    return new SVG.Array(array)\n  }\n  // Convert array to string\n, toString: function() {\n    return this.value.join(' ')\n  }\n  // Real value\n, valueOf: function() {\n    return this.value\n  }\n  // Parse whitespace separated string\n, parse: function(array) {\n    array = array.valueOf()\n\n    // if already is an array, no need to parse it\n    if (Array.isArray(array)) return array\n\n    return this.split(array)\n  }\n  // Strip unnecessary whitespace\n, split: function(string) {\n    return string.trim().split(/\\s+/)\n  }\n  // Reverse array\n, reverse: function() {\n    this.value.reverse()\n\n    return this\n  }\n\n})\n// Poly points array\nSVG.PointArray = function(array, fallback) {\n  this.constructor.call(this, array, fallback || [[0,0]])\n}\n\n// Inherit from SVG.Array\nSVG.PointArray.prototype = new SVG.Array\n\nSVG.extend(SVG.PointArray, {\n  // Convert array to string\n  toString: function() {\n    // convert to a poly point string\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\n      array.push(this.value[i].join(','))\n\n    return array.join(' ')\n  }\n  // Convert array to line object\n, toLine: function() {\n    return {\n      x1: this.value[0][0]\n    , y1: this.value[0][1]\n    , x2: this.value[1][0]\n    , y2: this.value[1][1]\n    }\n  }\n  // Get morphed array at given position\n, at: function(pos) {\n    // make sure a destination is defined\n    if (!this.destination) return this\n\n    // generate morphed point string\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\n      array.push([\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\n      ])\n\n    return new SVG.PointArray(array)\n  }\n  // Parse point string\n, parse: function(array) {\n    var points = []\n\n    array = array.valueOf()\n\n    // if already is an array, no need to parse it\n    if (Array.isArray(array)) return array\n\n    // parse points\n    array = array.trim().split(/\\s+|,/)\n\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\n    if (array.length % 2 !== 0) array.pop()\n\n    // wrap points in two-tuples and parse points as floats\n    for(var i = 0, len = array.length; i < len; i = i + 2)\n      points.push([ parseFloat(array[i]), parseFloat(array[i+1]) ])\n\n    return points\n  }\n  // Move point string\n, move: function(x, y) {\n    var box = this.bbox()\n\n    // get relative offset\n    x -= box.x\n    y -= box.y\n\n    // move every point\n    if (!isNaN(x) && !isNaN(y))\n      for (var i = this.value.length - 1; i >= 0; i--)\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\n\n    return this\n  }\n  // Resize poly string\n, size: function(width, height) {\n    var i, box = this.bbox()\n\n    // recalculate position of all points according to new size\n    for (i = this.value.length - 1; i >= 0; i--) {\n      this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\n      this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\n    }\n\n    return this\n  }\n  // Get bounding box of points\n, bbox: function() {\n    SVG.parser.poly.setAttribute('points', this.toString())\n\n    return SVG.parser.poly.getBBox()\n  }\n\n})\n// Path points array\nSVG.PathArray = function(array, fallback) {\n  this.constructor.call(this, array, fallback || [['M', 0, 0]])\n}\n\n// Inherit from SVG.Array\nSVG.PathArray.prototype = new SVG.Array\n\nSVG.extend(SVG.PathArray, {\n  // Convert array to string\n  toString: function() {\n    return arrayToString(this.value)\n  }\n  // Move path string\n, move: function(x, y) {\n    // get bounding box of current situation\n    var box = this.bbox()\n\n    // get relative offset\n    x -= box.x\n    y -= box.y\n\n    if (!isNaN(x) && !isNaN(y)) {\n      // move every point\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\n        l = this.value[i][0]\n\n        if (l == 'M' || l == 'L' || l == 'T')  {\n          this.value[i][1] += x\n          this.value[i][2] += y\n\n        } else if (l == 'H')  {\n          this.value[i][1] += x\n\n        } else if (l == 'V')  {\n          this.value[i][1] += y\n\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\n          this.value[i][1] += x\n          this.value[i][2] += y\n          this.value[i][3] += x\n          this.value[i][4] += y\n\n          if (l == 'C')  {\n            this.value[i][5] += x\n            this.value[i][6] += y\n          }\n\n        } else if (l == 'A')  {\n          this.value[i][6] += x\n          this.value[i][7] += y\n        }\n\n      }\n    }\n\n    return this\n  }\n  // Resize path string\n, size: function(width, height) {\n    // get bounding box of current situation\n    var i, l, box = this.bbox()\n\n    // recalculate position of all points according to new size\n    for (i = this.value.length - 1; i >= 0; i--) {\n      l = this.value[i][0]\n\n      if (l == 'M' || l == 'L' || l == 'T')  {\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\n\n      } else if (l == 'H')  {\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\n\n      } else if (l == 'V')  {\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\n\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\n\n        if (l == 'C')  {\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\n        }\n\n      } else if (l == 'A')  {\n        // resize radii\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\n        this.value[i][2] = (this.value[i][2] * height) / box.height\n\n        // move position values\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\n      }\n\n    }\n\n    return this\n  }\n  // Test if the passed path array use the same path data commands as this path array\n, equalCommands: function(pathArray) {\n    var i, il, equalCommands\n\n    pathArray = new SVG.PathArray(pathArray)\n\n    equalCommands = this.value.length === pathArray.value.length\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\n    }\n\n    return equalCommands\n  }\n  // Make path array morphable\n, morph: function(pathArray) {\n    pathArray = new SVG.PathArray(pathArray)\n\n    if(this.equalCommands(pathArray)) {\n      this.destination = pathArray\n    } else {\n      this.destination = null\n    }\n\n    return this\n  }\n  // Get morphed path array at given position\n, at: function(pos) {\n    // make sure a destination is defined\n    if (!this.destination) return this\n\n    var sourceArray = this.value\n      , destinationArray = this.destination.value\n      , array = [], pathArray = new SVG.PathArray()\n      , i, il, j, jl\n\n    // Animate has specified in the SVG spec\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\n    for (i = 0, il = sourceArray.length; i < il; i++) {\n      array[i] = [sourceArray[i][0]]\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\n      }\n      // For the two flags of the elliptical arc command, the SVG spec say:\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\n      // Elliptical arc command as an array followed by corresponding indexes:\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n      //   0    1   2        3                 4             5      6  7\n      if(array[i][0] === 'A') {\n        array[i][4] = +(array[i][4] != 0)\n        array[i][5] = +(array[i][5] != 0)\n      }\n    }\n\n    // Directly modify the value of a path array, this is done this way for performance\n    pathArray.value = array\n    return pathArray\n  }\n  // Absolutize and parse path to array\n, parse: function(array) {\n    // if it's already a patharray, no need to parse it\n    if (array instanceof SVG.PathArray) return array.valueOf()\n\n    // prepare for parsing\n    var i, x0, y0, s, seg, arr\n      , x = 0\n      , y = 0\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7 }\n\n    if(typeof array == 'string'){\n\n      array = array\n        .replace(SVG.regex.negExp, 'X')         // replace all negative exponents with certain char\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\n        .replace(SVG.regex.hyphen, ' -')        // add space before hyphen\n        .replace(SVG.regex.comma, ' ')          // unify all spaces\n        .replace(SVG.regex.X, 'e-')             // add back the expoent\n        .trim()                                 // trim\n        .split(SVG.regex.whitespaces)           // split into array\n\n      // at this place there could be parts like ['3.124.854.32'] because we could not determine the point as seperator till now\n      // we fix this elements in the next loop\n      for(i = array.length; --i;){\n        if(array[i].indexOf('.') != array[i].lastIndexOf('.')){\n          var split = array[i].split('.') // split at the point\n          var first = [split.shift(), split.shift()].join('.') // join the first number together\n          array.splice.apply(array, [i, 1].concat(first, split.map(function(el){ return '.'+el }))) // add first and all other entries back to array\n        }\n      }\n\n    }else{\n      array = array.reduce(function(prev, curr){\n        return [].concat.apply(prev, curr)\n      }, [])\n    }\n\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\n\n    var arr = []\n\n    do{\n\n      // Test if we have a path letter\n      if(SVG.regex.isPathLetter.test(array[0])){\n        s = array[0]\n        array.shift()\n      // If last letter was a move command and we got no new, it defaults to [L]ine\n      }else if(s == 'M'){\n        s = 'L'\n      }else if(s == 'm'){\n        s = 'l'\n      }\n\n      // add path letter as first element\n      seg = [s.toUpperCase()]\n\n      // push all necessary parameters to segment\n      for(i = 0; i < paramCnt[seg[0]]; ++i){\n        seg.push(parseFloat(array.shift()))\n      }\n\n      // upper case\n      if(s == seg[0]){\n\n        if(s == 'M' || s == 'L' || s == 'C' || s == 'Q' || s == 'S' || s == 'T'){\n          x = seg[paramCnt[seg[0]]-1]\n          y = seg[paramCnt[seg[0]]]\n        }else if(s == 'V'){\n          y = seg[1]\n        }else if(s == 'H'){\n          x = seg[1]\n        }else if(s == 'A'){\n          x = seg[6]\n          y = seg[7]\n        }\n\n      // lower case\n      }else{\n\n        // convert relative to absolute values\n        if(s == 'm' || s == 'l' || s == 'c' || s == 's' || s == 'q' || s == 't'){\n\n          seg[1] += x\n          seg[2] += y\n\n          if(seg[3] != null){\n            seg[3] += x\n            seg[4] += y\n          }\n\n          if(seg[5] != null){\n            seg[5] += x\n            seg[6] += y\n          }\n\n          // move pointer\n          x = seg[paramCnt[seg[0]]-1]\n          y = seg[paramCnt[seg[0]]]\n\n        }else if(s == 'v'){\n          seg[1] += y\n          y = seg[1]\n        }else if(s == 'h'){\n          seg[1] += x\n          x = seg[1]\n        }else if(s == 'a'){\n          seg[6] += x\n          seg[7] += y\n          x = seg[6]\n          y = seg[7]\n        }\n\n      }\n\n      if(seg[0] == 'M'){\n        x0 = x\n        y0 = y\n      }\n\n      if(seg[0] == 'Z'){\n        x = x0\n        y = y0\n      }\n\n      arr.push(seg)\n\n    }while(array.length)\n\n    return arr\n\n  }\n  // Get bounding box of path\n, bbox: function() {\n    SVG.parser.path.setAttribute('d', this.toString())\n\n    return SVG.parser.path.getBBox()\n  }\n\n})\n\n// Module for unit convertions\nSVG.Number = SVG.invent({\n  // Initialize\n  create: function(value, unit) {\n    // initialize defaults\n    this.value = 0\n    this.unit  = unit || ''\n\n    // parse value\n    if (typeof value === 'number') {\n      // ensure a valid numeric value\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\n\n    } else if (typeof value === 'string') {\n      unit = value.match(SVG.regex.numberAndUnit)\n\n      if (unit) {\n        // make value numeric\n        this.value = parseFloat(unit[1])\n\n        // normalize\n        if (unit[5] == '%')\n          this.value /= 100\n        else if (unit[5] == 's')\n          this.value *= 1000\n\n        // store unit\n        this.unit = unit[5]\n      }\n\n    } else {\n      if (value instanceof SVG.Number) {\n        this.value = value.valueOf()\n        this.unit  = value.unit\n      }\n    }\n\n  }\n  // Add methods\n, extend: {\n    // Stringalize\n    toString: function() {\n      return (\n        this.unit == '%' ?\n          ~~(this.value * 1e8) / 1e6:\n        this.unit == 's' ?\n          this.value / 1e3 :\n          this.value\n      ) + this.unit\n    }\n  , toJSON: function() {\n      return this.toString()\n    }\n  , // Convert to primitive\n    valueOf: function() {\n      return this.value\n    }\n    // Add number\n  , plus: function(number) {\n      return new SVG.Number(this + new SVG.Number(number), this.unit)\n    }\n    // Subtract number\n  , minus: function(number) {\n      return this.plus(-new SVG.Number(number))\n    }\n    // Multiply number\n  , times: function(number) {\n      return new SVG.Number(this * new SVG.Number(number), this.unit)\n    }\n    // Divide number\n  , divide: function(number) {\n      return new SVG.Number(this / new SVG.Number(number), this.unit)\n    }\n    // Convert to different unit\n  , to: function(unit) {\n      var number = new SVG.Number(this)\n\n      if (typeof unit === 'string')\n        number.unit = unit\n\n      return number\n    }\n    // Make number morphable\n  , morph: function(number) {\n      this.destination = new SVG.Number(number)\n\n      return this\n    }\n    // Get morphed number at given position\n  , at: function(pos) {\n      // Make sure a destination is defined\n      if (!this.destination) return this\n\n      // Generate new morphed number\n      return new SVG.Number(this.destination)\n          .minus(this)\n          .times(pos)\n          .plus(this)\n    }\n\n  }\n})\n\nSVG.Element = SVG.invent({\n  // Initialize node\n  create: function(node) {\n    // make stroke value accessible dynamically\n    this._stroke = SVG.defaults.attrs.stroke\n\n    // initialize data object\n    this.dom = {}\n\n    // create circular reference\n    if (this.node = node) {\n      this.type = node.nodeName\n      this.node.instance = this\n\n      // store current attribute value\n      this._stroke = node.getAttribute('stroke') || this._stroke\n    }\n  }\n\n  // Add class methods\n, extend: {\n    // Move over x-axis\n    x: function(x) {\n      return this.attr('x', x)\n    }\n    // Move over y-axis\n  , y: function(y) {\n      return this.attr('y', y)\n    }\n    // Move by center over x-axis\n  , cx: function(x) {\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\n    }\n    // Move by center over y-axis\n  , cy: function(y) {\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\n    }\n    // Move element to given x and y values\n  , move: function(x, y) {\n      return this.x(x).y(y)\n    }\n    // Move element by its center\n  , center: function(x, y) {\n      return this.cx(x).cy(y)\n    }\n    // Set width of element\n  , width: function(width) {\n      return this.attr('width', width)\n    }\n    // Set height of element\n  , height: function(height) {\n      return this.attr('height', height)\n    }\n    // Set element size to given width and height\n  , size: function(width, height) {\n      var p = proportionalSize(this, width, height)\n\n      return this\n        .width(new SVG.Number(p.width))\n        .height(new SVG.Number(p.height))\n    }\n    // Clone element\n  , clone: function(parent) {\n      // clone element and assign new id\n      var clone = assignNewId(this.node.cloneNode(true))\n\n      // insert the clone in the given parent or after myself\n      if(parent) parent.add(clone)\n      else this.after(clone)\n\n      return clone\n    }\n    // Remove element\n  , remove: function() {\n      if (this.parent())\n        this.parent().removeElement(this)\n\n      return this\n    }\n    // Replace element\n  , replace: function(element) {\n      this.after(element).remove()\n\n      return element\n    }\n    // Add element to given container and return self\n  , addTo: function(parent) {\n      return parent.put(this)\n    }\n    // Add element to given container and return container\n  , putIn: function(parent) {\n      return parent.add(this)\n    }\n    // Get / set id\n  , id: function(id) {\n      return this.attr('id', id)\n    }\n    // Checks whether the given point inside the bounding box of the element\n  , inside: function(x, y) {\n      var box = this.bbox()\n\n      return x > box.x\n          && y > box.y\n          && x < box.x + box.width\n          && y < box.y + box.height\n    }\n    // Show element\n  , show: function() {\n      return this.style('display', '')\n    }\n    // Hide element\n  , hide: function() {\n      return this.style('display', 'none')\n    }\n    // Is element visible?\n  , visible: function() {\n      return this.style('display') != 'none'\n    }\n    // Return id on string conversion\n  , toString: function() {\n      return this.attr('id')\n    }\n    // Return array of classes on the node\n  , classes: function() {\n      var attr = this.attr('class')\n\n      return attr == null ? [] : attr.trim().split(/\\s+/)\n    }\n    // Return true if class exists on the node, false otherwise\n  , hasClass: function(name) {\n      return this.classes().indexOf(name) != -1\n    }\n    // Add class to the node\n  , addClass: function(name) {\n      if (!this.hasClass(name)) {\n        var array = this.classes()\n        array.push(name)\n        this.attr('class', array.join(' '))\n      }\n\n      return this\n    }\n    // Remove class from the node\n  , removeClass: function(name) {\n      if (this.hasClass(name)) {\n        this.attr('class', this.classes().filter(function(c) {\n          return c != name\n        }).join(' '))\n      }\n\n      return this\n    }\n    // Toggle the presence of a class on the node\n  , toggleClass: function(name) {\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\n    }\n    // Get referenced element form attribute value\n  , reference: function(attr) {\n      return SVG.get(this.attr(attr))\n    }\n    // Returns the parent element instance\n  , parent: function(type) {\n      var parent = this\n\n      // check for parent\n      if(!parent.node.parentNode) return null\n\n      // get parent element\n      parent = SVG.adopt(parent.node.parentNode)\n\n      if(!type) return parent\n\n      // loop trough ancestors if type is given\n      while(parent && parent.node instanceof SVGElement){\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\n        parent = SVG.adopt(parent.node.parentNode)\n      }\n    }\n    // Get parent document\n  , doc: function() {\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\n    }\n    // return array of all ancestors of given type up to the root svg\n  , parents: function(type) {\n      var parents = [], parent = this\n\n      do{\n        parent = parent.parent(type)\n        if(!parent || !parent.node) break\n\n        parents.push(parent)\n      } while(parent.parent)\n\n      return parents\n    }\n    // matches the element vs a css selector\n  , matches: function(selector){\n      return matches(this.node, selector)\n    }\n    // Returns the svg node to call native svg methods on it\n  , native: function() {\n      return this.node\n    }\n    // Import raw svg\n  , svg: function(svg) {\n      // create temporary holder\n      var well = document.createElement('svg')\n\n      // act as a setter if svg is given\n      if (svg && this instanceof SVG.Parent) {\n        // dump raw svg\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<(\\w+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\n\n        // transplant nodes\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\n          this.node.appendChild(well.firstChild.firstChild)\n\n      // otherwise act as a getter\n      } else {\n        // create a wrapping svg element in case of partial content\n        well.appendChild(svg = document.createElement('svg'))\n\n        // write svgjs data to the dom\n        this.writeDataToDom()\n\n        // insert a copy of this node\n        svg.appendChild(this.node.cloneNode(true))\n\n        // return target element\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\n      }\n\n      return this\n    }\n  // write svgjs data to the dom\n  , writeDataToDom: function() {\n\n      // dump variables recursively\n      if(this.each || this.lines){\n        var fn = this.each ? this : this.lines();\n        fn.each(function(){\n          this.writeDataToDom()\n        })\n      }\n\n      // remove previously set data\n      this.node.removeAttribute('svgjs:data')\n\n      if(Object.keys(this.dom).length)\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\n\n      return this\n    }\n  // set given data to the elements data property\n  , setData: function(o){\n      this.dom = o\n      return this\n    }\n  , is: function(obj){\n      return is(this, obj)\n    }\n  }\n})\n\nSVG.easing = {\n  '-': function(pos){return pos}\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\n}\n\nSVG.morph = function(pos){\n  return function(from, to) {\n    return new SVG.MorphObj(from, to).at(pos)\n  }\n}\n\nSVG.Situation = SVG.invent({\n\n  create: function(o){\n    this.init = false\n    this.reversed = false\n    this.reversing = false\n\n    this.duration = new SVG.Number(o.duration).valueOf()\n    this.delay = new SVG.Number(o.delay).valueOf()\n\n    this.start = +new Date() + this.delay\n    this.finish = this.start + this.duration\n    this.ease = o.ease\n\n    // this.loop is incremented from 0 to this.loops\n    // it is also incremented when in an infinite loop (when this.loops is true)\n    this.loop = 0\n    this.loops = false\n\n    this.animations = {\n      // functionToCall: [list of morphable objects]\n      // e.g. move: [SVG.Number, SVG.Number]\n    }\n\n    this.attrs = {\n      // holds all attributes which are not represented from a function svg.js provides\n      // e.g. someAttr: SVG.Number\n    }\n\n    this.styles = {\n      // holds all styles which should be animated\n      // e.g. fill-color: SVG.Color\n    }\n\n    this.transforms = [\n      // holds all transformations as transformation objects\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\n    ]\n\n    this.once = {\n      // functions to fire at a specific position\n      // e.g. \"0.5\": function foo(){}\n    }\n\n  }\n\n})\n\n\nSVG.FX = SVG.invent({\n\n  create: function(element) {\n    this._target = element\n    this.situations = []\n    this.active = false\n    this.situation = null\n    this.paused = false\n    this.lastPos = 0\n    this.pos = 0\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\n    this.absPos = 0\n    this._speed = 1\n  }\n\n, extend: {\n\n    /**\n     * sets or returns the target of this animation\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\n     * @param ease function || string Function which should be used for easing or easing keyword\n     * @param delay Number indicating the delay before the animation starts\n     * @return target || this\n     */\n    animate: function(o, ease, delay){\n\n      if(typeof o == 'object'){\n        ease = o.ease\n        delay = o.delay\n        o = o.duration\n      }\n\n      var situation = new SVG.Situation({\n        duration: o || 1000,\n        delay: delay || 0,\n        ease: SVG.easing[ease || '-'] || ease\n      })\n\n      this.queue(situation)\n\n      return this\n    }\n\n    /**\n     * sets a delay before the next element of the queue is called\n     * @param delay Duration of delay in milliseconds\n     * @return this.target()\n     */\n  , delay: function(delay){\n      // The delay is performed by an empty situation with its duration\n      // attribute set to the duration of the delay\n      var situation = new SVG.Situation({\n        duration: delay,\n        delay: 0,\n        ease: SVG.easing['-']\n      })\n\n      return this.queue(situation)\n    }\n\n    /**\n     * sets or returns the target of this animation\n     * @param null || target SVG.Element which should be set as new target\n     * @return target || this\n     */\n  , target: function(target){\n      if(target && target instanceof SVG.Element){\n        this._target = target\n        return this\n      }\n\n      return this._target\n    }\n\n    // returns the absolute position at a given time\n  , timeToAbsPos: function(timestamp){\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\n    }\n\n    // returns the timestamp from a given absolute positon\n  , absPosToTime: function(absPos){\n      return this.situation.duration/this._speed * absPos + this.situation.start\n    }\n\n    // starts the animationloop\n  , startAnimFrame: function(){\n      this.stopAnimFrame()\n      this.animationFrame = requestAnimationFrame(function(){ this.step() }.bind(this))\n    }\n\n    // cancels the animationframe\n  , stopAnimFrame: function(){\n      cancelAnimationFrame(this.animationFrame)\n    }\n\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\n  , start: function(){\n      // dont start if already started\n      if(!this.active && this.situation){\n        this.active = true\n        this.startCurrent()\n      }\n\n      return this\n    }\n\n    // start the current situation\n  , startCurrent: function(){\n      this.situation.start = +new Date + this.situation.delay/this._speed\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\n      return this.initAnimations().step()\n    }\n\n    /**\n     * adds a function / Situation to the animation queue\n     * @param fn function / situation to add\n     * @return this\n     */\n  , queue: function(fn){\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\n        this.situations.push(fn)\n\n      if(!this.situation) this.situation = this.situations.shift()\n\n      return this\n    }\n\n    /**\n     * pulls next element from the queue and execute it\n     * @return this\n     */\n  , dequeue: function(){\n      // stop current animation\n      this.situation && this.situation.stop && this.situation.stop()\n\n      // get next animation from queue\n      this.situation = this.situations.shift()\n\n      if(this.situation){\n        if(this.situation instanceof SVG.Situation) {\n          this.startCurrent()\n        } else {\n          // If it is not a SVG.Situation, then it is a function, we execute it\n          this.situation.call(this)\n        }\n      }\n\n      return this\n    }\n\n    // updates all animations to the current state of the element\n    // this is important when one property could be changed from another property\n  , initAnimations: function() {\n      var i\n      var s = this.situation\n\n      if(s.init) return this\n\n      for(i in s.animations){\n\n        if(i == 'viewbox'){\n          s.animations[i] = this.target().viewbox().morph(s.animations[i])\n        }else{\n\n          // TODO: this is not a clean clone of the array. We may have some unchecked references\n          s.animations[i].value = (i == 'plot' ? this.target().array().value : this.target()[i]())\n\n          // sometimes we get back an object and not the real value, fix this\n          if(s.animations[i].value.value){\n            s.animations[i].value = s.animations[i].value.value\n          }\n\n          if(s.animations[i].relative)\n            s.animations[i].destination.value = s.animations[i].destination.value + s.animations[i].value\n\n        }\n\n      }\n\n      for(i in s.attrs){\n        if(s.attrs[i] instanceof SVG.Color){\n          var color = new SVG.Color(this.target().attr(i))\n          s.attrs[i].r = color.r\n          s.attrs[i].g = color.g\n          s.attrs[i].b = color.b\n        }else{\n          s.attrs[i].value = this.target().attr(i)// + s.attrs[i].value\n        }\n      }\n\n      for(i in s.styles){\n        s.styles[i].value = this.target().style(i)\n      }\n\n      s.initialTransformation = this.target().matrixify()\n\n      s.init = true\n      return this\n    }\n  , clearQueue: function(){\n      this.situations = []\n      return this\n    }\n  , clearCurrent: function(){\n      this.situation = null\n      return this\n    }\n    /** stops the animation immediately\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\n     * @return this\n     */\n  , stop: function(jumpToEnd, clearQueue){\n      if(!this.active) this.start()\n\n      if(clearQueue){\n        this.clearQueue()\n      }\n\n      this.active = false\n\n      if(jumpToEnd && this.situation){\n        this.atEnd()\n      }\n\n      this.stopAnimFrame()\n\n      return this.clearCurrent()\n    }\n\n    /** resets the element to the state where the current element has started\n     * @return this\n     */\n  , reset: function(){\n      if(this.situation){\n        var temp = this.situation\n        this.stop()\n        this.situation = temp\n        this.atStart()\n      }\n      return this\n    }\n\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\n  , finish: function(){\n\n      this.stop(true, false)\n\n      while(this.dequeue().situation && this.stop(true, false));\n\n      this.clearQueue().clearCurrent()\n\n      return this\n    }\n\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\n  , atStart: function() {\n    return this.at(0, true)\n  }\n\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\n  , atEnd: function() {\n    if (this.situation.loops === true) {\n      // If in a infinite loop, we end the current iteration\n      return this.at(this.situation.loop+1, true)\n    } else if(typeof this.situation.loops == 'number') {\n      // If performing a finite number of loops, we go after all the loops\n      return this.at(this.situation.loops, true)\n    } else {\n      // If no loops, we just go at the end\n      return this.at(1, true)\n    }\n  }\n\n    // set the internal animation pointer to the specified position and updates the visualisation\n    // if isAbsPos is true, pos is treated as an absolute position\n  , at: function(pos, isAbsPos){\n      var durDivSpd = this.situation.duration/this._speed\n\n      this.absPos = pos\n      // If pos is not an absolute position, we convert it into one\n      if (!isAbsPos) {\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\n        this.absPos += this.situation.loop\n      }\n\n      this.situation.start = +new Date - this.absPos * durDivSpd\n      this.situation.finish = this.situation.start + durDivSpd\n\n      return this.step(true)\n    }\n\n    /**\n     * sets or returns the speed of the animations\n     * @param speed null || Number The new speed of the animations\n     * @return Number || this\n     */\n  , speed: function(speed){\n      if (speed === 0) return this.pause()\n\n      if (speed) {\n        this._speed = speed\n        // We use an absolute position here so that speed can affect the delay before the animation\n        return this.at(this.absPos, true)\n      } else return this._speed\n    }\n\n    // Make loopable\n  , loop: function(times, reverse) {\n      var c = this.last()\n\n      // store total loops\n      c.loops = (times != null) ? times : true\n      c.loop = 0\n\n      if(reverse) c.reversing = true\n      return this\n    }\n\n    // pauses the animation\n  , pause: function(){\n      this.paused = true\n      this.stopAnimFrame()\n\n      return this\n    }\n\n    // unpause the animation\n  , play: function(){\n      if(!this.paused) return this\n      this.paused = false\n      // We use an absolute position here so that the delay before the animation can be paused\n      return this.at(this.absPos, true)\n    }\n\n    /**\n     * toggle or set the direction of the animation\n     * true sets direction to backwards while false sets it to forwards\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\n     * @return this\n     */\n  , reverse: function(reversed){\n      var c = this.last()\n\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\n      else c.reversed = reversed\n\n      return this\n    }\n\n\n    /**\n     * returns a float from 0-1 indicating the progress of the current animation\n     * @param eased Boolean indicating whether the returned position should be eased or not\n     * @return number\n     */\n  , progress: function(easeIt){\n      return easeIt ? this.situation.ease(this.pos) : this.pos\n    }\n\n    /**\n     * adds a callback function which is called when the current animation is finished\n     * @param fn Function which should be executed as callback\n     * @return number\n     */\n  , after: function(fn){\n      var c = this.last()\n        , wrapper = function wrapper(e){\n            if(e.detail.situation == c){\n              fn.call(this, c)\n              this.off('finished.fx', wrapper) // prevent memory leak\n            }\n          }\n\n      this.target().on('finished.fx', wrapper)\n      return this\n    }\n\n    // adds a callback which is called whenever one animation step is performed\n  , during: function(fn){\n      var c = this.last()\n        , wrapper = function(e){\n            if(e.detail.situation == c){\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\n            }\n          }\n\n      // see above\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\n\n      return this.after(function(){\n        this.off('during.fx', wrapper)\n      })\n    }\n\n    // calls after ALL animations in the queue are finished\n  , afterAll: function(fn){\n      var wrapper = function wrapper(e){\n            fn.call(this)\n            this.off('allfinished.fx', wrapper)\n          }\n\n      // see above\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\n      return this\n    }\n\n    // calls on every animation step for all animations\n  , duringAll: function(fn){\n      var wrapper = function(e){\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\n          }\n\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\n\n      return this.afterAll(function(){\n        this.off('during.fx', wrapper)\n      })\n    }\n\n  , last: function(){\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\n    }\n\n    // adds one property to the animations\n  , add: function(method, args, type){\n      this.last()[type || 'animations'][method] = args\n      setTimeout(function(){this.start()}.bind(this), 0)\n      return this\n    }\n\n    /** perform one step of the animation\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\n     *  @return this\n     */\n  , step: function(ignoreTime){\n\n      // convert current time to an absolute position\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\n\n      // This part convert an absolute position to a position\n      if(this.situation.loops !== false) {\n        var absPos, absPosInt, lastLoop\n\n        // If the absolute position is below 0, we just treat it as if it was 0\n        absPos = Math.max(this.absPos, 0)\n        absPosInt = Math.floor(absPos)\n\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\n          this.pos = absPos - absPosInt\n          lastLoop = this.situation.loop\n          this.situation.loop = absPosInt\n        } else {\n          this.absPos = this.situation.loops\n          this.pos = 1\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\n          lastLoop = this.situation.loop - 1\n          this.situation.loop = this.situation.loops\n        }\n\n        if(this.situation.reversing) {\n          // Toggle reversed if an odd number of loops as occured since the last call of step\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\n        }\n\n      } else {\n        // If there are no loop, the absolute position must not be above 1\n        this.absPos = Math.min(this.absPos, 1)\n        this.pos = this.absPos\n      }\n\n      // while the absolute position can be below 0, the position must not be below 0\n      if(this.pos < 0) this.pos = 0\n\n      if(this.situation.reversed) this.pos = 1 - this.pos\n\n\n      // apply easing\n      var eased = this.situation.ease(this.pos)\n\n      // call once-callbacks\n      for(var i in this.situation.once){\n        if(i > this.lastPos && i <= eased){\n          this.situation.once[i].call(this.target(), this.pos, eased)\n          delete this.situation.once[i]\n        }\n      }\n\n      // fire during callback with position, eased position and current situation as parameter\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\n\n      // the user may call stop or finish in the during callback\n      // so make sure that we still have a valid situation\n      if(!this.situation){\n        return this\n      }\n\n      // apply the actual animation to every property\n      this.eachAt()\n\n      // do final code when situation is finished\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\n\n        // stop animation callback\n        this.stopAnimFrame()\n\n        // fire finished callback with current situation as parameter\n        this.target().fire('finished', {fx:this, situation: this.situation})\n\n        if(!this.situations.length){\n          this.target().fire('allfinished')\n          this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\n          this.active = false\n        }\n\n        // start next animation\n        if(this.active) this.dequeue()\n        else this.clearCurrent()\n\n      }else if(!this.paused && this.active){\n        // we continue animating when we are not at the end\n        this.startAnimFrame()\n      }\n\n      // save last eased position for once callback triggering\n      this.lastPos = eased\n      return this\n\n    }\n\n    // calculates the step for every property and calls block with it\n  , eachAt: function(){\n      var i, at, self = this, target = this.target(), s = this.situation\n\n      // apply animations which can be called trough a method\n      for(i in s.animations){\n\n        at = [].concat(s.animations[i]).map(function(el){\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\n        })\n\n        target[i].apply(target, at)\n\n      }\n\n      // apply animation which has to be applied with attr()\n      for(i in s.attrs){\n\n        at = [i].concat(s.attrs[i]).map(function(el){\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\n        })\n\n        target.attr.apply(target, at)\n\n      }\n\n      // apply animation which has to be applied with style()\n      for(i in s.styles){\n\n        at = [i].concat(s.styles[i]).map(function(el){\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\n        })\n\n        target.style.apply(target, at)\n\n      }\n\n      // animate initialTransformation which has to be chained\n      if(s.transforms.length){\n\n        // get initial initialTransformation\n        at = s.initialTransformation\n        for(i = 0, len = s.transforms.length; i < len; i++){\n\n          // get next transformation in chain\n          var a = s.transforms[i]\n\n          // multiply matrix directly\n          if(a instanceof SVG.Matrix){\n\n            if(a.relative){\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\n            }else{\n              at = at.morph(a).at(s.ease(this.pos))\n            }\n            continue\n          }\n\n          // when transformation is absolute we have to reset the needed transformation first\n          if(!a.relative)\n            a.undo(at.extract())\n\n          // and reapply it after\n          at = at.multiply(a.at(s.ease(this.pos)))\n\n        }\n\n        // set new matrix on element\n        target.matrix(at)\n      }\n\n      return this\n\n    }\n\n\n    // adds an once-callback which is called at a specific position and never again\n  , once: function(pos, fn, isEased){\n\n      if(!isEased)pos = this.situation.ease(pos)\n\n      this.situation.once[pos] = fn\n\n      return this\n    }\n\n  }\n\n, parent: SVG.Element\n\n  // Add method to parent elements\n, construct: {\n    // Get fx module or create a new one, then animate with given duration and ease\n    animate: function(o, ease, delay) {\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\n    }\n  , delay: function(delay){\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\n    }\n  , stop: function(jumpToEnd, clearQueue) {\n      if (this.fx)\n        this.fx.stop(jumpToEnd, clearQueue)\n\n      return this\n    }\n  , finish: function() {\n      if (this.fx)\n        this.fx.finish()\n\n      return this\n    }\n    // Pause current animation\n  , pause: function() {\n      if (this.fx)\n        this.fx.pause()\n\n      return this\n    }\n    // Play paused current animation\n  , play: function() {\n      if (this.fx)\n        this.fx.play()\n\n      return this\n    }\n    // Set/Get the speed of the animations\n  , speed: function(speed) {\n      if (this.fx)\n        if (speed == null)\n          return this.fx.speed()\n        else\n          this.fx.speed(speed)\n\n      return this\n    }\n  }\n\n})\n\n// MorphObj is used whenever no morphable object is given\nSVG.MorphObj = SVG.invent({\n\n  create: function(from, to){\n    // prepare color for morphing\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\n    // prepare number for morphing\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\n\n    // prepare for plain morphing\n    this.value = 0\n    this.destination = to\n  }\n\n, extend: {\n    at: function(pos, real){\n      return real < 1 ? this.value : this.destination\n    },\n\n    valueOf: function(){\n      return this.value\n    }\n  }\n\n})\n\nSVG.extend(SVG.FX, {\n  // Add animatable attributes\n  attr: function(a, v, relative) {\n    // apply attributes individually\n    if (typeof a == 'object') {\n      for (var key in a)\n        this.attr(key, a[key])\n\n    } else {\n      // the MorphObj takes care about the right function used\n      this.add(a, new SVG.MorphObj(null, v), 'attrs')\n    }\n\n    return this\n  }\n  // Add animatable styles\n, style: function(s, v) {\n    if (typeof s == 'object')\n      for (var key in s)\n        this.style(key, s[key])\n\n    else\n      this.add(s, new SVG.MorphObj(null, v), 'styles')\n\n    return this\n  }\n  // Animatable x-axis\n, x: function(x, relative) {\n    if(this.target() instanceof SVG.G){\n      this.transform({x:x}, relative)\n      return this\n    }\n\n    var num = new SVG.Number().morph(x)\n    num.relative = relative\n    return this.add('x', num)\n  }\n  // Animatable y-axis\n, y: function(y, relative) {\n    if(this.target() instanceof SVG.G){\n      this.transform({y:y}, relative)\n      return this\n    }\n\n    var num = new SVG.Number().morph(y)\n    num.relative = relative\n    return this.add('y', num)\n  }\n  // Animatable center x-axis\n, cx: function(x) {\n    return this.add('cx', new SVG.Number().morph(x))\n  }\n  // Animatable center y-axis\n, cy: function(y) {\n    return this.add('cy', new SVG.Number().morph(y))\n  }\n  // Add animatable move\n, move: function(x, y) {\n    return this.x(x).y(y)\n  }\n  // Add animatable center\n, center: function(x, y) {\n    return this.cx(x).cy(y)\n  }\n  // Add animatable size\n, size: function(width, height) {\n    if (this.target() instanceof SVG.Text) {\n      // animate font size for Text elements\n      this.attr('font-size', width)\n\n    } else {\n      // animate bbox based size for all other elements\n      var box\n\n      if(!width || !height){\n        box = this.target().bbox()\n      }\n\n      if(!width){\n        width = box.width / box.height  * height\n      }\n\n      if(!height){\n        height = box.height / box.width  * width\n      }\n\n      this.add('width' , new SVG.Number().morph(width))\n          .add('height', new SVG.Number().morph(height))\n\n    }\n\n    return this\n  }\n  // Add animatable plot\n, plot: function(p) {\n    return this.add('plot', this.target().array().morph(p))\n  }\n  // Add leading method\n, leading: function(value) {\n    return this.target().leading ?\n      this.add('leading', new SVG.Number().morph(value)) :\n      this\n  }\n  // Add animatable viewbox\n, viewbox: function(x, y, width, height) {\n    if (this.target() instanceof SVG.Container) {\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\n    }\n\n    return this\n  }\n, update: function(o) {\n    if (this.target() instanceof SVG.Stop) {\n      if (typeof o == 'number' || o instanceof SVG.Number) {\n        return this.update({\n          offset:  arguments[0]\n        , color:   arguments[1]\n        , opacity: arguments[2]\n        })\n      }\n\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\n      if (o.color   != null) this.attr('stop-color', o.color)\n      if (o.offset  != null) this.attr('offset', o.offset)\n    }\n\n    return this\n  }\n})\n\nSVG.BBox = SVG.invent({\n  // Initialize\n  create: function(element) {\n    // get values if element is given\n    if (element) {\n      var box\n\n      // yes this is ugly, but Firefox can be a bitch when it comes to elements that are not yet rendered\n      try {\n\n        // the element is NOT in the dom, throw error\n        if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\n\n        // find native bbox\n        box = element.node.getBBox()\n      } catch(e) {\n        if(element instanceof SVG.Shape){\n          var clone = element.clone(SVG.parser.draw).show()\n          box = clone.bbox()\n          clone.remove()\n        }else{\n          box = {\n            x:      element.node.clientLeft\n          , y:      element.node.clientTop\n          , width:  element.node.clientWidth\n          , height: element.node.clientHeight\n          }\n        }\n      }\n\n      // plain x and y\n      this.x = box.x\n      this.y = box.y\n\n      // plain width and height\n      this.width  = box.width\n      this.height = box.height\n    }\n\n    // add center, right and bottom\n    fullBox(this)\n  }\n\n  // Define Parent\n, parent: SVG.Element\n\n  // Constructor\n, construct: {\n    // Get bounding box\n    bbox: function() {\n      return new SVG.BBox(this)\n    }\n  }\n\n})\n\nSVG.TBox = SVG.invent({\n  // Initialize\n  create: function(element) {\n    // get values if element is given\n    if (element) {\n      var t   = element.ctm().extract()\n        , box = element.bbox()\n\n      // width and height including transformations\n      this.width  = box.width  * t.scaleX\n      this.height = box.height * t.scaleY\n\n      // x and y including transformations\n      this.x = box.x + t.x\n      this.y = box.y + t.y\n    }\n\n    // add center, right and bottom\n    fullBox(this)\n  }\n\n  // Define Parent\n, parent: SVG.Element\n\n  // Constructor\n, construct: {\n    // Get transformed bounding box\n    tbox: function() {\n      return new SVG.TBox(this)\n    }\n  }\n\n})\n\n\nSVG.RBox = SVG.invent({\n  // Initialize\n  create: function(element) {\n    if (element) {\n      var e    = element.doc().parent()\n        , box  = element.node.getBoundingClientRect()\n        , zoom = 1\n\n      // get screen offset\n      this.x = box.left\n      this.y = box.top\n\n      // subtract parent offset\n      this.x -= e.offsetLeft\n      this.y -= e.offsetTop\n\n      while (e = e.offsetParent) {\n        this.x -= e.offsetLeft\n        this.y -= e.offsetTop\n      }\n\n      // calculate cumulative zoom from svg documents\n      e = element\n      while (e.parent && (e = e.parent())) {\n        if (e.viewbox) {\n          zoom *= e.viewbox().zoom\n          this.x -= e.x() || 0\n          this.y -= e.y() || 0\n        }\n      }\n\n      // recalculate viewbox distortion\n      this.width  = box.width  /= zoom\n      this.height = box.height /= zoom\n    }\n\n    // add center, right and bottom\n    fullBox(this)\n\n    // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\n    this.x += window.pageXOffset\n    this.y += window.pageYOffset\n  }\n\n  // define Parent\n, parent: SVG.Element\n\n  // Constructor\n, construct: {\n    // Get rect box\n    rbox: function() {\n      return new SVG.RBox(this)\n    }\n  }\n\n})\n\n// Add universal merge method\n;[SVG.BBox, SVG.TBox, SVG.RBox].forEach(function(c) {\n\n  SVG.extend(c, {\n    // Merge rect box with another, return a new instance\n    merge: function(box) {\n      var b = new c()\n\n      // merge boxes\n      b.x      = Math.min(this.x, box.x)\n      b.y      = Math.min(this.y, box.y)\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\n\n      return fullBox(b)\n    }\n\n  })\n\n})\n\nSVG.Matrix = SVG.invent({\n  // Initialize\n  create: function(source) {\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\n\n    // ensure source as object\n    source = source instanceof SVG.Element ?\n      source.matrixify() :\n    typeof source === 'string' ?\n      stringToMatrix(source) :\n    arguments.length == 6 ?\n      arrayToMatrix([].slice.call(arguments)) :\n    typeof source === 'object' ?\n      source : base\n\n    // merge source\n    for (i = abcdef.length - 1; i >= 0; --i)\n      this[abcdef[i]] = source && typeof source[abcdef[i]] === 'number' ?\n        source[abcdef[i]] : base[abcdef[i]]\n  }\n\n  // Add methods\n, extend: {\n    // Extract individual transformations\n    extract: function() {\n      // find delta transform points\n      var px    = deltaTransformPoint(this, 0, 1)\n        , py    = deltaTransformPoint(this, 1, 0)\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\n\n      return {\n        // translation\n        x:        this.e\n      , y:        this.f\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\n        // skew\n      , skewX:    -skewX\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\n        // scale\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\n        // rotation\n      , rotation: skewX\n      , a: this.a\n      , b: this.b\n      , c: this.c\n      , d: this.d\n      , e: this.e\n      , f: this.f\n      , matrix: new SVG.Matrix(this)\n      }\n    }\n    // Clone matrix\n  , clone: function() {\n      return new SVG.Matrix(this)\n    }\n    // Morph one matrix into another\n  , morph: function(matrix) {\n      // store new destination\n      this.destination = new SVG.Matrix(matrix)\n\n      return this\n    }\n    // Get morphed matrix at a given position\n  , at: function(pos) {\n      // make sure a destination is defined\n      if (!this.destination) return this\n\n      // calculate morphed matrix at a given position\n      var matrix = new SVG.Matrix({\n        a: this.a + (this.destination.a - this.a) * pos\n      , b: this.b + (this.destination.b - this.b) * pos\n      , c: this.c + (this.destination.c - this.c) * pos\n      , d: this.d + (this.destination.d - this.d) * pos\n      , e: this.e + (this.destination.e - this.e) * pos\n      , f: this.f + (this.destination.f - this.f) * pos\n      })\n\n      // process parametric rotation if present\n      if (this.param && this.param.to) {\n        // calculate current parametric position\n        var param = {\n          rotation: this.param.from.rotation + (this.param.to.rotation - this.param.from.rotation) * pos\n        , cx:       this.param.from.cx\n        , cy:       this.param.from.cy\n        }\n\n        // rotate matrix\n        matrix = matrix.rotate(\n          (this.param.to.rotation - this.param.from.rotation * 2) * pos\n        , param.cx\n        , param.cy\n        )\n\n        // store current parametric values\n        matrix.param = param\n      }\n\n      return matrix\n    }\n    // Multiplies by given matrix\n  , multiply: function(matrix) {\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\n    }\n    // Inverses matrix\n  , inverse: function() {\n      return new SVG.Matrix(this.native().inverse())\n    }\n    // Translate matrix\n  , translate: function(x, y) {\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\n    }\n    // Scale matrix\n  , scale: function(x, y, cx, cy) {\n      // support uniformal scale\n      if (arguments.length == 1) {\n        y = x\n      } else if (arguments.length == 3) {\n        cy = cx\n        cx = y\n        y = x\n      }\n\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\n    }\n    // Rotate matrix\n  , rotate: function(r, cx, cy) {\n      // convert degrees to radians\n      r = SVG.utils.radians(r)\n\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\n    }\n    // Flip matrix on x or y, at a given offset\n  , flip: function(a, o) {\n      return a == 'x' ? this.scale(-1, 1, o, 0) : this.scale(1, -1, 0, o)\n    }\n    // Skew\n  , skew: function(x, y, cx, cy) {\n      // support uniformal skew\n      if (arguments.length == 1) {\n        y = x\n      } else if (arguments.length == 3) {\n        cy = cx\n        cx = y\n        y = x\n      }\n\n      // convert degrees to radians\n      x = SVG.utils.radians(x)\n      y = SVG.utils.radians(y)\n\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\n    }\n    // SkewX\n  , skewX: function(x, cx, cy) {\n      return this.skew(x, 0, cx, cy)\n    }\n    // SkewY\n  , skewY: function(y, cx, cy) {\n      return this.skew(0, y, cx, cy)\n    }\n    // Transform around a center point\n  , around: function(cx, cy, matrix) {\n      return this\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\n        .multiply(matrix)\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\n    }\n    // Convert to native SVGMatrix\n  , native: function() {\n      // create new matrix\n      var matrix = SVG.parser.native.createSVGMatrix()\n\n      // update with current values\n      for (var i = abcdef.length - 1; i >= 0; i--)\n        matrix[abcdef[i]] = this[abcdef[i]]\n\n      return matrix\n    }\n    // Convert matrix to string\n  , toString: function() {\n      return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\n    }\n  }\n\n  // Define parent\n, parent: SVG.Element\n\n  // Add parent method\n, construct: {\n    // Get current matrix\n    ctm: function() {\n      return new SVG.Matrix(this.node.getCTM())\n    },\n    // Get current screen matrix\n    screenCTM: function() {\n      return new SVG.Matrix(this.node.getScreenCTM())\n    }\n\n  }\n\n})\n\nSVG.Point = SVG.invent({\n  // Initialize\n  create: function(x,y) {\n    var i, source, base = {x:0, y:0}\n\n    // ensure source as object\n    source = Array.isArray(x) ?\n      {x:x[0], y:x[1]} :\n    typeof x === 'object' ?\n      {x:x.x, y:x.y} :\n    x != null ?\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\n\n    // merge source\n    this.x = source.x\n    this.y = source.y\n  }\n\n  // Add methods\n, extend: {\n    // Clone point\n    clone: function() {\n      return new SVG.Point(this)\n    }\n    // Morph one point into another\n  , morph: function(x, y) {\n      // store new destination\n      this.destination = new SVG.Point(x, y)\n\n      return this\n    }\n    // Get morphed point at a given position\n  , at: function(pos) {\n      // make sure a destination is defined\n      if (!this.destination) return this\n\n      // calculate morphed matrix at a given position\n      var point = new SVG.Point({\n        x: this.x + (this.destination.x - this.x) * pos\n      , y: this.y + (this.destination.y - this.y) * pos\n      })\n\n      return point\n    }\n    // Convert to native SVGPoint\n  , native: function() {\n      // create new point\n      var point = SVG.parser.native.createSVGPoint()\n\n      // update with current values\n      point.x = this.x\n      point.y = this.y\n\n      return point\n    }\n    // transform point with matrix\n  , transform: function(matrix) {\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\n    }\n\n  }\n\n})\n\nSVG.extend(SVG.Element, {\n\n  // Get point\n  point: function(x, y) {\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\n  }\n\n})\n\nSVG.extend(SVG.Element, {\n  // Set svg element attribute\n  attr: function(a, v, n) {\n    // act as full getter\n    if (a == null) {\n      // get an object of attributes\n      a = {}\n      v = this.node.attributes\n      for (n = v.length - 1; n >= 0; n--)\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\n\n      return a\n\n    } else if (typeof a == 'object') {\n      // apply every attribute individually if an object is passed\n      for (v in a) this.attr(v, a[v])\n\n    } else if (v === null) {\n        // remove value\n        this.node.removeAttribute(a)\n\n    } else if (v == null) {\n      // act as a getter if the first and only argument is not an object\n      v = this.node.getAttribute(a)\n      return v == null ?\n        SVG.defaults.attrs[a] :\n      SVG.regex.isNumber.test(v) ?\n        parseFloat(v) : v\n\n    } else {\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\n      if (a == 'stroke-width')\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\n      else if (a == 'stroke')\n        this._stroke = v\n\n      // convert image fill and stroke to patterns\n      if (a == 'fill' || a == 'stroke') {\n        if (SVG.regex.isImage.test(v))\n          v = this.doc().defs().image(v, 0, 0)\n\n        if (v instanceof SVG.Image)\n          v = this.doc().defs().pattern(0, 0, function() {\n            this.add(v)\n          })\n      }\n\n      // ensure correct numeric values (also accepts NaN and Infinity)\n      if (typeof v === 'number')\n        v = new SVG.Number(v)\n\n      // ensure full hex color\n      else if (SVG.Color.isColor(v))\n        v = new SVG.Color(v)\n\n      // parse array values\n      else if (Array.isArray(v))\n        v = new SVG.Array(v)\n\n      // store parametric transformation values locally\n      else if (v instanceof SVG.Matrix && v.param)\n        this.param = v.param\n\n      // if the passed attribute is leading...\n      if (a == 'leading') {\n        // ... call the leading method instead\n        if (this.leading)\n          this.leading(v)\n      } else {\n        // set given attribute on node\n        typeof n === 'string' ?\n          this.node.setAttributeNS(n, a, v.toString()) :\n          this.node.setAttribute(a, v.toString())\n      }\n\n      // rebuild if required\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\n        this.rebuild(a, v)\n    }\n\n    return this\n  }\n})\nSVG.extend(SVG.Element, {\n  // Add transformations\n  transform: function(o, relative) {\n    // get target in case of the fx module, otherwise reference this\n    var target = this\n      , matrix\n\n    // act as a getter\n    if (typeof o !== 'object') {\n      // get current matrix\n      matrix = new SVG.Matrix(target).extract()\n\n      return typeof o === 'string' ? matrix[o] : matrix\n    }\n\n    // get current matrix\n    matrix = new SVG.Matrix(target)\n\n    // ensure relative flag\n    relative = !!relative || !!o.relative\n\n    // act on matrix\n    if (o.a != null) {\n      matrix = relative ?\n        // relative\n        matrix.multiply(new SVG.Matrix(o)) :\n        // absolute\n        new SVG.Matrix(o)\n\n    // act on rotation\n    } else if (o.rotation != null) {\n      // ensure centre point\n      ensureCentre(o, target)\n\n      // apply transformation\n      matrix = relative ?\n        // relative\n        matrix.rotate(o.rotation, o.cx, o.cy) :\n        // absolute\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\n\n    // act on scale\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\n      // ensure centre point\n      ensureCentre(o, target)\n\n      // ensure scale values on both axes\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\n\n      if (!relative) {\n        // absolute; multiply inversed values\n        var e = matrix.extract()\n        o.scaleX = o.scaleX * 1 / e.scaleX\n        o.scaleY = o.scaleY * 1 / e.scaleY\n      }\n\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\n\n    // act on skew\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\n      // ensure centre point\n      ensureCentre(o, target)\n\n      // ensure skew values on both axes\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\n\n      if (!relative) {\n        // absolute; reset skew values\n        var e = matrix.extract()\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\n      }\n\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\n\n    // act on flip\n    } else if (o.flip) {\n      matrix = matrix.flip(\n        o.flip\n      , o.offset == null ? target.bbox()['c' + o.flip] : o.offset\n      )\n\n    // act on translate\n    } else if (o.x != null || o.y != null) {\n      if (relative) {\n        // relative\n        matrix = matrix.translate(o.x, o.y)\n      } else {\n        // absolute\n        if (o.x != null) matrix.e = o.x\n        if (o.y != null) matrix.f = o.y\n      }\n    }\n\n    return this.attr('transform', matrix)\n  }\n})\n\nSVG.extend(SVG.FX, {\n  transform: function(o, relative) {\n    // get target in case of the fx module, otherwise reference this\n    var target = this.target()\n      , matrix\n\n    // act as a getter\n    if (typeof o !== 'object') {\n      // get current matrix\n      matrix = new SVG.Matrix(target).extract()\n\n      return typeof o === 'string' ? matrix[o] : matrix\n    }\n\n    // ensure relative flag\n    relative = !!relative || !!o.relative\n\n    // act on matrix\n    if (o.a != null) {\n      matrix = new SVG.Matrix(o)\n\n    // act on rotation\n    } else if (o.rotation != null) {\n      // ensure centre point\n      ensureCentre(o, target)\n\n      // apply transformation\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\n\n    // act on scale\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\n      // ensure centre point\n      ensureCentre(o, target)\n\n      // ensure scale values on both axes\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\n\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\n\n    // act on skew\n    } else if (o.skewX != null || o.skewY != null) {\n      // ensure centre point\n      ensureCentre(o, target)\n\n      // ensure skew values on both axes\n      o.skewX = o.skewX != null ? o.skewX : 0\n      o.skewY = o.skewY != null ? o.skewY : 0\n\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\n\n    // act on flip\n    } else if (o.flip) {\n      matrix = new SVG.Matrix().morph(new SVG.Matrix().flip(\n        o.flip\n      , o.offset == null ? target.bbox()['c' + o.flip] : o.offset\n      ))\n\n    // act on translate\n    } else if (o.x != null || o.y != null) {\n      matrix = new SVG.Translate(o.x, o.y)\n    }\n\n    if(!matrix) return this\n\n    matrix.relative = relative\n\n    this.last().transforms.push(matrix)\n\n    setTimeout(function(){this.start()}.bind(this), 0)\n\n    return this\n  }\n})\n\nSVG.extend(SVG.Element, {\n  // Reset all transformations\n  untransform: function() {\n    return this.attr('transform', null)\n  },\n  // merge the whole transformation chain into one matrix and returns it\n  matrixify: function() {\n\n    var matrix = (this.attr('transform') || '')\n      // split transformations\n      .split(/\\)\\s*,?\\s*/).slice(0,-1).map(function(str){\n        // generate key => value pairs\n        var kv = str.trim().split('(')\n        return [kv[0], kv[1].split(SVG.regex.matrixElements).map(function(str){ return parseFloat(str) })]\n      })\n      // calculate every transformation into one matrix\n      .reduce(function(matrix, transform){\n\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\n        return matrix[transform[0]].apply(matrix, transform[1])\n\n      }, new SVG.Matrix())\n\n    return matrix\n  },\n  // add an element to another parent without changing the visual representation on the screen\n  toParent: function(parent) {\n    if(this == parent) return this\n    var ctm = this.screenCTM()\n    var temp = parent.rect(1,1)\n    var pCtm = temp.screenCTM().inverse()\n    temp.remove()\n\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\n\n    return this\n  },\n  // same as above with parent equals root-svg\n  toDoc: function() {\n    return this.toParent(this.doc())\n  }\n\n})\n\nSVG.Transformation = SVG.invent({\n\n  create: function(source, inversed){\n\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\n      return this.create([].slice.call(arguments))\n    }\n\n    if(typeof source == 'object'){\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\n        this[this.arguments[i]] = source[this.arguments[i]]\n      }\n    }\n\n    if(Array.isArray(source)){\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\n        this[this.arguments[i]] = source[i]\n      }\n    }\n\n    this.inversed = false\n\n    if(inversed === true){\n      this.inversed = true\n    }\n\n  }\n\n, extend: {\n\n    at: function(pos){\n\n      var params = []\n\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\n        params.push(this[this.arguments[i]])\n      }\n\n      var m = this._undo || new SVG.Matrix()\n\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\n\n      return this.inversed ? m.inverse() : m\n\n    }\n\n  , undo: function(o){\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\n      }\n\n      // The method SVG.Matrix.extract which was used before calling this\n      // method to obtain a value for the parameter o doesn't return a cx and\n      // a cy so we use the ones that were provided to this object at its creation\n      o.cx = this.cx\n      o.cy = this.cy\n\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\n\n      return this\n    }\n\n  }\n\n})\n\nSVG.Translate = SVG.invent({\n\n  parent: SVG.Matrix\n, inherit: SVG.Transformation\n\n, create: function(source, inversed){\n    if(typeof source == 'object') this.constructor.call(this, source, inversed)\n    else this.constructor.call(this, [].slice.call(arguments))\n  }\n\n, extend: {\n    arguments: ['transformedX', 'transformedY']\n  , method: 'translate'\n  }\n\n})\n\nSVG.Rotate = SVG.invent({\n\n  parent: SVG.Matrix\n, inherit: SVG.Transformation\n\n, create: function(source, inversed){\n    if(typeof source == 'object') this.constructor.call(this, source, inversed)\n    else this.constructor.call(this, [].slice.call(arguments))\n  }\n\n, extend: {\n    arguments: ['rotation', 'cx', 'cy']\n  , method: 'rotate'\n  , at: function(pos){\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\n      return this.inversed ? m.inverse() : m\n    }\n  , undo: function(o){\n      this._undo = o\n    }\n  }\n\n})\n\nSVG.Scale = SVG.invent({\n\n  parent: SVG.Matrix\n, inherit: SVG.Transformation\n\n, create: function(source, inversed){\n    if(typeof source == 'object') this.constructor.call(this, source, inversed)\n    else this.constructor.call(this, [].slice.call(arguments))\n  }\n\n, extend: {\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\n  , method: 'scale'\n  }\n\n})\n\nSVG.Skew = SVG.invent({\n\n  parent: SVG.Matrix\n, inherit: SVG.Transformation\n\n, create: function(source, inversed){\n    if(typeof source == 'object') this.constructor.call(this, source, inversed)\n    else this.constructor.call(this, [].slice.call(arguments))\n  }\n\n, extend: {\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\n  , method: 'skew'\n  }\n\n})\n\nSVG.extend(SVG.Element, {\n  // Dynamic style generator\n  style: function(s, v) {\n    if (arguments.length == 0) {\n      // get full style\n      return this.node.style.cssText || ''\n\n    } else if (arguments.length < 2) {\n      // apply every style individually if an object is passed\n      if (typeof s == 'object') {\n        for (v in s) this.style(v, s[v])\n\n      } else if (SVG.regex.isCss.test(s)) {\n        // parse css string\n        s = s.split(';')\n\n        // apply every definition individually\n        for (var i = 0; i < s.length; i++) {\n          v = s[i].split(':')\n          this.style(v[0].replace(/\\s+/g, ''), v[1])\n        }\n      } else {\n        // act as a getter if the first and only argument is not an object\n        return this.node.style[camelCase(s)]\n      }\n\n    } else {\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\n    }\n\n    return this\n  }\n})\nSVG.Parent = SVG.invent({\n  // Initialize node\n  create: function(element) {\n    this.constructor.call(this, element)\n  }\n\n  // Inherit from\n, inherit: SVG.Element\n\n  // Add class methods\n, extend: {\n    // Returns all child elements\n    children: function() {\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\n        return SVG.adopt(node)\n      })\n    }\n    // Add given element at a position\n  , add: function(element, i) {\n      if (i == null)\n        this.node.appendChild(element.node)\n      else if (element.node != this.node.childNodes[i])\n        this.node.insertBefore(element.node, this.node.childNodes[i])\n\n      return this\n    }\n    // Basically does the same as `add()` but returns the added element instead\n  , put: function(element, i) {\n      this.add(element, i)\n      return element\n    }\n    // Checks if the given element is a child\n  , has: function(element) {\n      return this.index(element) >= 0\n    }\n    // Gets index of given element\n  , index: function(element) {\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\n    }\n    // Get a element at the given index\n  , get: function(i) {\n      return SVG.adopt(this.node.childNodes[i])\n    }\n    // Get first child\n  , first: function() {\n      return this.get(0)\n    }\n    // Get the last child\n  , last: function() {\n      return this.get(this.node.childNodes.length - 1)\n    }\n    // Iterates over all children and invokes a given block\n  , each: function(block, deep) {\n      var i, il\n        , children = this.children()\n\n      for (i = 0, il = children.length; i < il; i++) {\n        if (children[i] instanceof SVG.Element)\n          block.apply(children[i], [i, children])\n\n        if (deep && (children[i] instanceof SVG.Container))\n          children[i].each(block, deep)\n      }\n\n      return this\n    }\n    // Remove a given child\n  , removeElement: function(element) {\n      this.node.removeChild(element.node)\n\n      return this\n    }\n    // Remove all elements in this container\n  , clear: function() {\n      // remove children\n      while(this.node.hasChildNodes())\n        this.node.removeChild(this.node.lastChild)\n\n      // remove defs reference\n      delete this._defs\n\n      return this\n    }\n  , // Get defs\n    defs: function() {\n      return this.doc().defs()\n    }\n  }\n\n})\n\nSVG.extend(SVG.Parent, {\n\n  ungroup: function(parent, depth) {\n    if(depth === 0 || this instanceof SVG.Defs) return this\n\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\n    depth = depth || Infinity\n\n    this.each(function(){\n      if(this instanceof SVG.Defs) return this\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\n      return this.toParent(parent)\n    })\n\n    this.node.firstChild || this.remove()\n\n    return this\n  },\n\n  flatten: function(parent, depth) {\n    return this.ungroup(parent, depth)\n  }\n\n})\nSVG.Container = SVG.invent({\n  // Initialize node\n  create: function(element) {\n    this.constructor.call(this, element)\n  }\n\n  // Inherit from\n, inherit: SVG.Parent\n\n})\n\nSVG.ViewBox = SVG.invent({\n\n  create: function(source) {\n    var i, base = [0, 0, 0, 0]\n\n    var x, y, width, height, box, view, we, he\n      , wm   = 1 // width multiplier\n      , hm   = 1 // height multiplier\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\n\n    if(source instanceof SVG.Element){\n\n      we = source\n      he = source\n      view = (source.attr('viewBox') || '').match(reg)\n      box = source.bbox\n\n      // get dimensions of current node\n      width  = new SVG.Number(source.width())\n      height = new SVG.Number(source.height())\n\n      // find nearest non-percentual dimensions\n      while (width.unit == '%') {\n        wm *= width.value\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\n        we = we.parent()\n      }\n      while (height.unit == '%') {\n        hm *= height.value\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\n        he = he.parent()\n      }\n\n      // ensure defaults\n      this.x      = 0\n      this.y      = 0\n      this.width  = width  * wm\n      this.height = height * hm\n      this.zoom   = 1\n\n      if (view) {\n        // get width and height from viewbox\n        x      = parseFloat(view[0])\n        y      = parseFloat(view[1])\n        width  = parseFloat(view[2])\n        height = parseFloat(view[3])\n\n        // calculate zoom accoring to viewbox\n        this.zoom = ((this.width / this.height) > (width / height)) ?\n          this.height / height :\n          this.width  / width\n\n        // calculate real pixel dimensions on parent SVG.Doc element\n        this.x      = x\n        this.y      = y\n        this.width  = width\n        this.height = height\n\n      }\n\n    }else{\n\n      // ensure source as object\n      source = typeof source === 'string' ?\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\n      Array.isArray(source) ?\n        source :\n      typeof source == 'object' ?\n        [source.x, source.y, source.width, source.height] :\n      arguments.length == 4 ?\n        [].slice.call(arguments) :\n        base\n\n      this.x = source[0]\n      this.y = source[1]\n      this.width = source[2]\n      this.height = source[3]\n    }\n\n\n  }\n\n, extend: {\n\n    toString: function() {\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\n    }\n  , morph: function(v){\n\n      var v = arguments.length == 1 ?\n        [v.x, v.y, v.width, v.height] :\n        [].slice.call(arguments)\n\n      this.destination = new SVG.ViewBox(v)\n\n      return this\n\n    }\n\n  , at: function(pos) {\n\n    if(!this.destination) return this\n\n    return new SVG.ViewBox([\n        this.x + (this.destination.x - this.x) * pos\n      , this.y + (this.destination.y - this.y) * pos\n      , this.width + (this.destination.width - this.width) * pos\n      , this.height + (this.destination.height - this.height) * pos\n    ])\n\n    }\n\n  }\n\n  // Define parent\n, parent: SVG.Container\n\n  // Add parent method\n, construct: {\n\n    // get/set viewbox\n    viewbox: function(v) {\n      if (arguments.length == 0)\n        // act as a getter if there are no arguments\n        return new SVG.ViewBox(this)\n\n      // otherwise act as a setter\n      v = arguments.length == 1 ?\n        [v.x, v.y, v.width, v.height] :\n        [].slice.call(arguments)\n\n      return this.attr('viewBox', v)\n    }\n\n  }\n\n})\n// Add events to elements\n;[  'click'\n  , 'dblclick'\n  , 'mousedown'\n  , 'mouseup'\n  , 'mouseover'\n  , 'mouseout'\n  , 'mousemove'\n  // , 'mouseenter' -> not supported by IE\n  // , 'mouseleave' -> not supported by IE\n  , 'touchstart'\n  , 'touchmove'\n  , 'touchleave'\n  , 'touchend'\n  , 'touchcancel' ].forEach(function(event) {\n\n  // add event to SVG.Element\n  SVG.Element.prototype[event] = function(f) {\n    var self = this\n\n    // bind event to element rather than element node\n    this.node['on' + event] = typeof f == 'function' ?\n      function() { return f.apply(self, arguments) } : null\n\n    return this\n  }\n\n})\n\n// Initialize listeners stack\nSVG.listeners = []\nSVG.handlerMap = []\nSVG.listenerId = 0\n\n// Add event binder in the SVG namespace\nSVG.on = function(node, event, listener, binding) {\n  // create listener, get object-index\n  var l     = listener.bind(binding || node.instance || node)\n    , index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1\n    , ev    = event.split('.')[0]\n    , ns    = event.split('.')[1] || '*'\n\n\n  // ensure valid object\n  SVG.listeners[index]         = SVG.listeners[index]         || {}\n  SVG.listeners[index][ev]     = SVG.listeners[index][ev]     || {}\n  SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {}\n\n  if(!listener._svgjsListenerId)\n    listener._svgjsListenerId = ++SVG.listenerId\n\n  // reference listener\n  SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l\n\n  // add listener\n  node.addEventListener(ev, l, false)\n}\n\n// Add event unbinder in the SVG namespace\nSVG.off = function(node, event, listener) {\n  var index = SVG.handlerMap.indexOf(node)\n    , ev    = event && event.split('.')[0]\n    , ns    = event && event.split('.')[1]\n\n  if(index == -1) return\n\n  if (listener) {\n    if(typeof listener == 'function') listener = listener._svgjsListenerId\n    if(!listener) return\n\n    // remove listener reference\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\n      // remove listener\n      node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false)\n\n      delete SVG.listeners[index][ev][ns || '*'][listener]\n    }\n\n  } else if (ns && ev) {\n    // remove all listeners for a namespaced event\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\n      for (listener in SVG.listeners[index][ev][ns])\n        SVG.off(node, [ev, ns].join('.'), listener)\n\n      delete SVG.listeners[index][ev][ns]\n    }\n\n  } else if (ns){\n    // remove all listeners for a specific namespace\n    for(event in SVG.listeners[index]){\n        for(namespace in SVG.listeners[index][event]){\n            if(ns === namespace){\n                SVG.off(node, [event, ns].join('.'))\n            }\n        }\n    }\n\n  } else if (ev) {\n    // remove all listeners for the event\n    if (SVG.listeners[index][ev]) {\n      for (namespace in SVG.listeners[index][ev])\n        SVG.off(node, [ev, namespace].join('.'))\n\n      delete SVG.listeners[index][ev]\n    }\n\n  } else {\n    // remove all listeners on a given node\n    for (event in SVG.listeners[index])\n      SVG.off(node, event)\n\n    delete SVG.listeners[index]\n\n  }\n}\n\n//\nSVG.extend(SVG.Element, {\n  // Bind given event to listener\n  on: function(event, listener, binding) {\n    SVG.on(this.node, event, listener, binding)\n\n    return this\n  }\n  // Unbind event from listener\n, off: function(event, listener) {\n    SVG.off(this.node, event, listener)\n\n    return this\n  }\n  // Fire given event\n, fire: function(event, data) {\n\n    // Dispatch event\n    if(event instanceof Event){\n        this.node.dispatchEvent(event)\n    }else{\n        this.node.dispatchEvent(new CustomEvent(event, {detail:data}))\n    }\n\n    return this\n  }\n})\n\nSVG.Defs = SVG.invent({\n  // Initialize node\n  create: 'defs'\n\n  // Inherit from\n, inherit: SVG.Container\n\n})\nSVG.G = SVG.invent({\n  // Initialize node\n  create: 'g'\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Move over x-axis\n    x: function(x) {\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\n    }\n    // Move over y-axis\n  , y: function(y) {\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\n    }\n    // Move by center over x-axis\n  , cx: function(x) {\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\n    }\n    // Move by center over y-axis\n  , cy: function(y) {\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\n    }\n  , gbox: function() {\n\n      var bbox  = this.bbox()\n        , trans = this.transform()\n\n      bbox.x  += trans.x\n      bbox.x2 += trans.x\n      bbox.cx += trans.x\n\n      bbox.y  += trans.y\n      bbox.y2 += trans.y\n      bbox.cy += trans.y\n\n      return bbox\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create a group element\n    group: function() {\n      return this.put(new SVG.G)\n    }\n  }\n})\n\n// ### This module adds backward / forward functionality to elements.\n\n//\nSVG.extend(SVG.Element, {\n  // Get all siblings, including myself\n  siblings: function() {\n    return this.parent().children()\n  }\n  // Get the curent position siblings\n, position: function() {\n    return this.parent().index(this)\n  }\n  // Get the next element (will return null if there is none)\n, next: function() {\n    return this.siblings()[this.position() + 1]\n  }\n  // Get the next element (will return null if there is none)\n, previous: function() {\n    return this.siblings()[this.position() - 1]\n  }\n  // Send given element one step forward\n, forward: function() {\n    var i = this.position() + 1\n      , p = this.parent()\n\n    // move node one step forward\n    p.removeElement(this).add(this, i)\n\n    // make sure defs node is always at the top\n    if (p instanceof SVG.Doc)\n      p.node.appendChild(p.defs().node)\n\n    return this\n  }\n  // Send given element one step backward\n, backward: function() {\n    var i = this.position()\n\n    if (i > 0)\n      this.parent().removeElement(this).add(this, i - 1)\n\n    return this\n  }\n  // Send given element all the way to the front\n, front: function() {\n    var p = this.parent()\n\n    // Move node forward\n    p.node.appendChild(this.node)\n\n    // Make sure defs node is always at the top\n    if (p instanceof SVG.Doc)\n      p.node.appendChild(p.defs().node)\n\n    return this\n  }\n  // Send given element all the way to the back\n, back: function() {\n    if (this.position() > 0)\n      this.parent().removeElement(this).add(this, 0)\n\n    return this\n  }\n  // Inserts a given element before the targeted element\n, before: function(element) {\n    element.remove()\n\n    var i = this.position()\n\n    this.parent().add(element, i)\n\n    return this\n  }\n  // Insters a given element after the targeted element\n, after: function(element) {\n    element.remove()\n\n    var i = this.position()\n\n    this.parent().add(element, i + 1)\n\n    return this\n  }\n\n})\nSVG.Mask = SVG.invent({\n  // Initialize node\n  create: function() {\n    this.constructor.call(this, SVG.create('mask'))\n\n    // keep references to masked elements\n    this.targets = []\n  }\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Unmask all masked elements and remove itself\n    remove: function() {\n      // unmask all targets\n      for (var i = this.targets.length - 1; i >= 0; i--)\n        if (this.targets[i])\n          this.targets[i].unmask()\n      this.targets = []\n\n      // remove mask from parent\n      this.parent().removeElement(this)\n\n      return this\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create masking element\n    mask: function() {\n      return this.defs().put(new SVG.Mask)\n    }\n  }\n})\n\n\nSVG.extend(SVG.Element, {\n  // Distribute mask to svg element\n  maskWith: function(element) {\n    // use given mask or create a new one\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\n\n    // store reverence on self in mask\n    this.masker.targets.push(this)\n\n    // apply mask\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\n  }\n  // Unmask element\n, unmask: function() {\n    delete this.masker\n    return this.attr('mask', null)\n  }\n\n})\n\nSVG.ClipPath = SVG.invent({\n  // Initialize node\n  create: function() {\n    this.constructor.call(this, SVG.create('clipPath'))\n\n    // keep references to clipped elements\n    this.targets = []\n  }\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Unclip all clipped elements and remove itself\n    remove: function() {\n      // unclip all targets\n      for (var i = this.targets.length - 1; i >= 0; i--)\n        if (this.targets[i])\n          this.targets[i].unclip()\n      this.targets = []\n\n      // remove clipPath from parent\n      this.parent().removeElement(this)\n\n      return this\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create clipping element\n    clip: function() {\n      return this.defs().put(new SVG.ClipPath)\n    }\n  }\n})\n\n//\nSVG.extend(SVG.Element, {\n  // Distribute clipPath to svg element\n  clipWith: function(element) {\n    // use given clip or create a new one\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\n\n    // store reverence on self in mask\n    this.clipper.targets.push(this)\n\n    // apply mask\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\n  }\n  // Unclip element\n, unclip: function() {\n    delete this.clipper\n    return this.attr('clip-path', null)\n  }\n\n})\nSVG.Gradient = SVG.invent({\n  // Initialize node\n  create: function(type) {\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\n\n    // store type\n    this.type = type\n  }\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Add a color stop\n    at: function(offset, color, opacity) {\n      return this.put(new SVG.Stop).update(offset, color, opacity)\n    }\n    // Update gradient\n  , update: function(block) {\n      // remove all stops\n      this.clear()\n\n      // invoke passed block\n      if (typeof block == 'function')\n        block.call(this, this)\n\n      return this\n    }\n    // Return the fill id\n  , fill: function() {\n      return 'url(#' + this.id() + ')'\n    }\n    // Alias string convertion to fill\n  , toString: function() {\n      return this.fill()\n    }\n    // custom attr to handle transform\n  , attr: function(a, b, c) {\n      if(a == 'transform') a = 'gradientTransform'\n      return SVG.Container.prototype.attr.call(this, a, b, c)\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create gradient element in defs\n    gradient: function(type, block) {\n      return this.defs().gradient(type, block)\n    }\n  }\n})\n\n// Add animatable methods to both gradient and fx module\nSVG.extend(SVG.Gradient, SVG.FX, {\n  // From position\n  from: function(x, y) {\n    return (this._target || this).type == 'radial' ?\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\n  }\n  // To position\n, to: function(x, y) {\n    return (this._target || this).type == 'radial' ?\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\n  }\n})\n\n// Base gradient generation\nSVG.extend(SVG.Defs, {\n  // define gradient\n  gradient: function(type, block) {\n    return this.put(new SVG.Gradient(type)).update(block)\n  }\n\n})\n\nSVG.Stop = SVG.invent({\n  // Initialize node\n  create: 'stop'\n\n  // Inherit from\n, inherit: SVG.Element\n\n  // Add class methods\n, extend: {\n    // add color stops\n    update: function(o) {\n      if (typeof o == 'number' || o instanceof SVG.Number) {\n        o = {\n          offset:  arguments[0]\n        , color:   arguments[1]\n        , opacity: arguments[2]\n        }\n      }\n\n      // set attributes\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\n      if (o.color   != null) this.attr('stop-color', o.color)\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\n\n      return this\n    }\n  }\n\n})\n\nSVG.Pattern = SVG.invent({\n  // Initialize node\n  create: 'pattern'\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Return the fill id\n    fill: function() {\n      return 'url(#' + this.id() + ')'\n    }\n    // Update pattern by rebuilding\n  , update: function(block) {\n      // remove content\n      this.clear()\n\n      // invoke passed block\n      if (typeof block == 'function')\n        block.call(this, this)\n\n      return this\n    }\n    // Alias string convertion to fill\n  , toString: function() {\n      return this.fill()\n    }\n    // custom attr to handle transform\n  , attr: function(a, b, c) {\n      if(a == 'transform') a = 'patternTransform'\n      return SVG.Container.prototype.attr.call(this, a, b, c)\n    }\n\n  }\n\n  // Add parent method\n, construct: {\n    // Create pattern element in defs\n    pattern: function(width, height, block) {\n      return this.defs().pattern(width, height, block)\n    }\n  }\n})\n\nSVG.extend(SVG.Defs, {\n  // Define gradient\n  pattern: function(width, height, block) {\n    return this.put(new SVG.Pattern).update(block).attr({\n      x:            0\n    , y:            0\n    , width:        width\n    , height:       height\n    , patternUnits: 'userSpaceOnUse'\n    })\n  }\n\n})\nSVG.Doc = SVG.invent({\n  // Initialize node\n  create: function(element) {\n    if (element) {\n      // ensure the presence of a dom element\n      element = typeof element == 'string' ?\n        document.getElementById(element) :\n        element\n\n      // If the target is an svg element, use that element as the main wrapper.\n      // This allows svg.js to work with svg documents as well.\n      if (element.nodeName == 'svg') {\n        this.constructor.call(this, element)\n      } else {\n        this.constructor.call(this, SVG.create('svg'))\n        element.appendChild(this.node)\n        this.size('100%', '100%')\n      }\n\n      // set svg element attributes and ensure defs node\n      this.namespace().defs()\n    }\n  }\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Add namespaces\n    namespace: function() {\n      return this\n        .attr({ xmlns: SVG.ns, version: '1.1' })\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\n    }\n    // Creates and returns defs element\n  , defs: function() {\n      if (!this._defs) {\n        var defs\n\n        // Find or create a defs element in this instance\n        if (defs = this.node.getElementsByTagName('defs')[0])\n          this._defs = SVG.adopt(defs)\n        else\n          this._defs = new SVG.Defs\n\n        // Make sure the defs node is at the end of the stack\n        this.node.appendChild(this._defs.node)\n      }\n\n      return this._defs\n    }\n    // custom parent method\n  , parent: function() {\n      return this.node.parentNode.nodeName == '#document' ? null : this.node.parentNode\n    }\n    // Fix for possible sub-pixel offset. See:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\n  , spof: function(spof) {\n      var pos = this.node.getScreenCTM()\n\n      if (pos)\n        this\n          .style('left', (-pos.e % 1) + 'px')\n          .style('top',  (-pos.f % 1) + 'px')\n\n      return this\n    }\n\n      // Removes the doc from the DOM\n  , remove: function() {\n      if(this.parent()) {\n        this.parent().removeChild(this.node);\n      }\n\n      return this;\n    }\n  }\n\n})\n\nSVG.Shape = SVG.invent({\n  // Initialize node\n  create: function(element) {\n    this.constructor.call(this, element)\n  }\n\n  // Inherit from\n, inherit: SVG.Element\n\n})\n\nSVG.Bare = SVG.invent({\n  // Initialize\n  create: function(element, inherit) {\n    // construct element\n    this.constructor.call(this, SVG.create(element))\n\n    // inherit custom methods\n    if (inherit)\n      for (var method in inherit.prototype)\n        if (typeof inherit.prototype[method] === 'function')\n          this[method] = inherit.prototype[method]\n  }\n\n  // Inherit from\n, inherit: SVG.Element\n\n  // Add methods\n, extend: {\n    // Insert some plain text\n    words: function(text) {\n      // remove contents\n      while (this.node.hasChildNodes())\n        this.node.removeChild(this.node.lastChild)\n\n      // create text node\n      this.node.appendChild(document.createTextNode(text))\n\n      return this\n    }\n  }\n})\n\n\nSVG.extend(SVG.Parent, {\n  // Create an element that is not described by SVG.js\n  element: function(element, inherit) {\n    return this.put(new SVG.Bare(element, inherit))\n  }\n  // Add symbol element\n, symbol: function() {\n    return this.defs().element('symbol', SVG.Container)\n  }\n\n})\nSVG.Use = SVG.invent({\n  // Initialize node\n  create: 'use'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add class methods\n, extend: {\n    // Use element as a reference\n    element: function(element, file) {\n      // Set lined element\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create a use element\n    use: function(element, file) {\n      return this.put(new SVG.Use).element(element, file)\n    }\n  }\n})\nSVG.Rect = SVG.invent({\n  // Initialize node\n  create: 'rect'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add parent method\n, construct: {\n    // Create a rect element\n    rect: function(width, height) {\n      return this.put(new SVG.Rect()).size(width, height)\n    }\n  }\n})\nSVG.Circle = SVG.invent({\n  // Initialize node\n  create: 'circle'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add parent method\n, construct: {\n    // Create circle element, based on ellipse\n    circle: function(size) {\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\n    }\n  }\n})\n\nSVG.extend(SVG.Circle, SVG.FX, {\n  // Radius x value\n  rx: function(rx) {\n    return this.attr('r', rx)\n  }\n  // Alias radius x value\n, ry: function(ry) {\n    return this.rx(ry)\n  }\n})\n\nSVG.Ellipse = SVG.invent({\n  // Initialize node\n  create: 'ellipse'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add parent method\n, construct: {\n    // Create an ellipse\n    ellipse: function(width, height) {\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\n    }\n  }\n})\n\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\n  // Radius x value\n  rx: function(rx) {\n    return this.attr('rx', rx)\n  }\n  // Radius y value\n, ry: function(ry) {\n    return this.attr('ry', ry)\n  }\n})\n\n// Add common method\nSVG.extend(SVG.Circle, SVG.Ellipse, {\n    // Move over x-axis\n    x: function(x) {\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\n    }\n    // Move over y-axis\n  , y: function(y) {\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\n    }\n    // Move by center over x-axis\n  , cx: function(x) {\n      return x == null ? this.attr('cx') : this.attr('cx', x)\n    }\n    // Move by center over y-axis\n  , cy: function(y) {\n      return y == null ? this.attr('cy') : this.attr('cy', y)\n    }\n    // Set width of element\n  , width: function(width) {\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\n    }\n    // Set height of element\n  , height: function(height) {\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\n    }\n    // Custom size function\n  , size: function(width, height) {\n      var p = proportionalSize(this, width, height)\n\n      return this\n        .rx(new SVG.Number(p.width).divide(2))\n        .ry(new SVG.Number(p.height).divide(2))\n    }\n})\nSVG.Line = SVG.invent({\n  // Initialize node\n  create: 'line'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add class methods\n, extend: {\n    // Get array\n    array: function() {\n      return new SVG.PointArray([\n        [ this.attr('x1'), this.attr('y1') ]\n      , [ this.attr('x2'), this.attr('y2') ]\n      ])\n    }\n    // Overwrite native plot() method\n  , plot: function(x1, y1, x2, y2) {\n      if (typeof y1 !== 'undefined')\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\n      else\n        x1 = new SVG.PointArray(x1).toLine()\n\n      return this.attr(x1)\n    }\n    // Move by left top corner\n  , move: function(x, y) {\n      return this.attr(this.array().move(x, y).toLine())\n    }\n    // Set element size to given width and height\n  , size: function(width, height) {\n      var p = proportionalSize(this, width, height)\n\n      return this.attr(this.array().size(p.width, p.height).toLine())\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create a line element\n    line: function(x1, y1, x2, y2) {\n      return this.put(new SVG.Line).plot(x1, y1, x2, y2)\n    }\n  }\n})\n\nSVG.Polyline = SVG.invent({\n  // Initialize node\n  create: 'polyline'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add parent method\n, construct: {\n    // Create a wrapped polyline element\n    polyline: function(p) {\n      return this.put(new SVG.Polyline).plot(p)\n    }\n  }\n})\n\nSVG.Polygon = SVG.invent({\n  // Initialize node\n  create: 'polygon'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add parent method\n, construct: {\n    // Create a wrapped polygon element\n    polygon: function(p) {\n      return this.put(new SVG.Polygon).plot(p)\n    }\n  }\n})\n\n// Add polygon-specific functions\nSVG.extend(SVG.Polyline, SVG.Polygon, {\n  // Get array\n  array: function() {\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\n  }\n  // Plot new path\n, plot: function(p) {\n    return this.attr('points', (this._array = new SVG.PointArray(p)))\n  }\n  // Move by left top corner\n, move: function(x, y) {\n    return this.attr('points', this.array().move(x, y))\n  }\n  // Set element size to given width and height\n, size: function(width, height) {\n    var p = proportionalSize(this, width, height)\n\n    return this.attr('points', this.array().size(p.width, p.height))\n  }\n\n})\n// unify all point to point elements\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\n  // Define morphable array\n  morphArray:  SVG.PointArray\n  // Move by left top corner over x-axis\n, x: function(x) {\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\n  }\n  // Move by left top corner over y-axis\n, y: function(y) {\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\n  }\n  // Set width of element\n, width: function(width) {\n    var b = this.bbox()\n\n    return width == null ? b.width : this.size(width, b.height)\n  }\n  // Set height of element\n, height: function(height) {\n    var b = this.bbox()\n\n    return height == null ? b.height : this.size(b.width, height)\n  }\n})\nSVG.Path = SVG.invent({\n  // Initialize node\n  create: 'path'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add class methods\n, extend: {\n    // Define morphable array\n    morphArray:  SVG.PathArray\n    // Get array\n  , array: function() {\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\n    }\n    // Plot new poly points\n  , plot: function(p) {\n      return this.attr('d', (this._array = new SVG.PathArray(p)))\n    }\n    // Move by left top corner\n  , move: function(x, y) {\n      return this.attr('d', this.array().move(x, y))\n    }\n    // Move by left top corner over x-axis\n  , x: function(x) {\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\n    }\n    // Move by left top corner over y-axis\n  , y: function(y) {\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\n    }\n    // Set element size to given width and height\n  , size: function(width, height) {\n      var p = proportionalSize(this, width, height)\n\n      return this.attr('d', this.array().size(p.width, p.height))\n    }\n    // Set width of element\n  , width: function(width) {\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\n    }\n    // Set height of element\n  , height: function(height) {\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\n    }\n\n  }\n\n  // Add parent method\n, construct: {\n    // Create a wrapped path element\n    path: function(d) {\n      return this.put(new SVG.Path).plot(d)\n    }\n  }\n})\nSVG.Image = SVG.invent({\n  // Initialize node\n  create: 'image'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add class methods\n, extend: {\n    // (re)load image\n    load: function(url) {\n      if (!url) return this\n\n      var self = this\n        , img  = document.createElement('img')\n\n      // preload image\n      img.onload = function() {\n        var p = self.parent(SVG.Pattern)\n\n        if(p === null) return\n\n        // ensure image size\n        if (self.width() == 0 && self.height() == 0)\n          self.size(img.width, img.height)\n\n        // ensure pattern size if not set\n        if (p && p.width() == 0 && p.height() == 0)\n          p.size(self.width(), self.height())\n\n        // callback\n        if (typeof self._loaded === 'function')\n          self._loaded.call(self, {\n            width:  img.width\n          , height: img.height\n          , ratio:  img.width / img.height\n          , url:    url\n          })\n      }\n\n      img.onerror = function(e){\n        if (typeof self._error === 'function'){\n            self._error.call(self, e)\n        }\n      }\n\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\n    }\n    // Add loaded callback\n  , loaded: function(loaded) {\n      this._loaded = loaded\n      return this\n    }\n\n  , error: function(error) {\n      this._error = error\n      return this\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // create image element, load image and set its size\n    image: function(source, width, height) {\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\n    }\n  }\n\n})\nSVG.Text = SVG.invent({\n  // Initialize node\n  create: function() {\n    this.constructor.call(this, SVG.create('text'))\n\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\n    this._rebuild = true                      // enable automatic updating of dy values\n    this._build   = false                     // disable build mode for adding multiple lines\n\n    // set default font\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\n  }\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add class methods\n, extend: {\n    // Move over x-axis\n    x: function(x) {\n      // act as getter\n      if (x == null)\n        return this.attr('x')\n\n      // move lines as well if no textPath is present\n      if (!this.textPath)\n        this.lines().each(function() { if (this.dom.newLined) this.x(x) })\n\n      return this.attr('x', x)\n    }\n    // Move over y-axis\n  , y: function(y) {\n      var oy = this.attr('y')\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\n\n      // act as getter\n      if (y == null)\n        return typeof oy === 'number' ? oy - o : oy\n\n      return this.attr('y', typeof y === 'number' ? y + o : y)\n    }\n    // Move center over x-axis\n  , cx: function(x) {\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\n    }\n    // Move center over y-axis\n  , cy: function(y) {\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\n    }\n    // Set the text content\n  , text: function(text) {\n      // act as getter\n      if (typeof text === 'undefined'){\n        var text = ''\n        var children = this.node.childNodes\n        for(var i = 0, len = children.length; i < len; ++i){\n\n          // add newline if its not the first child and newLined is set to true\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\n            text += '\\n'\n          }\n\n          // add content of this node\n          text += children[i].textContent\n        }\n\n        return text\n      }\n\n      // remove existing content\n      this.clear().build(true)\n\n      if (typeof text === 'function') {\n        // call block\n        text.call(this, this)\n\n      } else {\n        // store text and make sure text is not blank\n        text = text.split('\\n')\n\n        // build new lines\n        for (var i = 0, il = text.length; i < il; i++)\n          this.tspan(text[i]).newLine()\n      }\n\n      // disable build mode and rebuild lines\n      return this.build(false).rebuild()\n    }\n    // Set font size\n  , size: function(size) {\n      return this.attr('font-size', size).rebuild()\n    }\n    // Set / get leading\n  , leading: function(value) {\n      // act as getter\n      if (value == null)\n        return this.dom.leading\n\n      // act as setter\n      this.dom.leading = new SVG.Number(value)\n\n      return this.rebuild()\n    }\n    // Get all the first level lines\n  , lines: function() {\n      var node = (this.textPath && this.textPath() || this).node\n\n      // filter tspans and map them to SVG.js instances\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\n        return SVG.adopt(el)\n      })\n\n      // return an instance of SVG.set\n      return new SVG.Set(lines)\n    }\n    // Rebuild appearance type\n  , rebuild: function(rebuild) {\n      // store new rebuild flag if given\n      if (typeof rebuild == 'boolean')\n        this._rebuild = rebuild\n\n      // define position of all lines\n      if (this._rebuild) {\n        var self = this\n          , blankLineOffset = 0\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\n\n        this.lines().each(function() {\n          if (this.dom.newLined) {\n            if (!this.textPath)\n              this.attr('x', self.attr('x'))\n\n            if(this.text() == '\\n') {\n              blankLineOffset += dy\n            }else{\n              this.attr('dy', dy + blankLineOffset)\n              blankLineOffset = 0\n            }\n          }\n        })\n\n        this.fire('rebuild')\n      }\n\n      return this\n    }\n    // Enable / disable build mode\n  , build: function(build) {\n      this._build = !!build\n      return this\n    }\n    // overwrite method from parent to set data properly\n  , setData: function(o){\n      this.dom = o\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\n      return this\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create text element\n    text: function(text) {\n      return this.put(new SVG.Text).text(text)\n    }\n    // Create plain text element\n  , plain: function(text) {\n      return this.put(new SVG.Text).plain(text)\n    }\n  }\n\n})\n\nSVG.Tspan = SVG.invent({\n  // Initialize node\n  create: 'tspan'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add class methods\n, extend: {\n    // Set text content\n    text: function(text) {\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\n\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\n\n      return this\n    }\n    // Shortcut dx\n  , dx: function(dx) {\n      return this.attr('dx', dx)\n    }\n    // Shortcut dy\n  , dy: function(dy) {\n      return this.attr('dy', dy)\n    }\n    // Create new line\n  , newLine: function() {\n      // fetch text parent\n      var t = this.parent(SVG.Text)\n\n      // mark new line\n      this.dom.newLined = true\n\n      // apply new hy¡n\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\n    }\n  }\n\n})\n\nSVG.extend(SVG.Text, SVG.Tspan, {\n  // Create plain text node\n  plain: function(text) {\n    // clear if build mode is disabled\n    if (this._build === false)\n      this.clear()\n\n    // create text node\n    this.node.appendChild(document.createTextNode(text))\n\n    return this\n  }\n  // Create a tspan\n, tspan: function(text) {\n    var node  = (this.textPath && this.textPath() || this).node\n      , tspan = new SVG.Tspan\n\n    // clear if build mode is disabled\n    if (this._build === false)\n      this.clear()\n\n    // add new tspan\n    node.appendChild(tspan.node)\n\n    return tspan.text(text)\n  }\n  // Clear all lines\n, clear: function() {\n    var node = (this.textPath && this.textPath() || this).node\n\n    // remove existing child nodes\n    while (node.hasChildNodes())\n      node.removeChild(node.lastChild)\n\n    return this\n  }\n  // Get length of text element\n, length: function() {\n    return this.node.getComputedTextLength()\n  }\n})\n\nSVG.TextPath = SVG.invent({\n  // Initialize node\n  create: 'textPath'\n\n  // Inherit from\n, inherit: SVG.Parent\n\n  // Define parent class\n, parent: SVG.Text\n\n  // Add parent method\n, construct: {\n    // Create path for text to run on\n    path: function(d) {\n      // create textPath element\n      var path  = new SVG.TextPath\n        , track = this.doc().defs().path(d)\n\n      // move lines to textpath\n      while (this.node.hasChildNodes())\n        path.node.appendChild(this.node.firstChild)\n\n      // add textPath element as child node\n      this.node.appendChild(path.node)\n\n      // link textPath to path and add content\n      path.attr('href', '#' + track, SVG.xlink)\n\n      return this\n    }\n    // Plot path if any\n  , plot: function(d) {\n      var track = this.track()\n\n      if (track)\n        track.plot(d)\n\n      return this\n    }\n    // Get the path track element\n  , track: function() {\n      var path = this.textPath()\n\n      if (path)\n        return path.reference('href')\n    }\n    // Get the textPath child\n  , textPath: function() {\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\n        return SVG.adopt(this.node.firstChild)\n    }\n  }\n})\nSVG.Nested = SVG.invent({\n  // Initialize node\n  create: function() {\n    this.constructor.call(this, SVG.create('svg'))\n\n    this.style('overflow', 'visible')\n  }\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add parent method\n, construct: {\n    // Create nested svg document\n    nested: function() {\n      return this.put(new SVG.Nested)\n    }\n  }\n})\nSVG.A = SVG.invent({\n  // Initialize node\n  create: 'a'\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Link url\n    to: function(url) {\n      return this.attr('href', url, SVG.xlink)\n    }\n    // Link show attribute\n  , show: function(target) {\n      return this.attr('show', target, SVG.xlink)\n    }\n    // Link target attribute\n  , target: function(target) {\n      return this.attr('target', target)\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create a hyperlink element\n    link: function(url) {\n      return this.put(new SVG.A).to(url)\n    }\n  }\n})\n\nSVG.extend(SVG.Element, {\n  // Create a hyperlink element\n  linkTo: function(url) {\n    var link = new SVG.A\n\n    if (typeof url == 'function')\n      url.call(link, link)\n    else\n      link.to(url)\n\n    return this.parent().put(link).put(this)\n  }\n\n})\nSVG.Marker = SVG.invent({\n  // Initialize node\n  create: 'marker'\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Set width of element\n    width: function(width) {\n      return this.attr('markerWidth', width)\n    }\n    // Set height of element\n  , height: function(height) {\n      return this.attr('markerHeight', height)\n    }\n    // Set marker refX and refY\n  , ref: function(x, y) {\n      return this.attr('refX', x).attr('refY', y)\n    }\n    // Update marker\n  , update: function(block) {\n      // remove all content\n      this.clear()\n\n      // invoke passed block\n      if (typeof block == 'function')\n        block.call(this, this)\n\n      return this\n    }\n    // Return the fill id\n  , toString: function() {\n      return 'url(#' + this.id() + ')'\n    }\n  }\n\n  // Add parent method\n, construct: {\n    marker: function(width, height, block) {\n      // Create marker element in defs\n      return this.defs().marker(width, height, block)\n    }\n  }\n\n})\n\nSVG.extend(SVG.Defs, {\n  // Create marker\n  marker: function(width, height, block) {\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\n    return this.put(new SVG.Marker)\n      .size(width, height)\n      .ref(width / 2, height / 2)\n      .viewbox(0, 0, width, height)\n      .attr('orient', 'auto')\n      .update(block)\n  }\n\n})\n\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\n  // Create and attach markers\n  marker: function(marker, width, height, block) {\n    var attr = ['marker']\n\n    // Build attribute name\n    if (marker != 'all') attr.push(marker)\n    attr = attr.join('-')\n\n    // Set marker attribute\n    marker = arguments[1] instanceof SVG.Marker ?\n      arguments[1] :\n      this.doc().marker(width, height, block)\n\n    return this.attr(attr, marker)\n  }\n\n})\n// Define list of available attributes for stroke and fill\nvar sugar = {\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\n, fill:   ['color', 'opacity', 'rule']\n, prefix: function(t, a) {\n    return a == 'color' ? t : t + '-' + a\n  }\n}\n\n// Add sugar for fill and stroke\n;['fill', 'stroke'].forEach(function(m) {\n  var i, extension = {}\n\n  extension[m] = function(o) {\n    if (typeof o == 'undefined')\n      return this\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\n      this.attr(m, o)\n\n    else\n      // set all attributes from sugar.fill and sugar.stroke list\n      for (i = sugar[m].length - 1; i >= 0; i--)\n        if (o[sugar[m][i]] != null)\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\n\n    return this\n  }\n\n  SVG.extend(SVG.Element, SVG.FX, extension)\n\n})\n\nSVG.extend(SVG.Element, SVG.FX, {\n  // Map rotation to transform\n  rotate: function(d, cx, cy) {\n    return this.transform({ rotation: d, cx: cx, cy: cy })\n  }\n  // Map skew to transform\n, skew: function(x, y, cx, cy) {\n    return arguments.length == 1  || arguments.length == 3 ?\n      this.transform({ skew: x, cx: y, cy: cx }) :\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\n  }\n  // Map scale to transform\n, scale: function(x, y, cx, cy) {\n    return arguments.length == 1  || arguments.length == 3 ?\n      this.transform({ scale: x, cx: y, cy: cx }) :\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\n  }\n  // Map translate to transform\n, translate: function(x, y) {\n    return this.transform({ x: x, y: y })\n  }\n  // Map flip to transform\n, flip: function(a, o) {\n    return this.transform({ flip: a, offset: o })\n  }\n  // Map matrix to transform\n, matrix: function(m) {\n    return this.attr('transform', new SVG.Matrix(m))\n  }\n  // Opacity\n, opacity: function(value) {\n    return this.attr('opacity', value)\n  }\n  // Relative move over x axis\n, dx: function(x) {\n    return this.x((this instanceof SVG.FX ? 0 : this.x()) + x, true)\n  }\n  // Relative move over y axis\n, dy: function(y) {\n    return this.y((this instanceof SVG.FX ? 0 : this.y()) + y, true)\n  }\n  // Relative move over x and y axes\n, dmove: function(x, y) {\n    return this.dx(x).dy(y)\n  }\n})\n\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\n  // Add x and y radius\n  radius: function(x, y) {\n    var type = (this._target || this).type;\n    return type == 'radial' || type == 'circle' ?\n      this.attr('r', new SVG.Number(x)) :\n      this.rx(x).ry(y == null ? x : y)\n  }\n})\n\nSVG.extend(SVG.Path, {\n  // Get path length\n  length: function() {\n    return this.node.getTotalLength()\n  }\n  // Get point at length\n, pointAt: function(length) {\n    return this.node.getPointAtLength(length)\n  }\n})\n\nSVG.extend(SVG.Parent, SVG.Text, SVG.FX, {\n  // Set font\n  font: function(o) {\n    for (var k in o)\n      k == 'leading' ?\n        this.leading(o[k]) :\n      k == 'anchor' ?\n        this.attr('text-anchor', o[k]) :\n      k == 'size' || k == 'family' || k == 'weight' || k == 'stretch' || k == 'variant' || k == 'style' ?\n        this.attr('font-'+ k, o[k]) :\n        this.attr(k, o[k])\n\n    return this\n  }\n})\n\nSVG.Set = SVG.invent({\n  // Initialize\n  create: function(members) {\n    // Set initial state\n    Array.isArray(members) ? this.members = members : this.clear()\n  }\n\n  // Add class methods\n, extend: {\n    // Add element to set\n    add: function() {\n      var i, il, elements = [].slice.call(arguments)\n\n      for (i = 0, il = elements.length; i < il; i++)\n        this.members.push(elements[i])\n\n      return this\n    }\n    // Remove element from set\n  , remove: function(element) {\n      var i = this.index(element)\n\n      // remove given child\n      if (i > -1)\n        this.members.splice(i, 1)\n\n      return this\n    }\n    // Iterate over all members\n  , each: function(block) {\n      for (var i = 0, il = this.members.length; i < il; i++)\n        block.apply(this.members[i], [i, this.members])\n\n      return this\n    }\n    // Restore to defaults\n  , clear: function() {\n      // initialize store\n      this.members = []\n\n      return this\n    }\n    // Get the length of a set\n  , length: function() {\n      return this.members.length\n    }\n    // Checks if a given element is present in set\n  , has: function(element) {\n      return this.index(element) >= 0\n    }\n    // retuns index of given element in set\n  , index: function(element) {\n      return this.members.indexOf(element)\n    }\n    // Get member at given index\n  , get: function(i) {\n      return this.members[i]\n    }\n    // Get first member\n  , first: function() {\n      return this.get(0)\n    }\n    // Get last member\n  , last: function() {\n      return this.get(this.members.length - 1)\n    }\n    // Default value\n  , valueOf: function() {\n      return this.members\n    }\n    // Get the bounding box of all members included or empty box if set has no items\n  , bbox: function(){\n      var box = new SVG.BBox()\n\n      // return an empty box of there are no members\n      if (this.members.length == 0)\n        return box\n\n      // get the first rbox and update the target bbox\n      var rbox = this.members[0].rbox()\n      box.x      = rbox.x\n      box.y      = rbox.y\n      box.width  = rbox.width\n      box.height = rbox.height\n\n      this.each(function() {\n        // user rbox for correct position and visual representation\n        box = box.merge(this.rbox())\n      })\n\n      return box\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create a new set\n    set: function(members) {\n      return new SVG.Set(members)\n    }\n  }\n})\n\nSVG.FX.Set = SVG.invent({\n  // Initialize node\n  create: function(set) {\n    // store reference to set\n    this.set = set\n  }\n\n})\n\n// Alias methods\nSVG.Set.inherit = function() {\n  var m\n    , methods = []\n\n  // gather shape methods\n  for(var m in SVG.Shape.prototype)\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\n      methods.push(m)\n\n  // apply shape aliasses\n  methods.forEach(function(method) {\n    SVG.Set.prototype[method] = function() {\n      for (var i = 0, il = this.members.length; i < il; i++)\n        if (this.members[i] && typeof this.members[i][method] == 'function')\n          this.members[i][method].apply(this.members[i], arguments)\n\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\n    }\n  })\n\n  // clear methods for the next round\n  methods = []\n\n  // gather fx methods\n  for(var m in SVG.FX.prototype)\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\n      methods.push(m)\n\n  // apply fx aliasses\n  methods.forEach(function(method) {\n    SVG.FX.Set.prototype[method] = function() {\n      for (var i = 0, il = this.set.members.length; i < il; i++)\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\n\n      return this\n    }\n  })\n}\n\n\n\n\nSVG.extend(SVG.Element, {\n  // Store data values on svg nodes\n  data: function(a, v, r) {\n    if (typeof a == 'object') {\n      for (v in a)\n        this.data(v, a[v])\n\n    } else if (arguments.length < 2) {\n      try {\n        return JSON.parse(this.attr('data-' + a))\n      } catch(e) {\n        return this.attr('data-' + a)\n      }\n\n    } else {\n      this.attr(\n        'data-' + a\n      , v === null ?\n          null :\n        r === true || typeof v === 'string' || typeof v === 'number' ?\n          v :\n          JSON.stringify(v)\n      )\n    }\n\n    return this\n  }\n})\nSVG.extend(SVG.Element, {\n  // Remember arbitrary data\n  remember: function(k, v) {\n    // remember every item in an object individually\n    if (typeof arguments[0] == 'object')\n      for (var v in k)\n        this.remember(v, k[v])\n\n    // retrieve memory\n    else if (arguments.length == 1)\n      return this.memory()[k]\n\n    // store memory\n    else\n      this.memory()[k] = v\n\n    return this\n  }\n\n  // Erase a given memory\n, forget: function() {\n    if (arguments.length == 0)\n      this._memory = {}\n    else\n      for (var i = arguments.length - 1; i >= 0; i--)\n        delete this.memory()[arguments[i]]\n\n    return this\n  }\n\n  // Initialize or return local memory object\n, memory: function() {\n    return this._memory || (this._memory = {})\n  }\n\n})\n// Method for getting an element by id\nSVG.get = function(id) {\n  var node = document.getElementById(idFromReference(id) || id)\n  return SVG.adopt(node)\n}\n\n// Select elements by query string\nSVG.select = function(query, parent) {\n  return new SVG.Set(\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\n      return SVG.adopt(node)\n    })\n  )\n}\n\nSVG.extend(SVG.Parent, {\n  // Scoped select method\n  select: function(query) {\n    return SVG.select(query, this.node)\n  }\n\n})\nfunction is(el, obj){\n  return el instanceof obj\n}\n\n// tests if a given selector matches an element\nfunction matches(el, selector) {\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\n}\n\n// Convert dash-separated-string to camelCase\nfunction camelCase(s) {\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\n    return g.toUpperCase()\n  })\n}\n\n// Capitalize first letter of a string\nfunction capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\n// Ensure to six-based hex\nfunction fullHex(hex) {\n  return hex.length == 4 ?\n    [ '#',\n      hex.substring(1, 2), hex.substring(1, 2)\n    , hex.substring(2, 3), hex.substring(2, 3)\n    , hex.substring(3, 4), hex.substring(3, 4)\n    ].join('') : hex\n}\n\n// Component to hex value\nfunction compToHex(comp) {\n  var hex = comp.toString(16)\n  return hex.length == 1 ? '0' + hex : hex\n}\n\n// Calculate proportional width and height values when necessary\nfunction proportionalSize(element, width, height) {\n  if (width == null || height == null) {\n    var box = element.bbox()\n\n    if (width == null)\n      width = box.width / box.height * height\n    else if (height == null)\n      height = box.height / box.width * width\n  }\n\n  return {\n    width:  width\n  , height: height\n  }\n}\n\n// Delta transform point\nfunction deltaTransformPoint(matrix, x, y) {\n  return {\n    x: x * matrix.a + y * matrix.c + 0\n  , y: x * matrix.b + y * matrix.d + 0\n  }\n}\n\n// Map matrix array to object\nfunction arrayToMatrix(a) {\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\n}\n\n// Parse matrix if required\nfunction parseMatrix(matrix) {\n  if (!(matrix instanceof SVG.Matrix))\n    matrix = new SVG.Matrix(matrix)\n\n  return matrix\n}\n\n// Add centre point to transform object\nfunction ensureCentre(o, target) {\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\n}\n\n// Convert string to matrix\nfunction stringToMatrix(source) {\n  // remove matrix wrapper and split to individual numbers\n  source = source\n    .replace(SVG.regex.whitespace, '')\n    .replace(SVG.regex.matrix, '')\n    .split(SVG.regex.matrixElements)\n\n  // convert string values to floats and convert to a matrix-formatted object\n  return arrayToMatrix(\n    SVG.utils.map(source, function(n) {\n      return parseFloat(n)\n    })\n  )\n}\n\n// Calculate position according to from and to\nfunction at(o, pos) {\n  // number recalculation (don't bother converting to SVG.Number for performance reasons)\n  return typeof o.from == 'number' ?\n    o.from + (o.to - o.from) * pos :\n\n  // instance recalculation\n  o instanceof SVG.Color || o instanceof SVG.Number || o instanceof SVG.Matrix ? o.at(pos) :\n\n  // for all other values wait until pos has reached 1 to return the final value\n  pos < 1 ? o.from : o.to\n}\n\n// PathArray Helpers\nfunction arrayToString(a) {\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\n    s += a[i][0]\n\n    if (a[i][1] != null) {\n      s += a[i][1]\n\n      if (a[i][2] != null) {\n        s += ' '\n        s += a[i][2]\n\n        if (a[i][3] != null) {\n          s += ' '\n          s += a[i][3]\n          s += ' '\n          s += a[i][4]\n\n          if (a[i][5] != null) {\n            s += ' '\n            s += a[i][5]\n            s += ' '\n            s += a[i][6]\n\n            if (a[i][7] != null) {\n              s += ' '\n              s += a[i][7]\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return s + ' '\n}\n\n// Deep new id assignment\nfunction assignNewId(node) {\n  // do the same for SVG child nodes as well\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\n    if (node.childNodes[i] instanceof SVGElement)\n      assignNewId(node.childNodes[i])\n\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\n}\n\n// Add more bounding box properties\nfunction fullBox(b) {\n  if (b.x == null) {\n    b.x      = 0\n    b.y      = 0\n    b.width  = 0\n    b.height = 0\n  }\n\n  b.w  = b.width\n  b.h  = b.height\n  b.x2 = b.x + b.width\n  b.y2 = b.y + b.height\n  b.cx = b.x + b.width / 2\n  b.cy = b.y + b.height / 2\n\n  return b\n}\n\n// Get id from reference string\nfunction idFromReference(url) {\n  var m = url.toString().match(SVG.regex.reference)\n\n  if (m) return m[1]\n}\n\n// Create matrix array for looping\nvar abcdef = 'abcdef'.split('')\n// Add CustomEvent to IE9 and IE10\nif (typeof CustomEvent !== 'function') {\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\n  var CustomEvent = function(event, options) {\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\n    var e = document.createEvent('CustomEvent')\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\n    return e\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n}\n\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\n(function(w) {\n  var lastTime = 0\n  var vendors = ['moz', 'webkit']\n\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\n  }\n\n  w.requestAnimationFrame = w.requestAnimationFrame ||\n    function(callback) {\n      var currTime = new Date().getTime()\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\n\n      var id = w.setTimeout(function() {\n        callback(currTime + timeToCall)\n      }, timeToCall)\n\n      lastTime = currTime + timeToCall\n      return id\n    }\n\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\n\n}(window))\n\nreturn SVG\n\n}));\n},{}],143:[function(_dereq_,module,exports){\n/* globals Terraformer */\n(function (root, factory) {\n\n  // Node.\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    exports = module.exports = factory(_dereq_('terraformer'));\n  }\n\n  // Browser Global.\n  if(typeof root.navigator === \"object\") {\n    if (!root.Terraformer){\n      throw new Error(\"Terraformer.ArcGIS requires the core Terraformer library. https://github.com/esri/Terraformer\");\n    }\n    root.Terraformer.ArcGIS = factory(root.Terraformer);\n  }\n\n}(this, function(Terraformer) {\n  var exports = {};\n\n  // https://github.com/Esri/terraformer-arcgis-parser/issues/10\n  function decompressGeometry(str) {\n    var xDiffPrev = 0;\n    var yDiffPrev = 0;\n    var points = [];\n    var x, y;\n    var strings;\n    var coefficient;\n\n    // Split the string into an array on the + and - characters\n    strings = str.match(/((\\+|\\-)[^\\+\\-]+)/g);\n\n    // The first value is the coefficient in base 32\n    coefficient = parseInt(strings[0], 32);\n\n    for (var j = 1; j < strings.length; j += 2) {\n      // j is the offset for the x value\n      // Convert the value from base 32 and add the previous x value\n      x = (parseInt(strings[j], 32) + xDiffPrev);\n      xDiffPrev = x;\n\n      // j+1 is the offset for the y value\n      // Convert the value from base 32 and add the previous y value\n      y = (parseInt(strings[j + 1], 32) + yDiffPrev);\n      yDiffPrev = y;\n\n      points.push([x / coefficient, y / coefficient]);\n    }\n\n    return points;\n  }\n\n  // checks if the first and last points of a ring are equal and closes the ring\n  function closeRing(coordinates) {\n    if (!pointsEqual(coordinates[0], coordinates[coordinates.length - 1])) {\n      coordinates.push(coordinates[0]);\n    }\n    return coordinates;\n  }\n\n  // checks if 2 x,y points are equal\n  function pointsEqual(a, b) {\n    for (var i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // shallow object clone for feature properties and attributes\n  // from http://jsperf.com/cloning-an-object/2\n  function clone(obj) {\n    var target = {};\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        target[i] = obj[i];\n      }\n    }\n    return target;\n  }\n\n  // determine if polygon ring coordinates are clockwise. clockwise signifies outer ring, counter-clockwise an inner ring\n  // or hole. this logic was found at http://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-\n  // points-are-in-clockwise-order\n  function ringIsClockwise(ringToTest) {\n    var total = 0,i = 0;\n    var rLength = ringToTest.length;\n    var pt1 = ringToTest[i];\n    var pt2;\n    for (i; i < rLength - 1; i++) {\n      pt2 = ringToTest[i + 1];\n      total += (pt2[0] - pt1[0]) * (pt2[1] + pt1[1]);\n      pt1 = pt2;\n    }\n    return (total >= 0);\n  }\n\n  // This function ensures that rings are oriented in the right directions\n  // outer rings are clockwise, holes are counterclockwise\n  function orientRings(poly){\n    var output = [];\n    var polygon = poly.slice(0);\n    var outerRing = closeRing(polygon.shift().slice(0));\n    if(outerRing.length >= 4){\n      if(!ringIsClockwise(outerRing)){\n        outerRing.reverse();\n      }\n\n      output.push(outerRing);\n\n      for (var i = 0; i < polygon.length; i++) {\n        var hole = closeRing(polygon[i].slice(0));\n        if(hole.length >= 4){\n          if(ringIsClockwise(hole)){\n            hole.reverse();\n          }\n          output.push(hole);\n        }\n      }\n    }\n\n    return output;\n  }\n\n  // This function flattens holes in multipolygons to one array of polygons\n  // [\n  //   [\n  //     [ array of outer coordinates ]\n  //     [ hole coordinates ]\n  //     [ hole coordinates ]\n  //   ],\n  //   [\n  //     [ array of outer coordinates ]\n  //     [ hole coordinates ]\n  //     [ hole coordinates ]\n  //   ],\n  // ]\n  // becomes\n  // [\n  //   [ array of outer coordinates ]\n  //   [ hole coordinates ]\n  //   [ hole coordinates ]\n  //   [ array of outer coordinates ]\n  //   [ hole coordinates ]\n  //   [ hole coordinates ]\n  // ]\n  function flattenMultiPolygonRings(rings){\n    var output = [];\n    for (var i = 0; i < rings.length; i++) {\n      var polygon = orientRings(rings[i]);\n      for (var x = polygon.length - 1; x >= 0; x--) {\n        var ring = polygon[x].slice(0);\n        output.push(ring);\n      }\n    }\n    return output;\n  }\n\n  function coordinatesContainCoordinates(outer, inner){\n    var intersects = Terraformer.Tools.arraysIntersectArrays(outer, inner);\n    var contains = Terraformer.Tools.coordinatesContainPoint(outer, inner[0]);\n    if(!intersects && contains){\n      return true;\n    }\n    return false;\n  }\n\n  // do any polygons in this array contain any other polygons in this array?\n  // used for checking for holes in arcgis rings\n  function convertRingsToGeoJSON(rings){\n    var outerRings = [];\n    var holes = [];\n    var x; // iterator\n    var outerRing; // current outer ring being evaluated\n    var hole; // current hole being evaluated\n\n    // for each ring\n    for (var r = 0; r < rings.length; r++) {\n      var ring = closeRing(rings[r].slice(0));\n      if(ring.length < 4){\n        continue;\n      }\n      // is this ring an outer ring? is it clockwise?\n      if(ringIsClockwise(ring)){\n        var polygon = [ ring ];\n        outerRings.push(polygon); // push to outer rings\n      } else {\n        holes.push(ring); // counterclockwise push to holes\n      }\n    }\n\n    var uncontainedHoles = [];\n\n    // while there are holes left...\n    while(holes.length){\n      // pop a hole off out stack\n      hole = holes.pop();\n\n      // loop over all outer rings and see if they contain our hole.\n      var contained = false;\n      for (x = outerRings.length - 1; x >= 0; x--) {\n        outerRing = outerRings[x][0];\n        if(coordinatesContainCoordinates(outerRing, hole)){\n          // the hole is contained push it into our polygon\n          outerRings[x].push(hole);\n          contained = true;\n          break;\n        }\n      }\n\n      // ring is not contained in any outer ring\n      // sometimes this happens https://github.com/Esri/esri-leaflet/issues/320\n      if(!contained){\n        uncontainedHoles.push(hole);\n      }\n    }\n\n    // if we couldn't match any holes using contains we can now try intersects...\n    while(uncontainedHoles.length){\n      // pop a hole off out stack\n      hole = uncontainedHoles.pop();\n\n      // loop over all outer rings and see if any intersect our hole.\n      var intersects = false;\n      for (x = outerRings.length - 1; x >= 0; x--) {\n        outerRing = outerRings[x][0];\n        if(Terraformer.Tools.arraysIntersectArrays(outerRing, hole)){\n          // the hole intersects the outer ring push it into our polygon\n          outerRings[x].push(hole);\n          intersects = true;\n          break;\n        }\n      }\n\n      // hole does not intersect ANY outer ring at this point\n      // make it an outer ring.\n      if(!intersects) {\n        outerRings.push([hole.reverse()]);\n      }\n    }\n\n    if(outerRings.length === 1){\n      return {\n        type: 'Polygon',\n        coordinates: outerRings[0]\n      };\n    } else {\n      return {\n        type: 'MultiPolygon',\n        coordinates: outerRings\n      };\n    }\n  }\n\n  // ArcGIS -> GeoJSON\n  function parse(arcgis, options){\n    var geojson = {};\n\n    options = options || {};\n    options.idAttribute = options.idAttribute || undefined;\n\n    if(typeof arcgis.x === 'number' && typeof arcgis.y === 'number'){\n      geojson.type = \"Point\";\n      geojson.coordinates = [arcgis.x, arcgis.y];\n      if (arcgis.z || arcgis.m){\n        geojson.coordinates.push(arcgis.z);\n      }\n      if (arcgis.m){\n        geojson.coordinates.push(arcgis.m);\n      }\n    }\n\n    if(arcgis.points){\n      geojson.type = \"MultiPoint\";\n      geojson.coordinates = arcgis.points.slice(0);\n    }\n\n    if(arcgis.paths) {\n      if(arcgis.paths.length === 1){\n        geojson.type = \"LineString\";\n        geojson.coordinates = arcgis.paths[0].slice(0);\n      } else {\n        geojson.type = \"MultiLineString\";\n        geojson.coordinates = arcgis.paths.slice(0);\n      }\n    }\n\n    if(arcgis.rings) {\n      geojson = convertRingsToGeoJSON(arcgis.rings.slice(0));\n    }\n\n    if(arcgis.compressedGeometry || arcgis.geometry || arcgis.attributes) {\n      geojson.type = \"Feature\";\n\n      if(arcgis.compressedGeometry){\n        arcgis.geometry = {\n          paths: [\n            decompressGeometry(arcgis.compressedGeometry)\n          ]\n        };\n      }\n\n      geojson.geometry = (arcgis.geometry) ? parse(arcgis.geometry) : null;\n      geojson.properties = (arcgis.attributes) ? clone(arcgis.attributes) : null;\n      if(arcgis.attributes) {\n        geojson.id =  arcgis.attributes[options.idAttribute] || arcgis.attributes.OBJECTID || arcgis.attributes.FID;\n      }\n    }\n\n    var inputSpatialReference = (arcgis.geometry) ? arcgis.geometry.spatialReference : arcgis.spatialReference;\n\n    //convert spatial ref if needed\n    if(inputSpatialReference && inputSpatialReference.wkid === 102100){\n      geojson = Terraformer.toGeographic(geojson);\n    }\n\n    return new Terraformer.Primitive(geojson);\n  }\n\n  // GeoJSON -> ArcGIS\n  function convert(geojson, options){\n    var spatialReference;\n\n    options = options || {};\n    var idAttribute = options.idAttribute || \"OBJECTID\";\n\n    if(options.sr){\n      spatialReference = { wkid: options.sr };\n    } else if (geojson && geojson.crs === Terraformer.MercatorCRS) {\n      spatialReference = { wkid: 102100 };\n    } else {\n      spatialReference = { wkid: 4326 };\n    }\n\n    var result = {};\n    var i;\n\n    switch(geojson.type){\n    case \"Point\":\n      result.x = geojson.coordinates[0];\n      result.y = geojson.coordinates[1];\n      if(geojson.coordinates[2]) {\n        result.z = geojson.coordinates[2];\n      }\n      if(geojson.coordinates[3]) {\n        result.m = geojson.coordinates[3];\n      }\n      result.spatialReference = spatialReference;\n      break;\n    case \"MultiPoint\":\n      result.points = geojson.coordinates.slice(0);\n      result.spatialReference = spatialReference;\n      break;\n    case \"LineString\":\n      result.paths = [geojson.coordinates.slice(0)];\n      result.spatialReference = spatialReference;\n      break;\n    case \"MultiLineString\":\n      result.paths = geojson.coordinates.slice(0);\n      result.spatialReference = spatialReference;\n      break;\n    case \"Polygon\":\n      result.rings = orientRings(geojson.coordinates.slice(0));\n      result.spatialReference = spatialReference;\n      break;\n    case \"MultiPolygon\":\n      result.rings = flattenMultiPolygonRings(geojson.coordinates.slice(0));\n      result.spatialReference = spatialReference;\n      break;\n    case \"Feature\":\n      if(geojson.geometry) {\n        result.geometry = convert(geojson.geometry, options);\n      }\n      result.attributes = (geojson.properties) ? clone(geojson.properties) : {};\n      if(geojson.id) {\n        result.attributes[idAttribute] = geojson.id;\n      }\n      break;\n    case \"FeatureCollection\":\n      result = [];\n      for (i = 0; i < geojson.features.length; i++){\n        result.push(convert(geojson.features[i], options));\n      }\n      break;\n    case \"GeometryCollection\":\n      result = [];\n      for (i = 0; i < geojson.geometries.length; i++){\n        result.push(convert(geojson.geometries[i], options));\n      }\n      break;\n    }\n\n    return result;\n  }\n\n  function parseCompressedGeometry(string){\n    return new Terraformer.LineString(decompressGeometry(string));\n  }\n\n  exports.parse   = parse;\n  exports.convert = convert;\n  exports.toGeoJSON = parse;\n  exports.fromGeoJSON = convert;\n  exports.parseCompressedGeometry = parseCompressedGeometry;\n\n  return exports;\n}));\n\n},{\"terraformer\":145}],144:[function(_dereq_,module,exports){\n(function (global){\n\"use strict\";\r\n\r\n(function (f) {\r\n    if (typeof exports === \"object\" && typeof module !== \"undefined\") {\r\n        module.exports = f();\r\n    } else if (typeof define === \"function\" && define.amd) {\r\n        define([], f);\r\n    } else {\r\n        var g;if (typeof window !== \"undefined\") {\r\n            g = window;\r\n        } else if (typeof global !== \"undefined\") {\r\n            g = global;\r\n        } else if (typeof self !== \"undefined\") {\r\n            g = self;\r\n        } else {\r\n            g = this;\r\n        }g.terraformerProj4js = f();\r\n    }\r\n})(function () {\r\n    var define, module, exports;return (function e(t, n, r) {\r\n        function s(o, u) {\r\n            if (!n[o]) {\r\n                if (!t[o]) {\r\n                    var a = typeof _dereq_ == \"function\" && _dereq_;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw (f.code = \"MODULE_NOT_FOUND\", f);\r\n                }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\r\n                    var n = t[o][1][e];return s(n ? n : e);\r\n                }, l, l.exports, e, t, n, r);\r\n            }return n[o].exports;\r\n        }var i = typeof _dereq_ == \"function\" && _dereq_;for (var o = 0; o < r.length; o++) s(r[o]);return s;\r\n    })({ 1: [function (_dereq_, module, exports) {\r\n            'use strict';\r\n            function makeConverter(Terraformer, proj4) {\r\n\r\n                // returns true if the spatial reference string is ID based and not defined in proj4\r\n                // returns false if ID based and defined, or a different projection type (like WKT).\r\n                // for now, we consider any projection string that begins with 'EPSG:' to be ID based\r\n                function invalidProjID(sr) {\r\n                    return !proj4.defs(sr) && sr.indexOf('EPSG:') === 0;\r\n                }\r\n\r\n                return function (geojson, outputSpatialReference, inputSpatialReference) {\r\n                    var inSr = inputSpatialReference;\r\n                    var outSr = outputSpatialReference;\r\n                    var urnRegex = /urn:ogc:def:crs:EPSG::(\\d+)/;\r\n\r\n                    // no supplied input SR, but geojson has SR defined\r\n                    if (!inSr && geojson.crs && geojson.crs.type === 'name') {\r\n                        var matches = geojson.crs.properties.name.match(urnRegex);\r\n                        inSr = matches ? 'EPSG:' + matches[1] : geojson.crs.properties.name;\r\n                    }\r\n\r\n                    if (!inSr) {\r\n                        inSr = 'EPSG:4326';\r\n                    } else if (invalidProjID(inSr)) {\r\n                        throw new Error('Projection: ' + inSr + ' could not be found in proj4.defs');\r\n                    }\r\n\r\n                    if (!outSr) {\r\n                        outSr = 'EPSG:4326';\r\n                        if (outSr === inSr) {\r\n                            return;\r\n                        }\r\n                    } else if (invalidProjID(outSr)) {\r\n                        throw new Error('Projection: ' + outSr + ' could not be found in proj4.defs');\r\n                    }\r\n\r\n                    var projFunc = proj4(inSr, outSr).forward;\r\n                    return Terraformer.Tools.applyConverter(geojson, projFunc);\r\n                };\r\n            }\r\n\r\n            module.exports = makeConverter;\r\n        }, {}] }, {}, [1])(1);\r\n});\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],145:[function(_dereq_,module,exports){\n(function (root, factory) {\n\n  // Node.\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    exports = module.exports = factory();\n  }\n\n  // Browser Global.\n  if(typeof window === \"object\") {\n    root.Terraformer = factory();\n  }\n\n}(this, function(){\n  var exports = {},\n      EarthRadius = 6378137,\n      DegreesPerRadian = 57.295779513082320,\n      RadiansPerDegree =  0.017453292519943,\n      MercatorCRS = {\n        \"type\": \"link\",\n        \"properties\": {\n          \"href\": \"http://spatialreference.org/ref/sr-org/6928/ogcwkt/\",\n          \"type\": \"ogcwkt\"\n        }\n      },\n      GeographicCRS = {\n        \"type\": \"link\",\n        \"properties\": {\n          \"href\": \"http://spatialreference.org/ref/epsg/4326/ogcwkt/\",\n          \"type\": \"ogcwkt\"\n        }\n      };\n\n  /*\n  Internal: isArray function\n  */\n  function isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  }\n\n  /*\n  Internal: safe warning\n  */\n  function warn() {\n    var args = Array.prototype.slice.apply(arguments);\n\n    if (typeof console !== undefined && console.warn) {\n      console.warn.apply(console, args);\n    }\n  }\n\n  /*\n  Internal: Extend one object with another.\n  */\n  function extend(destination, source) {\n    for (var k in source) {\n      if (source.hasOwnProperty(k)) {\n        destination[k] = source[k];\n      }\n    }\n    return destination;\n  }\n\n  /*\n  Public: Calculate an bounding box for a geojson object\n  */\n  function calculateBounds (geojson) {\n    if(geojson.type){\n      switch (geojson.type) {\n        case 'Point':\n          return [ geojson.coordinates[0], geojson.coordinates[1], geojson.coordinates[0], geojson.coordinates[1]];\n\n        case 'MultiPoint':\n          return calculateBoundsFromArray(geojson.coordinates);\n\n        case 'LineString':\n          return calculateBoundsFromArray(geojson.coordinates);\n\n        case 'MultiLineString':\n          return calculateBoundsFromNestedArrays(geojson.coordinates);\n\n        case 'Polygon':\n          return calculateBoundsFromNestedArrays(geojson.coordinates);\n\n        case 'MultiPolygon':\n          return calculateBoundsFromNestedArrayOfArrays(geojson.coordinates);\n\n        case 'Feature':\n          return geojson.geometry? calculateBounds(geojson.geometry) : null;\n\n        case 'FeatureCollection':\n          return calculateBoundsForFeatureCollection(geojson);\n\n        case 'GeometryCollection':\n          return calculateBoundsForGeometryCollection(geojson);\n\n        default:\n          throw new Error(\"Unknown type: \" + geojson.type);\n      }\n    }\n    return null;\n  }\n\n  /*\n  Internal: Calculate an bounding box from an nested array of positions\n  [\n    [\n      [ [lng, lat],[lng, lat],[lng, lat] ]\n    ]\n    [\n      [lng, lat],[lng, lat],[lng, lat]\n    ]\n    [\n      [lng, lat],[lng, lat],[lng, lat]\n    ]\n  ]\n  */\n  function calculateBoundsFromNestedArrays (array) {\n    var x1 = null, x2 = null, y1 = null, y2 = null;\n\n    for (var i = 0; i < array.length; i++) {\n      var inner = array[i];\n\n      for (var j = 0; j < inner.length; j++) {\n        var lonlat = inner[j];\n\n        var lon = lonlat[0];\n        var lat = lonlat[1];\n\n        if (x1 === null) {\n          x1 = lon;\n        } else if (lon < x1) {\n          x1 = lon;\n        }\n\n        if (x2 === null) {\n          x2 = lon;\n        } else if (lon > x2) {\n          x2 = lon;\n        }\n\n        if (y1 === null) {\n          y1 = lat;\n        } else if (lat < y1) {\n          y1 = lat;\n        }\n\n        if (y2 === null) {\n          y2 = lat;\n        } else if (lat > y2) {\n          y2 = lat;\n        }\n      }\n    }\n\n    return [x1, y1, x2, y2 ];\n  }\n\n  /*\n  Internal: Calculate a bounding box from an array of arrays of arrays\n  [\n    [ [lng, lat],[lng, lat],[lng, lat] ]\n    [ [lng, lat],[lng, lat],[lng, lat] ]\n    [ [lng, lat],[lng, lat],[lng, lat] ]\n  ]\n  */\n  function calculateBoundsFromNestedArrayOfArrays (array) {\n    var x1 = null, x2 = null, y1 = null, y2 = null;\n\n    for (var i = 0; i < array.length; i++) {\n      var inner = array[i];\n\n      for (var j = 0; j < inner.length; j++) {\n        var innerinner = inner[j];\n        for (var k = 0; k < innerinner.length; k++) {\n          var lonlat = innerinner[k];\n\n          var lon = lonlat[0];\n          var lat = lonlat[1];\n\n          if (x1 === null) {\n            x1 = lon;\n          } else if (lon < x1) {\n            x1 = lon;\n          }\n\n          if (x2 === null) {\n            x2 = lon;\n          } else if (lon > x2) {\n            x2 = lon;\n          }\n\n          if (y1 === null) {\n            y1 = lat;\n          } else if (lat < y1) {\n            y1 = lat;\n          }\n\n          if (y2 === null) {\n            y2 = lat;\n          } else if (lat > y2) {\n            y2 = lat;\n          }\n        }\n      }\n    }\n\n    return [x1, y1, x2, y2];\n  }\n\n  /*\n  Internal: Calculate a bounding box from an array of positions\n  [\n    [lng, lat],[lng, lat],[lng, lat]\n  ]\n  */\n  function calculateBoundsFromArray (array) {\n    var x1 = null, x2 = null, y1 = null, y2 = null;\n\n    for (var i = 0; i < array.length; i++) {\n      var lonlat = array[i];\n      var lon = lonlat[0];\n      var lat = lonlat[1];\n\n      if (x1 === null) {\n        x1 = lon;\n      } else if (lon < x1) {\n        x1 = lon;\n      }\n\n      if (x2 === null) {\n        x2 = lon;\n      } else if (lon > x2) {\n        x2 = lon;\n      }\n\n      if (y1 === null) {\n        y1 = lat;\n      } else if (lat < y1) {\n        y1 = lat;\n      }\n\n      if (y2 === null) {\n        y2 = lat;\n      } else if (lat > y2) {\n        y2 = lat;\n      }\n    }\n\n    return [x1, y1, x2, y2 ];\n  }\n\n  /*\n  Internal: Calculate an bounding box for a feature collection\n  */\n  function calculateBoundsForFeatureCollection(featureCollection){\n    var extents = [], extent;\n    for (var i = featureCollection.features.length - 1; i >= 0; i--) {\n      extent = calculateBounds(featureCollection.features[i].geometry);\n      extents.push([extent[0],extent[1]]);\n      extents.push([extent[2],extent[3]]);\n    }\n\n    return calculateBoundsFromArray(extents);\n  }\n\n  /*\n  Internal: Calculate an bounding box for a geometry collection\n  */\n  function calculateBoundsForGeometryCollection(geometryCollection){\n    var extents = [], extent;\n\n    for (var i = geometryCollection.geometries.length - 1; i >= 0; i--) {\n      extent = calculateBounds(geometryCollection.geometries[i]);\n      extents.push([extent[0],extent[1]]);\n      extents.push([extent[2],extent[3]]);\n    }\n\n    return calculateBoundsFromArray(extents);\n  }\n\n  function calculateEnvelope(geojson){\n    var bounds = calculateBounds(geojson);\n    return {\n      x: bounds[0],\n      y: bounds[1],\n      w: Math.abs(bounds[0] - bounds[2]),\n      h: Math.abs(bounds[1] - bounds[3])\n    };\n  }\n\n  /*\n  Internal: Convert radians to degrees. Used by spatial reference converters.\n  */\n  function radToDeg(rad) {\n    return rad * DegreesPerRadian;\n  }\n\n  /*\n  Internal: Convert degrees to radians. Used by spatial reference converters.\n  */\n  function degToRad(deg) {\n    return deg * RadiansPerDegree;\n  }\n\n  /*\n  Internal: Loop over each array in a geojson object and apply a function to it. Used by spatial reference converters.\n  */\n  function eachPosition(coordinates, func) {\n    for (var i = 0; i < coordinates.length; i++) {\n      // we found a number so lets convert this pair\n      if(typeof coordinates[i][0] === \"number\"){\n        coordinates[i] = func(coordinates[i]);\n      }\n      // we found an coordinates array it again and run THIS function against it\n      if(typeof coordinates[i] === \"object\"){\n        coordinates[i] = eachPosition(coordinates[i], func);\n      }\n    }\n    return coordinates;\n  }\n\n  /*\n  Public: Convert a GeoJSON Position object to Geographic (4326)\n  */\n  function positionToGeographic(position) {\n    var x = position[0];\n    var y = position[1];\n    return [radToDeg(x / EarthRadius) - (Math.floor((radToDeg(x / EarthRadius) + 180) / 360) * 360), radToDeg((Math.PI / 2) - (2 * Math.atan(Math.exp(-1.0 * y / EarthRadius))))];\n  }\n\n  /*\n  Public: Convert a GeoJSON Position object to Web Mercator (102100)\n  */\n  function positionToMercator(position) {\n    var lng = position[0];\n    var lat = Math.max(Math.min(position[1], 89.99999), -89.99999);\n    return [degToRad(lng) * EarthRadius, EarthRadius/2.0 * Math.log( (1.0 + Math.sin(degToRad(lat))) / (1.0 - Math.sin(degToRad(lat))) )];\n  }\n\n  /*\n  Public: Apply a function agaist all positions in a geojson object. Used by spatial reference converters.\n  */\n  function applyConverter(geojson, converter, noCrs){\n    if(geojson.type === \"Point\") {\n      geojson.coordinates = converter(geojson.coordinates);\n    } else if(geojson.type === \"Feature\") {\n      geojson.geometry = applyConverter(geojson.geometry, converter, true);\n    } else if(geojson.type === \"FeatureCollection\") {\n      for (var f = 0; f < geojson.features.length; f++) {\n        geojson.features[f] = applyConverter(geojson.features[f], converter, true);\n      }\n    } else if(geojson.type === \"GeometryCollection\") {\n      for (var g = 0; g < geojson.geometries.length; g++) {\n        geojson.geometries[g] = applyConverter(geojson.geometries[g], converter, true);\n      }\n    } else {\n      geojson.coordinates = eachPosition(geojson.coordinates, converter);\n    }\n\n    if(!noCrs){\n      if(converter === positionToMercator){\n        geojson.crs = MercatorCRS;\n      }\n    }\n\n    if(converter === positionToGeographic){\n      delete geojson.crs;\n    }\n\n    return geojson;\n  }\n\n  /*\n  Public: Convert a GeoJSON object to ESRI Web Mercator (102100)\n  */\n  function toMercator(geojson) {\n    return applyConverter(geojson, positionToMercator);\n  }\n\n  /*\n  Convert a GeoJSON object to Geographic coordinates (WSG84, 4326)\n  */\n  function toGeographic(geojson) {\n    return applyConverter(geojson, positionToGeographic);\n  }\n\n\n  /*\n  Internal: -1,0,1 comparison function\n  */\n  function cmp(a, b) {\n    if(a < b) {\n      return -1;\n    } else if(a > b) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  /*\n  Internal: used for sorting\n  */\n  function compSort(p1, p2) {\n    if (p1[0] > p2[0]) {\n      return -1;\n    } else if (p1[0] < p2[0]) {\n      return 1;\n    } else if (p1[1] > p2[1]) {\n      return -1;\n    } else if (p1[1] < p2[1]) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n\n  /*\n  Internal: used to determine turn\n  */\n  function turn(p, q, r) {\n    // Returns -1, 0, 1 if p,q,r forms a right, straight, or left turn.\n    return cmp((q[0] - p[0]) * (r[1] - p[1]) - (r[0] - p[0]) * (q[1] - p[1]), 0);\n  }\n\n  /*\n  Internal: used to determine euclidean distance between two points\n  */\n  function euclideanDistance(p, q) {\n    // Returns the squared Euclidean distance between p and q.\n    var dx = q[0] - p[0];\n    var dy = q[1] - p[1];\n\n    return dx * dx + dy * dy;\n  }\n\n  function nextHullPoint(points, p) {\n    // Returns the next point on the convex hull in CCW from p.\n    var q = p;\n    for(var r in points) {\n      var t = turn(p, q, points[r]);\n      if(t === -1 || t === 0 && euclideanDistance(p, points[r]) > euclideanDistance(p, q)) {\n        q = points[r];\n      }\n    }\n    return q;\n  }\n\n  function convexHull(points) {\n    // implementation of the Jarvis March algorithm\n    // adapted from http://tixxit.wordpress.com/2009/12/09/jarvis-march/\n\n    if(points.length === 0) {\n      return [];\n    } else if(points.length === 1) {\n      return points;\n    }\n\n    // Returns the points on the convex hull of points in CCW order.\n    var hull = [points.sort(compSort)[0]];\n\n    for(var p = 0; p < hull.length; p++) {\n      var q = nextHullPoint(points, hull[p]);\n\n      if(q !== hull[0]) {\n        hull.push(q);\n      }\n    }\n\n    return hull;\n  }\n\n  function isConvex(points) {\n    var ltz;\n\n    for (var i = 0; i < points.length - 3; i++) {\n      var p1 = points[i];\n      var p2 = points[i + 1];\n      var p3 = points[i + 2];\n      var v = [p2[0] - p1[0], p2[1] - p1[1]];\n\n      // p3.x * v.y - p3.y * v.x + v.x * p1.y - v.y * p1.x\n      var res = p3[0] * v[1] - p3[1] * v[0] + v[0] * p1[1] - v[1] * p1[0];\n\n      if (i === 0) {\n        if (res < 0) {\n          ltz = true;\n        } else {\n          ltz = false;\n        }\n      } else {\n        if (ltz && (res > 0) || !ltz && (res < 0)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function coordinatesContainPoint(coordinates, point) {\n    var contains = false;\n    for(var i = -1, l = coordinates.length, j = l - 1; ++i < l; j = i) {\n      if (((coordinates[i][1] <= point[1] && point[1] < coordinates[j][1]) ||\n           (coordinates[j][1] <= point[1] && point[1] < coordinates[i][1])) &&\n          (point[0] < (coordinates[j][0] - coordinates[i][0]) * (point[1] - coordinates[i][1]) / (coordinates[j][1] - coordinates[i][1]) + coordinates[i][0])) {\n        contains = !contains;\n      }\n    }\n    return contains;\n  }\n\n  function polygonContainsPoint(polygon, point) {\n    if (polygon && polygon.length) {\n      if (polygon.length === 1) { // polygon with no holes\n        return coordinatesContainPoint(polygon[0], point);\n      } else { // polygon with holes\n        if (coordinatesContainPoint(polygon[0], point)) {\n          for (var i = 1; i < polygon.length; i++) {\n            if (coordinatesContainPoint(polygon[i], point)) {\n              return false; // found in hole\n            }\n          }\n\n          return true;\n        } else {\n          return false;\n        }\n      }\n    } else {\n      return false;\n    }\n  }\n\n  function edgeIntersectsEdge(a1, a2, b1, b2) {\n    var ua_t = (b2[0] - b1[0]) * (a1[1] - b1[1]) - (b2[1] - b1[1]) * (a1[0] - b1[0]);\n    var ub_t = (a2[0] - a1[0]) * (a1[1] - b1[1]) - (a2[1] - a1[1]) * (a1[0] - b1[0]);\n    var u_b  = (b2[1] - b1[1]) * (a2[0] - a1[0]) - (b2[0] - b1[0]) * (a2[1] - a1[1]);\n\n    if ( u_b !== 0 ) {\n      var ua = ua_t / u_b;\n      var ub = ub_t / u_b;\n\n      if ( 0 <= ua && ua <= 1 && 0 <= ub && ub <= 1 ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function arraysIntersectArrays(a, b) {\n    if (isNumber(a[0][0])) {\n      if (isNumber(b[0][0])) {\n        for (var i = 0; i < a.length - 1; i++) {\n          for (var j = 0; j < b.length - 1; j++) {\n            if (edgeIntersectsEdge(a[i], a[i + 1], b[j], b[j + 1])) {\n              return true;\n            }\n          }\n        }\n      } else {\n        for (var k = 0; k < b.length; k++) {\n          if (arraysIntersectArrays(a, b[k])) {\n            return true;\n          }\n        }\n      }\n    } else {\n      for (var l = 0; l < a.length; l++) {\n        if (arraysIntersectArrays(a[l], b)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /*\n  Internal: Returns a copy of coordinates for s closed polygon\n  */\n  function closedPolygon(coordinates) {\n    var outer = [ ];\n\n    for (var i = 0; i < coordinates.length; i++) {\n      var inner = coordinates[i].slice();\n      if (pointsEqual(inner[0], inner[inner.length - 1]) === false) {\n        inner.push(inner[0]);\n      }\n\n      outer.push(inner);\n    }\n\n    return outer;\n  }\n\n  function pointsEqual(a, b) {\n    for (var i = 0; i < a.length; i++) {\n\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function coordinatesEqual(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    var na = a.slice().sort(compSort);\n    var nb = b.slice().sort(compSort);\n\n    for (var i = 0; i < na.length; i++) {\n      if (na[i].length !== nb[i].length) {\n        return false;\n      }\n      for (var j = 0; j < na.length; j++) {\n        if (na[i][j] !== nb[i][j]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /*\n  Internal: An array of variables that will be excluded form JSON objects.\n  */\n  var excludeFromJSON = [\"length\"];\n\n  /*\n  Internal: Base GeoJSON Primitive\n  */\n  function Primitive(geojson){\n    if(geojson){\n      switch (geojson.type) {\n      case 'Point':\n        return new Point(geojson);\n\n      case 'MultiPoint':\n        return new MultiPoint(geojson);\n\n      case 'LineString':\n        return new LineString(geojson);\n\n      case 'MultiLineString':\n        return new MultiLineString(geojson);\n\n      case 'Polygon':\n        return new Polygon(geojson);\n\n      case 'MultiPolygon':\n        return new MultiPolygon(geojson);\n\n      case 'Feature':\n        return new Feature(geojson);\n\n      case 'FeatureCollection':\n        return new FeatureCollection(geojson);\n\n      case 'GeometryCollection':\n        return new GeometryCollection(geojson);\n\n      default:\n        throw new Error(\"Unknown type: \" + geojson.type);\n      }\n    }\n  }\n\n  Primitive.prototype.toMercator = function(){\n    return toMercator(this);\n  };\n\n  Primitive.prototype.toGeographic = function(){\n    return toGeographic(this);\n  };\n\n  Primitive.prototype.envelope = function(){\n    return calculateEnvelope(this);\n  };\n\n  Primitive.prototype.bbox = function(){\n    return calculateBounds(this);\n  };\n\n  Primitive.prototype.convexHull = function(){\n    var coordinates = [ ], i, j;\n    if (this.type === 'Point') {\n      return null;\n    } else if (this.type === 'LineString' || this.type === 'MultiPoint') {\n      if (this.coordinates && this.coordinates.length >= 3) {\n        coordinates = this.coordinates;\n      } else {\n        return null;\n      }\n    } else if (this.type === 'Polygon' || this.type === 'MultiLineString') {\n      if (this.coordinates && this.coordinates.length > 0) {\n        for (i = 0; i < this.coordinates.length; i++) {\n          coordinates = coordinates.concat(this.coordinates[i]);\n        }\n        if(coordinates.length < 3){\n          return null;\n        }\n      } else {\n        return null;\n      }\n    } else if (this.type === 'MultiPolygon') {\n      if (this.coordinates && this.coordinates.length > 0) {\n        for (i = 0; i < this.coordinates.length; i++) {\n          for (j = 0; j < this.coordinates[i].length; j++) {\n            coordinates = coordinates.concat(this.coordinates[i][j]);\n          }\n        }\n        if(coordinates.length < 3){\n          return null;\n        }\n      } else {\n        return null;\n      }\n    } else if(this.type === \"Feature\"){\n      var primitive = new Primitive(this.geometry);\n      return primitive.convexHull();\n    }\n\n    return new Polygon({\n      type: 'Polygon',\n      coordinates: closedPolygon([convexHull(coordinates)])\n    });\n  };\n\n  Primitive.prototype.toJSON = function(){\n    var obj = {};\n    for (var key in this) {\n      if (this.hasOwnProperty(key) && excludeFromJSON.indexOf(key) === -1) {\n        obj[key] = this[key];\n      }\n    }\n    obj.bbox = calculateBounds(this);\n    return obj;\n  };\n\n  Primitive.prototype.contains = function(primitive){\n    return new Primitive(primitive).within(this);\n  };\n\n  Primitive.prototype.within = function(primitive) {\n    var coordinates, i, contains;\n\n    // if we are passed a feature, use the polygon inside instead\n    if (primitive.type === 'Feature') {\n      primitive = primitive.geometry;\n    }\n\n    // point.within(point) :: equality\n    if (primitive.type === \"Point\") {\n      if (this.type === \"Point\") {\n        return pointsEqual(this.coordinates, primitive.coordinates);\n\n      }\n    }\n\n    // point.within(multilinestring)\n    if (primitive.type === \"MultiLineString\") {\n      if (this.type === \"Point\") {\n        for (i = 0; i < primitive.coordinates.length; i++) {\n          var linestring = { type: \"LineString\", coordinates: primitive.coordinates[i] };\n\n          if (this.within(linestring)) {\n            return true;\n          }\n        }\n      }\n    }\n\n    // point.within(linestring), point.within(multipoint)\n    if (primitive.type === \"LineString\" || primitive.type === \"MultiPoint\") {\n      if (this.type === \"Point\") {\n        for (i = 0; i < primitive.coordinates.length; i++) {\n          if (this.coordinates.length !== primitive.coordinates[i].length) {\n            return false;\n          }\n\n          if (pointsEqual(this.coordinates, primitive.coordinates[i])) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (primitive.type === \"Polygon\") {\n      // polygon.within(polygon)\n      if (this.type === \"Polygon\") {\n        // check for equal polygons\n        if (primitive.coordinates.length === this.coordinates.length) {\n          for (i = 0; i < this.coordinates.length; i++) {\n            if (coordinatesEqual(this.coordinates[i], primitive.coordinates[i])) {\n              return true;\n            }\n          }\n        }\n\n        if (this.coordinates.length && polygonContainsPoint(primitive.coordinates, this.coordinates[0][0])) {\n          return !arraysIntersectArrays(closedPolygon(this.coordinates), closedPolygon(primitive.coordinates));\n        } else {\n          return false;\n        }\n\n      // point.within(polygon)\n      } else if (this.type === \"Point\") {\n        return polygonContainsPoint(primitive.coordinates, this.coordinates);\n\n      // linestring/multipoint withing polygon\n      } else if (this.type === \"LineString\" || this.type === \"MultiPoint\") {\n        if (!this.coordinates || this.coordinates.length === 0) {\n          return false;\n        }\n\n        for (i = 0; i < this.coordinates.length; i++) {\n          if (polygonContainsPoint(primitive.coordinates, this.coordinates[i]) === false) {\n            return false;\n          }\n        }\n\n        return true;\n\n      // multilinestring.within(polygon)\n      } else if (this.type === \"MultiLineString\") {\n        for (i = 0; i < this.coordinates.length; i++) {\n          var ls = new LineString(this.coordinates[i]);\n\n          if (ls.within(primitive) === false) {\n            contains++;\n            return false;\n          }\n        }\n\n        return true;\n\n      // multipolygon.within(polygon)\n      } else if (this.type === \"MultiPolygon\") {\n        for (i = 0; i < this.coordinates.length; i++) {\n          var p1 = new Primitive({ type: \"Polygon\", coordinates: this.coordinates[i] });\n\n          if (p1.within(primitive) === false) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n    }\n\n    if (primitive.type === \"MultiPolygon\") {\n      // point.within(multipolygon)\n      if (this.type === \"Point\") {\n        if (primitive.coordinates.length) {\n          for (i = 0; i < primitive.coordinates.length; i++) {\n            coordinates = primitive.coordinates[i];\n            if (polygonContainsPoint(coordinates, this.coordinates) && arraysIntersectArrays([this.coordinates], primitive.coordinates) === false) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      // polygon.within(multipolygon)\n      } else if (this.type === \"Polygon\") {\n        for (i = 0; i < this.coordinates.length; i++) {\n          if (primitive.coordinates[i].length === this.coordinates.length) {\n            for (j = 0; j < this.coordinates.length; j++) {\n              if (coordinatesEqual(this.coordinates[j], primitive.coordinates[i][j])) {\n                return true;\n              }\n            }\n          }\n        }\n\n        if (arraysIntersectArrays(this.coordinates, primitive.coordinates) === false) {\n          if (primitive.coordinates.length) {\n            for (i = 0; i < primitive.coordinates.length; i++) {\n              coordinates = primitive.coordinates[i];\n              if (polygonContainsPoint(coordinates, this.coordinates[0][0]) === false) {\n                contains = false;\n              } else {\n                contains = true;\n              }\n            }\n\n            return contains;\n          }\n        }\n\n      // linestring.within(multipolygon), multipoint.within(multipolygon)\n      } else if (this.type === \"LineString\" || this.type === \"MultiPoint\") {\n        for (i = 0; i < primitive.coordinates.length; i++) {\n          var p = { type: \"Polygon\", coordinates: primitive.coordinates[i] };\n\n          if (this.within(p)) {\n            return true;\n          }\n\n          return false;\n        }\n\n      // multilinestring.within(multipolygon)\n      } else if (this.type === \"MultiLineString\") {\n        for (i = 0; i < this.coordinates.length; i++) {\n          var lines = new LineString(this.coordinates[i]);\n\n          if (lines.within(primitive) === false) {\n            return false;\n          }\n        }\n\n        return true;\n\n      // multipolygon.within(multipolygon)\n      } else if (this.type === \"MultiPolygon\") {\n        for (i = 0; i < primitive.coordinates.length; i++) {\n          var mpoly = { type: \"Polygon\", coordinates: primitive.coordinates[i] };\n\n          if (this.within(mpoly) === false) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    // default to false\n    return false;\n  };\n\n  Primitive.prototype.intersects = function(primitive) {\n    // if we are passed a feature, use the polygon inside instead\n    if (primitive.type === 'Feature') {\n      primitive = primitive.geometry;\n    }\n\n    var p = new Primitive(primitive);\n    if (this.within(primitive) || p.within(this)) {\n      return true;\n    }\n\n\n    if (this.type !== 'Point' && this.type !== 'MultiPoint' &&\n        primitive.type !== 'Point' && primitive.type !== 'MultiPoint') {\n      return arraysIntersectArrays(this.coordinates, primitive.coordinates);\n    } else if (this.type === 'Feature') {\n      // in the case of a Feature, use the internal primitive for intersection\n      var inner = new Primitive(this.geometry);\n      return inner.intersects(primitive);\n    }\n\n    warn(\"Type \" + this.type + \" to \" + primitive.type + \" intersection is not supported by intersects\");\n    return false;\n  };\n\n\n  /*\n  GeoJSON Point Class\n    new Point();\n    new Point(x,y,z,wtf);\n    new Point([x,y,z,wtf]);\n    new Point([x,y]);\n    new Point({\n      type: \"Point\",\n      coordinates: [x,y]\n    });\n  */\n  function Point(input){\n    var args = Array.prototype.slice.call(arguments);\n\n    if(input && input.type === \"Point\" && input.coordinates){\n      extend(this, input);\n    } else if(input && isArray(input)) {\n      this.coordinates = input;\n    } else if(args.length >= 2) {\n      this.coordinates = args;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.Point\";\n    }\n\n    this.type = \"Point\";\n  }\n\n  Point.prototype = new Primitive();\n  Point.prototype.constructor = Point;\n\n  /*\n  GeoJSON MultiPoint Class\n      new MultiPoint();\n      new MultiPoint([[x,y], [x1,y1]]);\n      new MultiPoint({\n        type: \"MultiPoint\",\n        coordinates: [x,y]\n      });\n  */\n  function MultiPoint(input){\n    if(input && input.type === \"MultiPoint\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.MultiPoint\";\n    }\n\n    this.type = \"MultiPoint\";\n  }\n\n  MultiPoint.prototype = new Primitive();\n  MultiPoint.prototype.constructor = MultiPoint;\n  MultiPoint.prototype.forEach = function(func){\n    for (var i = 0; i < this.coordinates.length; i++) {\n      func.apply(this, [this.coordinates[i], i, this.coordinates]);\n    }\n    return this;\n  };\n  MultiPoint.prototype.addPoint = function(point){\n    this.coordinates.push(point);\n    return this;\n  };\n  MultiPoint.prototype.insertPoint = function(point, index){\n    this.coordinates.splice(index, 0, point);\n    return this;\n  };\n  MultiPoint.prototype.removePoint = function(remove){\n    if(typeof remove === \"number\"){\n      this.coordinates.splice(remove, 1);\n    } else {\n      this.coordinates.splice(this.coordinates.indexOf(remove), 1);\n    }\n    return this;\n  };\n  MultiPoint.prototype.get = function(i){\n    return new Point(this.coordinates[i]);\n  };\n\n  /*\n  GeoJSON LineString Class\n      new LineString();\n      new LineString([[x,y], [x1,y1]]);\n      new LineString({\n        type: \"LineString\",\n        coordinates: [x,y]\n      });\n  */\n  function LineString(input){\n    if(input && input.type === \"LineString\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.LineString\";\n    }\n\n    this.type = \"LineString\";\n  }\n\n  LineString.prototype = new Primitive();\n  LineString.prototype.constructor = LineString;\n  LineString.prototype.addVertex = function(point){\n    this.coordinates.push(point);\n    return this;\n  };\n  LineString.prototype.insertVertex = function(point, index){\n    this.coordinates.splice(index, 0, point);\n    return this;\n  };\n  LineString.prototype.removeVertex = function(remove){\n    this.coordinates.splice(remove, 1);\n    return this;\n  };\n\n  /*\n  GeoJSON MultiLineString Class\n      new MultiLineString();\n      new MultiLineString([ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ]);\n      new MultiLineString({\n        type: \"MultiLineString\",\n        coordinates: [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ]\n      });\n  */\n  function MultiLineString(input){\n    if(input && input.type === \"MultiLineString\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.MultiLineString\";\n    }\n\n    this.type = \"MultiLineString\";\n  }\n\n  MultiLineString.prototype = new Primitive();\n  MultiLineString.prototype.constructor = MultiLineString;\n  MultiLineString.prototype.forEach = function(func){\n    for (var i = 0; i < this.coordinates.length; i++) {\n      func.apply(this, [this.coordinates[i], i, this.coordinates ]);\n    }\n  };\n  MultiLineString.prototype.get = function(i){\n    return new LineString(this.coordinates[i]);\n  };\n\n  /*\n  GeoJSON Polygon Class\n      new Polygon();\n      new Polygon([ [[x,y], [x1,y1], [x2,y2]] ]);\n      new Polygon({\n        type: \"Polygon\",\n        coordinates: [ [[x,y], [x1,y1], [x2,y2]] ]\n      });\n  */\n  function Polygon(input){\n    if(input && input.type === \"Polygon\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.Polygon\";\n    }\n\n    this.type = \"Polygon\";\n  }\n\n  Polygon.prototype = new Primitive();\n  Polygon.prototype.constructor = Polygon;\n  Polygon.prototype.addVertex = function(point){\n    this.insertVertex(point, this.coordinates[0].length - 1);\n    return this;\n  };\n  Polygon.prototype.insertVertex = function(point, index){\n    this.coordinates[0].splice(index, 0, point);\n    return this;\n  };\n  Polygon.prototype.removeVertex = function(remove){\n    this.coordinates[0].splice(remove, 1);\n    return this;\n  };\n  Polygon.prototype.close = function() {\n    this.coordinates = closedPolygon(this.coordinates);\n  };\n  Polygon.prototype.hasHoles = function() {\n    return this.coordinates.length > 1;\n  };\n  Polygon.prototype.holes = function() {\n    holes = [];\n    if (this.hasHoles()) {\n      for (var i = 1; i < this.coordinates.length; i++) {\n        holes.push(new Polygon([this.coordinates[i]]));\n      }\n    }\n    return holes;\n  };\n\n  /*\n  GeoJSON MultiPolygon Class\n      new MultiPolygon();\n      new MultiPolygon([ [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ] ]);\n      new MultiPolygon({\n        type: \"MultiPolygon\",\n        coordinates: [ [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ] ]\n      });\n  */\n  function MultiPolygon(input){\n    if(input && input.type === \"MultiPolygon\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.MultiPolygon\";\n    }\n\n    this.type = \"MultiPolygon\";\n  }\n\n  MultiPolygon.prototype = new Primitive();\n  MultiPolygon.prototype.constructor = MultiPolygon;\n  MultiPolygon.prototype.forEach = function(func){\n    for (var i = 0; i < this.coordinates.length; i++) {\n      func.apply(this, [this.coordinates[i], i, this.coordinates ]);\n    }\n  };\n  MultiPolygon.prototype.get = function(i){\n    return new Polygon(this.coordinates[i]);\n  };\n  MultiPolygon.prototype.close = function(){\n    var outer = [];\n    this.forEach(function(polygon){\n      outer.push(closedPolygon(polygon));\n    });\n    this.coordinates = outer;\n    return this;\n  };\n\n  /*\n  GeoJSON Feature Class\n      new Feature();\n      new Feature({\n        type: \"Feature\",\n        geometry: {\n          type: \"Polygon\",\n          coordinates: [ [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ] ]\n        }\n      });\n      new Feature({\n        type: \"Polygon\",\n        coordinates: [ [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ] ]\n      });\n  */\n  function Feature(input){\n    if(input && input.type === \"Feature\"){\n      extend(this, input);\n    } else if(input && input.type && input.coordinates) {\n      this.geometry = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.Feature\";\n    }\n\n    this.type = \"Feature\";\n  }\n\n  Feature.prototype = new Primitive();\n  Feature.prototype.constructor = Feature;\n\n  /*\n  GeoJSON FeatureCollection Class\n      new FeatureCollection();\n      new FeatureCollection([feature, feature1]);\n      new FeatureCollection({\n        type: \"FeatureCollection\",\n        coordinates: [feature, feature1]\n      });\n  */\n  function FeatureCollection(input){\n    if(input && input.type === \"FeatureCollection\" && input.features){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.features = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.FeatureCollection\";\n    }\n\n    this.type = \"FeatureCollection\";\n  }\n\n  FeatureCollection.prototype = new Primitive();\n  FeatureCollection.prototype.constructor = FeatureCollection;\n  FeatureCollection.prototype.forEach = function(func){\n    for (var i = 0; i < this.features.length; i++) {\n      func.apply(this, [this.features[i], i, this.features]);\n    }\n  };\n  FeatureCollection.prototype.get = function(id){\n    var found;\n    this.forEach(function(feature){\n      if(feature.id === id){\n        found = feature;\n      }\n    });\n    return new Feature(found);\n  };\n\n  /*\n  GeoJSON GeometryCollection Class\n      new GeometryCollection();\n      new GeometryCollection([geometry, geometry1]);\n      new GeometryCollection({\n        type: \"GeometryCollection\",\n        coordinates: [geometry, geometry1]\n      });\n  */\n  function GeometryCollection(input){\n    if(input && input.type === \"GeometryCollection\" && input.geometries){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.geometries = input;\n    } else if(input.coordinates && input.type){\n      this.type = \"GeometryCollection\";\n      this.geometries = [input];\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.GeometryCollection\";\n    }\n\n    this.type = \"GeometryCollection\";\n  }\n\n  GeometryCollection.prototype = new Primitive();\n  GeometryCollection.prototype.constructor = GeometryCollection;\n  GeometryCollection.prototype.forEach = function(func){\n    for (var i = 0; i < this.geometries.length; i++) {\n      func.apply(this, [this.geometries[i], i, this.geometries]);\n    }\n  };\n  GeometryCollection.prototype.get = function(i){\n    return new Primitive(this.geometries[i]);\n  };\n\n  function createCircle(center, radius, interpolate){\n    var mercatorPosition = positionToMercator(center);\n    var steps = interpolate || 64;\n    var polygon = {\n      type: \"Polygon\",\n      coordinates: [[]]\n    };\n    for(var i=1; i<=steps; i++) {\n      var radians = i * (360/steps) * Math.PI / 180;\n      polygon.coordinates[0].push([mercatorPosition[0] + radius * Math.cos(radians), mercatorPosition[1] + radius * Math.sin(radians)]);\n    }\n    polygon.coordinates = closedPolygon(polygon.coordinates);\n\n    return toGeographic(polygon);\n  }\n\n  function Circle (center, radius, interpolate) {\n    var steps = interpolate || 64;\n    var rad = radius || 250;\n\n    if(!center || center.length < 2 || !rad || !steps) {\n      throw new Error(\"Terraformer: missing parameter for Terraformer.Circle\");\n    }\n\n    extend(this, new Feature({\n      type: \"Feature\",\n      geometry: createCircle(center, rad, steps),\n      properties: {\n        radius: rad,\n        center: center,\n        steps: steps\n      }\n    }));\n  }\n\n  Circle.prototype = new Primitive();\n  Circle.prototype.constructor = Circle;\n  Circle.prototype.recalculate = function(){\n    this.geometry = createCircle(this.properties.center, this.properties.radius, this.properties.steps);\n    return this;\n  };\n  Circle.prototype.center = function(coordinates){\n    if(coordinates){\n      this.properties.center = coordinates;\n      this.recalculate();\n    }\n    return this.properties.center;\n  };\n  Circle.prototype.radius = function(radius){\n    if(radius){\n      this.properties.radius = radius;\n      this.recalculate();\n    }\n    return this.properties.radius;\n  };\n  Circle.prototype.steps = function(steps){\n    if(steps){\n      this.properties.steps = steps;\n      this.recalculate();\n    }\n    return this.properties.steps;\n  };\n\n  Circle.prototype.toJSON = function() {\n    var output = Primitive.prototype.toJSON.call(this);\n    return output;\n  };\n\n  exports.Primitive = Primitive;\n  exports.Point = Point;\n  exports.MultiPoint = MultiPoint;\n  exports.LineString = LineString;\n  exports.MultiLineString = MultiLineString;\n  exports.Polygon = Polygon;\n  exports.MultiPolygon = MultiPolygon;\n  exports.Feature = Feature;\n  exports.FeatureCollection = FeatureCollection;\n  exports.GeometryCollection = GeometryCollection;\n  exports.Circle = Circle;\n\n  exports.toMercator = toMercator;\n  exports.toGeographic = toGeographic;\n\n  exports.Tools = {};\n  exports.Tools.positionToMercator = positionToMercator;\n  exports.Tools.positionToGeographic = positionToGeographic;\n  exports.Tools.applyConverter = applyConverter;\n  exports.Tools.toMercator = toMercator;\n  exports.Tools.toGeographic = toGeographic;\n  exports.Tools.createCircle = createCircle;\n\n  exports.Tools.calculateBounds = calculateBounds;\n  exports.Tools.calculateEnvelope = calculateEnvelope;\n\n  exports.Tools.coordinatesContainPoint = coordinatesContainPoint;\n  exports.Tools.polygonContainsPoint = polygonContainsPoint;\n  exports.Tools.arraysIntersectArrays = arraysIntersectArrays;\n  exports.Tools.coordinatesContainPoint = coordinatesContainPoint;\n  exports.Tools.coordinatesEqual = coordinatesEqual;\n  exports.Tools.convexHull = convexHull;\n  exports.Tools.isConvex = isConvex;\n\n  exports.MercatorCRS = MercatorCRS;\n  exports.GeographicCRS = GeographicCRS;\n\n  return exports;\n}));\n\n},{}],146:[function(_dereq_,module,exports){\n'use strict';\n\n// TODO consider refactoring this file so that the geoApi object is passed in along with the\n//      esriBundle, then reference the shared module from it.  See layer.js as example.\nvar shared = _dereq_('./shared.js');\n\n/*\r\nStructure and naming:\r\n\r\nthis is the Bundle. it is the topmost object in the structure.\r\nit packages up attributes for an entire layer object (i.e. FeatureLayer, DynamicLayer)\r\n{\r\n    layerId: <layerId for layer>,\r\n    indexes: [\"6\", \"7\"],\r\n    \"6\": {\r\n        <instance of a layer package, see below>\r\n    },\r\n    \"7\": {\r\n        <instance of a layer package, see below>\r\n    }\r\n}\r\n\r\nthis is a layer Package.  it contains information about a single server-side layer.\r\nnote this is not always 1-to-1 with client side. a client side DynamicLayer can have\r\nmany server-side sublayers, each with their own attribute sets\r\n\r\nDO NOT access the ._attribData property directly, as it will not exist until the first\r\nrequest for attributes.  use the function .getAttribs(), as it will properly handle the\r\ninitial request, or return the previously loaded result (always as a promise)\r\n\r\n{\r\n    \"layerId\": \"<layerid>\",\r\n    \"featureIdx\": 3,\r\n    \"getAttribs\": getAttribs(),\r\n    \"_attribData\": Promise(\r\n        <instance of a attribute data object, see below>\r\n    ),\r\n    \"layerData\":  Promise(\r\n        <instance of a layer data object, see below>\r\n    )\r\n}\r\n\r\nthis is an attribute data object.  it resides in a promise (as the data needs to be downloaded)\r\nit contains the attribute data as an array, and an index mapping object id to array position\r\n{\r\n    \"features\": [\r\n        {\r\n            \"attributes\": {\r\n                \"objectid\": 23,\r\n                \"name\": \"Bruce\",\r\n                \"age\": 27\r\n            }\r\n        },\r\n        ...\r\n    ],\r\n        \"oidIndex\": {\r\n        \"23\": 0,\r\n        ...\r\n    }\r\n}\r\n\r\nthis is a layer data object.  it contains information describing the server-side layer\r\n{\r\n    \"fields: [\r\n        {\r\n            \"name\": \"objectid\",\r\n            \"type\": \"esriFieldTypeOID\",\r\n            \"alias\": \"OBJECTID\"\r\n        },\r\n        ...\r\n    ],\r\n    \"oidField\": \"objectid\",\r\n    \"renderer\": {...},\r\n    \"geometryType\": \"esriGeometryPoint\",\r\n    \"minScale\": 0,\r\n    \"maxScale\": 0\r\n}\r\n\r\n*/\n\n/**\r\n* Will generate an empty object structure to store a bundle of attributes for a full layer\r\n* @private\r\n* @return {Object} empty layer bundle object\r\n*/\nfunction newLayerBundle(layerId) {\n    var bundle = {\n        layerId: layerId, // for easy access to know what layer the results belong to\n        indexes: [], // for easy iteration over all indexes in the set\n        registerData: registerData\n    };\n\n    function registerData(layerPackage) {\n        layerPackage.layerId = bundle.layerId; // layerPackage is unaware of layerId. assign it during registration\n        bundle[layerPackage.featureIdx.toString()] = layerPackage;\n        bundle.indexes.push(layerPackage.featureIdx.toString());\n    }\n\n    return bundle;\n}\n\n/**\r\n* Will generate an empty object structure to store attributes for a single layer of features\r\n* @private\r\n* @param  {Integer} featureIdx server index of the layer\r\n* @param  {Object} esriBundle bundle of API classes\r\n* @return {Object} empty layer package object\r\n*/\nfunction newLayerPackage(featureIdx, esriBundle) {\n    // only reason this is in a function is to tack on the lazy-load\n    // attribute function. all object properties are added elsewhere\n    var layerPackage = {\n        featureIdx: featureIdx,\n        getAttribs: getAttribs\n    };\n\n    /**\r\n    * Return promise of attribute data object. First request triggers load\r\n    * @private\r\n    * @return {Promise} promise of attribute data object\r\n    */\n    function getAttribs() {\n        if (layerPackage._attribData) {\n            // attributes have already been downloaded.\n            return layerPackage._attribData;\n        }\n\n        // first request for data. create the promise\n        layerPackage._attribData = new Promise(function (resolve, reject) {\n\n            // first wait for the layer specific data to finish loading\n            // NOTE: by the time the application has access to getAttribs(), the .layerData\n            //       property will have been created.\n            layerPackage.layerData.then(function (layerData) {\n                // FIXME switch to native Promise\n                var defFinished = new esriBundle.Deferred();\n                var params = {\n                    maxId: -1,\n                    batchSize: -1,\n                    layerUrl: layerData.load.layerUrl,\n                    oidField: layerData.oidField,\n                    attribs: layerData.load.attribs,\n                    supportsLimit: layerData.load.supportsLimit,\n                    esriBundle: esriBundle\n                };\n\n                // begin the loading process\n                loadDataBatch(params, defFinished);\n\n                // after all data has been loaded\n                defFinished.promise.then(function (features) {\n                    delete layerData.load; // no longer need this info\n\n                    // resolve the promise with the attribute set\n                    resolve(createAttribSet(layerData.oidField, features));\n                }, function (error) {\n                    console.warn('error getting attribute data for ' + layerData.load.layerUrl);\n\n                    // attrib data deleted so the first check for attribData doesn't return a rejected promise\n                    delete layerPackage._attribData;\n                    reject(error);\n                });\n            });\n        });\n\n        return layerPackage._attribData;\n    }\n\n    return layerPackage;\n}\n\n/**\r\n* Will generate attribute package with object id indexes\r\n* @private\r\n* @param  {String} oidField field containing object id\r\n* @param  {Array} featureData feature objects to index and return\r\n* @return {Object} object containing features and an index by object id\r\n*/\nfunction createAttribSet(oidField, featureData) {\n\n    // add new data to layer data's array\n    var res = {\n        features: featureData,\n        oidIndex: {}\n    };\n\n    // make index on object id\n    featureData.forEach(function (elem, idx) {\n        // map object id to index of object in feature array\n        // use toString, as objectid is integer and will act funny using array notation.\n        res.oidIndex[elem.attributes[oidField].toString()] = idx;\n    });\n\n    return res;\n}\n\n// skim the last number off the Url\n// TODO apply more edge case tests to this function\nfunction getLayerIndex(layerUrl) {\n    var re = /\\/(\\d+)\\/?$/;\n    var matches = layerUrl.match(re);\n    if (matches) {\n        return parseInt(matches[1]);\n    }\n    throw new Error('Cannot extract layer index from url ' + layerUrl);\n}\n\n/**\r\n* Recursive function to load a full set of attributes, regardless of the maximum output size of the service.\r\n* Passes result back on the provided Deferred object.\r\n*\r\n* @private\r\n* @param  {Object} opts options object that consists of these properties\r\n*         - maxId: integer, largest object id that has already been downloaded.\r\n*         - supportsLimit: boolean, indicates if server result will notify us if our request surpassed the record limit.\r\n*         - batchSize: integer, maximum number of results the service will return. if -1, means currently unknown. only required if supportsLimit is false.\r\n*         - layerUrl: string, URL to feature layer endpoint.\r\n*         - oidField: string, name of attribute containing the object id for the layer.\r\n*         - attribs: string, a comma separated list of attributes to download. '*' will download all.\r\n*         - esriBundle: object, standard set of ESRI API objects.\r\n* @param  {Object} callerDef deferred object that resolves when current data has been downloaded\r\n*/\nfunction loadDataBatch(opts, callerDef) {\n    //  fetch attributes from feature layer. where specifies records with id's higher than stuff already\n    //  downloaded. no geometry.\n    // FIXME replace esriRequest with a library that handles proxies better\n    var defData = opts.esriBundle.esriRequest({\n        url: opts.layerUrl + '/query',\n        content: {\n            where: opts.oidField + '>' + opts.maxId,\n            outFields: opts.attribs,\n            returnGeometry: 'false',\n            f: 'json'\n        },\n        callbackParamName: 'callback',\n        handleAs: 'json'\n    });\n\n    defData.then(function (dataResult) {\n        if (dataResult.features) {\n            var len = dataResult.features.length;\n            if (len > 0) {\n                // figure out if we hit the end of the data. different logic for newer vs older servers.\n                var moreData = undefined;\n                if (opts.supportsLimit) {\n                    moreData = dataResult.exceededTransferLimit;\n                } else {\n                    if (opts.batchSize === -1) {\n                        // this is our first batch. set the max batch size to this batch size\n                        opts.batchSize = len;\n                    }\n                    moreData = len >= opts.batchSize;\n                }\n\n                if (moreData) {\n                    // stash the result and call the service again for the next batch of data.\n                    // max id becomes last object id in the current batch\n                    var thisDef = new opts.esriBundle.Deferred();\n                    opts.maxId = dataResult.features[len - 1].attributes[opts.oidField];\n                    loadDataBatch(opts, thisDef);\n\n                    thisDef.then(function (dataArray) {\n                        // chain the next result to our current result, then pass back to caller\n                        callerDef.resolve(dataResult.features.concat(dataArray));\n                    }, function (error) {\n                        callerDef.reject(error);\n                    });\n                } else {\n                    // done thanks\n                    callerDef.resolve(dataResult.features);\n                }\n            } else {\n                // no more data.  we are done\n                callerDef.resolve([]);\n            }\n        } else {\n            // it is possible to have an error, but it comes back on the \"success\" channel.\n            callerDef.reject(dataResult.error);\n        }\n    }, function (error) {\n        callerDef.reject(error);\n    });\n}\n\n/**\r\n* fetch attributes from an ESRI ArcGIS Server Feature Layer Service endpoint\r\n* @param {String} layerUrl an arcgis feature layer service endpoint\r\n* @param {Integer} featureIdx index of where the endpoint is. used for legend output\r\n* @param {String} attribs a comma separated list of attributes to download. '*' will download all\r\n* @param  {Object} esriBundle bundle of API classes\r\n* @return {Object} attributes in a packaged format for asynch access\r\n*/\nfunction loadFeatureAttribs(layerUrl, featureIdx, attribs, esriBundle, geoApi) {\n\n    var layerPackage = newLayerPackage(getLayerIndex(layerUrl), esriBundle);\n\n    // get information about this layer, asynch\n    layerPackage.layerData = new Promise(function (resolve, reject) {\n        var layerData = {};\n\n        // extract info for this service\n        var defService = esriBundle.esriRequest({\n            url: layerUrl,\n            content: { f: 'json' },\n            callbackParamName: 'callback',\n            handleAs: 'json'\n        });\n\n        defService.then(function (serviceResult) {\n            if (serviceResult && typeof serviceResult.error === 'undefined') {\n\n                // properties for all endpoints\n                layerData.layerType = serviceResult.type;\n                layerData.geometryType = serviceResult.geometryType;\n                layerData.minScale = serviceResult.minScale;\n                layerData.maxScale = serviceResult.maxScale;\n                layerData.supportsFeatures = false; // saves us from having to keep comparing type to 'Feature Layer' on the client\n\n                if (serviceResult.type === 'Feature Layer') {\n                    layerData.supportsFeatures = true;\n                    layerData.fields = serviceResult.fields;\n\n                    // find object id field\n                    // NOTE cannot use arrow functions here due to bug\n                    serviceResult.fields.every(function (elem) {\n                        if (elem.type === 'esriFieldTypeOID') {\n                            layerData.oidField = elem.name;\n                            return false; // break the loop\n                        }\n\n                        return true; // keep looping\n                    });\n\n                    // ensure our attribute list contains the object id\n                    if (attribs !== '*') {\n                        if (attribs.split(',').indexOf(layerData.oidField) === -1) {\n                            attribs += ',' + layerData.oidField;\n                        }\n                    }\n\n                    // add renderer and legend\n                    layerData.renderer = serviceResult.drawingInfo.renderer;\n                    layerData.legend = geoApi.symbology.rendererToLegend(layerData.renderer, featureIdx);\n                    geoApi.symbology.enhanceRenderer(layerData.renderer, layerData.legend);\n\n                    // temporarily store things for delayed attributes\n                    layerData.load = {\n                        // version number is only provided on 10.0 SP1 servers and up.\n                        // servers 10.1 and higher support the query limit flag\n                        supportsLimit: (serviceResult.currentVersion || 1) >= 10.1,\n                        layerUrl: layerUrl,\n                        attribs: attribs\n                    };\n                }\n\n                // return the layer data promise result\n                resolve(layerData);\n            } else {\n                // case where error happened but service request was successful\n                console.warn('Service metadata load error');\n                if (serviceResult && serviceResult.error) {\n                    // reject with error\n                    reject(serviceResult.error);\n                } else {\n                    reject(new Error('Unknown error loading service metadata'));\n                }\n            }\n        }, function (error) {\n            // failed to load service info. reject with error\n            console.warn('Service metadata load error : ' + error);\n            reject(error);\n        });\n    });\n\n    return layerPackage;\n}\n\n// extract the options (including defaults) for a layer index\nfunction pluckOptions(featureIdx) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    // handle missing layer\n    var opt = options[featureIdx] || {};\n\n    return {\n        skip: opt.skip || false,\n        attribs: opt.attribs || '*'\n    };\n}\n\n/**\r\n* Ochestrate the attribute extraction of a feature layer object.\r\n* @private\r\n* @param  {Object} layer an ESRI API Feature layer object\r\n* @param  {Object} options information on layer and attribute skipping\r\n* @param  {Object} esriBundle bundle of API classes\r\n* @return {Object} attributes in layer bundle format (see newLayerBundle)\r\n*/\nfunction processFeatureLayer(layer, options, esriBundle, geoApi) {\n\n    // logic is in separate function to passify the cyclomatic complexity check.\n    // TODO we may want to support the option of a layer that points to a server based JSON file containing attributes\n\n    var result = newLayerBundle(layer.id);\n\n    if (layer.url) {\n        var idx = getLayerIndex(layer.url);\n        var opts = pluckOptions(idx, options);\n\n        // check for skip flag\n        if (!opts.skip) {\n            // call loadFeatureAttribs with options if present\n            result.registerData(loadFeatureAttribs(layer.url, idx, opts.attribs, esriBundle, geoApi));\n        }\n    } else {\n        // feature layer was loaded from a file.\n        // this approach is inefficient (duplicates attributes in layer and in attribute store),\n        // but provides a consistent approach to attributes regardless of where the layer came from\n\n        var layerPackage = newLayerPackage(0, esriBundle); // files have no index (no server), so we use value 0\n\n        // it's local, no need to lazy-load\n        layerPackage._attribData = Promise.resolve(createAttribSet(layer.objectIdField, layer.graphics.map(function (elem) {\n            return { attributes: elem.attributes };\n        })));\n\n        var renderer = layer.renderer.toJson();\n        var legend = geoApi.symbology.rendererToLegend(renderer, 0);\n        geoApi.symbology.enhanceRenderer(renderer, legend);\n\n        // TODO revisit the geometry type. ideally, fix our GeoJSON to Feature to populate the property\n        layerPackage.layerData = Promise.resolve({\n            oidField: layer.objectIdField,\n            fields: layer.fields,\n            geometryType: layer.geometryType || JSON.parse(layer._json).layerDefinition.drawingInfo.geometryType,\n            minScale: layer.minScale,\n            maxScale: layer.maxScale,\n            renderer: renderer,\n            legend: legend\n        });\n\n        result.registerData(layerPackage);\n    }\n\n    return result;\n}\n\n/**\r\n* Ochestrate the attribute extraction of a dynamic map service layer object.\r\n* @private\r\n* @param  {Object} layer an ESRI API Dynamic Map Service layer object\r\n* @param  {Object} options information on layer and attribute skipping\r\n* @param  {Object} esriBundle bundle of API classes\r\n* @return {Object} attributes in layer bundle format (see newLayerBundle)\r\n*/\nfunction processDynamicLayer(layer, options, esriBundle, geoApi) {\n\n    // logic is in separate function to passify the cyclomatic complexity check.\n    // TODO we may want to support the option of a layer that points to a server based JSON file containing attributes\n\n    var idx = 0;\n    var opts = undefined;\n    var result = newLayerBundle(layer.id);\n    var lInfo = layer.layerInfos;\n\n    // for each layer leaf.  we use a custom loop as we need to skip sections\n    while (idx < lInfo.length) {\n\n        opts = pluckOptions(idx, options);\n\n        //  check if leaf node or group node\n        if (lInfo[idx].subLayerIds) {\n            // group node\n\n            if (opts.skip) {\n                // skip past all child indexes (thus avoiding processing all children).\n                // group indexes have property .subLayerIds that lists indexes of all immediate child layers\n                // child layers can be group layers as well.\n                // example: to skip Group A (index 0), we crawl to Leaf X (index 4), then add 1 to get to sibling layer Leaf W (index 5)\n                //  [0] Group A\n                //      [1] Leaf Z\n                //      [2] Group B\n                //          [3] Leaf Y\n                //          [4] Leaf X\n                //  [5] Leaf W\n\n                var lastIdx = idx;\n                while (lInfo[lastIdx].subLayerIds) {\n                    // find last child index of this group. the last child may be a group itself so we keep processing the while loop\n                    lastIdx = lInfo[lastIdx].subLayerIds[lInfo[lastIdx].subLayerIds.length - 1];\n                }\n\n                // lastIdx has made it to the very last child in the original group node.\n                // advance by 1 to get the next sibling index to the group\n                idx = lastIdx + 1;\n            } else {\n                // advance to the first child layer\n                idx += 1;\n            }\n        } else {\n            // leaf node\n\n            if (!opts.skip) {\n                // load the features, store promise in array\n                result.registerData(loadFeatureAttribs(layer.url + '/' + idx.toString(), idx, opts.attribs, esriBundle, geoApi));\n            }\n\n            // advance the loop\n            idx += 1;\n        }\n    }\n\n    return result;\n}\n\nfunction loadLayerAttribsBuilder(esriBundle, geoApi) {\n\n    /**\r\n    * Fetch attributes from a server-based Layer\r\n    * @param {Object} layer an ESRI API layer object\r\n    * @param {Object} options settings to determine if sub layers or certain attributes should be skipped.\r\n    * @return {Object} attributes bundle for given layer\r\n    */\n    return function (layer, options) {\n        /*\r\n        format of the options object\r\n        all parts are optional.  default values are skip: false and attribs: \"*\"\r\n        {\r\n            \"<layerindex a>\": {\r\n                \"skip\": true\r\n            },\r\n             \"<layerindex b>\": {\r\n                \"skip\": false,\r\n                \"attribs\": \"field3,field8,field11\"\r\n            },\r\n            \"<layerindex d>\": {\r\n            }\r\n        }\r\n        */\n\n        var shr = shared(esriBundle);\n        var lType = shr.getLayerType(layer);\n        switch (lType) {\n            case 'FeatureLayer':\n\n                return processFeatureLayer(layer, options, esriBundle, geoApi);\n\n            case 'ArcGISDynamicMapServiceLayer':\n\n                return processDynamicLayer(layer, options, esriBundle, geoApi);\n\n            // case 'WmsLayer':\n            // case 'ArcGISTiledMapServiceLayer':\n            default:\n                throw new Error('no support for loading attributes from layer type ' + lType);\n        }\n    };\n}\n\n//  Attribute Loader related functions\n// TODO consider re-writing all the asynch stuff with the ECMA-7 style of asynch keywords\nmodule.exports = function (esriBundle, geoApi) {\n    return {\n        loadLayerAttribs: loadLayerAttribsBuilder(esriBundle, geoApi)\n    };\n};\n\n},{\"./shared.js\":162}],147:[function(_dereq_,module,exports){\n'use strict';\n\n/**\r\n  *\r\n  * The `Basemap` module provides basemap related functions.\r\n  *\r\n  * This module exports an object with the following properties\r\n  * - `Basemap` esri/dijit/Basemap class\r\n  * - `BasemapGallery` esri/dijit/BasemapGallery class\r\n  * - `BasemapLayer` esri/dijit/BasemapLayer class\r\n  * - `makeBasemaps` function that makes a basemap gallery based on the settings provided\r\n  */\n\n// Basemap related modules\nmodule.exports = function (esriBundle) {\n    /**\r\n     * Make basemap gallery based on the settings of basemap metadata.\r\n     *\r\n     * @function makeBasemaps\r\n     * @param {Object} basemapsConfig       json config object contains collection/array of basemap settings\r\n     * @param {esriMap} map                 ESRI map object\r\n     * @param {String} anchorId             DOM element where the dijit will be placed\r\n     * @return {Object}                     an object with the following properties:\r\n     * <ul>\r\n     *   <li>setBasemap {function} set current basemap with a basemap uid</li>\r\n     *   <li>basemapGallery {object} basemapGallery object</li>\r\n     * </ul>\r\n     */\n    function makeBasemaps(basemapsConfig, map, anchorId) {\n\n        var basemap = undefined;\n\n        var basemapGallery = new esriBundle.BasemapGallery({\n            showArcGISBasemaps: false,\n            map: map\n        }, anchorId);\n\n        // iterate throuh basemap configs\n        basemapsConfig.forEach(function (basemapConfig) {\n\n            var layers = [];\n\n            basemapConfig.layers.forEach(function (layerConfig) {\n                // create basemap, add to basemap gallery\n                var layer = new esriBundle.BasemapLayer({\n                    url: layerConfig.url\n                });\n\n                layers.push(layer);\n            });\n\n            basemap = new esriBundle.Basemap({\n                id: basemapConfig.id,\n                layers: layers,\n                title: basemapConfig.name,\n                thumbnailUrl: basemapConfig.thumbnailUrl,\n                wkid: basemapConfig.wkid\n            });\n\n            basemapGallery.add(basemap);\n        });\n\n        // finalize basmap gallery\n        basemapGallery.startup();\n\n        // display message\n        // TODO: add ui hook? to display msg on screen\n        basemapGallery.on('error', function (msg) {\n            console.error('basemap gallery error:', msg);\n        });\n\n        // Set basemap by id\n        function setBasemap(id) {\n            // set the basemap based on the id provided\n            basemapGallery.select(id);\n        }\n\n        return {\n            setBasemap: setBasemap,\n            basemapGallery: basemapGallery\n        };\n    }\n\n    return {\n        Basemap: esriBundle.Basemap,\n        BasemapGallery: esriBundle.BasemapGallery,\n        BasemapLayer: esriBundle.BasemapLayer,\n        makeBasemaps: makeBasemaps\n    };\n};\n\n},{}],148:[function(_dereq_,module,exports){\nmodule.exports={\r\n    \"pinSymbol\": {\r\n        \"color\": [252, 252, 0, 255],\r\n        \"size\": 24,\r\n        \"yoffset\": 12,\r\n        \"type\": \"esriSMS\",\r\n        \"style\": \"esriSMSPath\",\r\n        \"outline\": {\r\n            \"color\": [0, 0, 0, 255],\r\n            \"width\": 0.5,\r\n            \"type\": \"esriSLS\",\r\n            \"style\": \"esriSLSSolid\"\r\n        },\r\n        \"path\": \"M18 8c0-3.31-2.69-6-6-6S6 4.69 6 8c0 4.5 6 11 6 11s6-6.5 6-11zm-8 0c0-1.1.9-2 2-2s2 .9 2 2-.89 2-2 2c-1.1 0-2-.9-2-2zM5 20v2h14v-2H5z\"\r\n    },\r\n    \"hazeSymbol\": {\r\n        \"color\": [255, 255, 255, 127],\r\n        \"type\": \"esriSFS\",\r\n        \"style\": \"esriSFSSolid\",\r\n        \"outline\": {\r\n            \"type\": \"esriSLS\",\r\n            \"style\": \"esriSLSNull\"\r\n        }\r\n    }\r\n}\n},{}],149:[function(_dereq_,module,exports){\nmodule.exports={\r\n    \"circlePoint\": {\r\n        \"geometryType\": \"esriGeometryPoint\",\r\n        \"renderer\": {\r\n            \"type\": \"simple\",\r\n            \"symbol\": {\r\n                \"type\": \"esriSMS\",\r\n                \"style\": \"esriSMSCircle\",\r\n                \"color\": [67, 100, 255, 200],\r\n                \"size\": 7\r\n            }\r\n        }\r\n    },\r\n    \"solidLine\": {\r\n        \"geometryType\": \"esriGeometryPolyline\",\r\n        \"renderer\": {\r\n            \"type\": \"simple\",\r\n            \"symbol\": {\r\n                \"type\": \"esriSLS\",\r\n                \"style\": \"esriSLSSolid\",\r\n                \"color\": [90, 90, 90, 200],\r\n                \"width\": 2\r\n            }\r\n        }\r\n    },\r\n    \"outlinedPoly\": {\r\n        \"geometryType\": \"esriGeometryPolygon\",\r\n        \"renderer\": {\r\n            \"type\": \"simple\",\r\n            \"symbol\": {\r\n                \"type\": \"esriSFS\",\r\n                \"style\": \"esriSFSSolid\",\r\n                \"color\": [76, 76, 125, 200],\r\n                \"outline\": {\r\n                    \"type\": \"esriSLS\",\r\n                    \"style\": \"esriSLSSolid\",\r\n                    \"color\": [110, 110, 110, 255],\r\n                    \"width\": 1\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"boundingBoxPoly\": {\r\n        \"geometryType\": \"esriGeometryPolygon\",\r\n        \"renderer\": {\r\n            \"type\": \"simple\",\r\n            \"symbol\": {\r\n                \"type\": \"esriSFS\",\r\n                \"style\": \"esriSFSSolid\",\r\n                \"color\": [255, 0, 0, 64],\r\n                \"outline\": {\r\n                    \"type\": \"esriSLS\",\r\n                    \"style\": \"esriSLSSolid\",\r\n                    \"color\": [240, 128, 128, 255],\r\n                    \"width\": 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\n},{}],150:[function(_dereq_,module,exports){\n/**\r\n * Wire up any supplied handlers to the corresponding dojo .on events on layer.\r\n * Purpose is to keep Dojo .on events contained in geoApi.\r\n *\r\n * @param {esriObject} esriObject which contains the dojo events to be wrapped\r\n * @param {handlers} handlers is an object which contains all handlers needed\r\n */\n'use strict';\n\nfunction wrapEvents(esriObject, handlers) {\n    Object.keys(handlers).forEach(function (ourEventName) {\n        // replace camelCase name to dojo event name format\n        var dojoName = ourEventName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n        // TODO: Validity checking on inputs for dojoName\n        // make dojo call\n        esriObject.on(dojoName, function (e) {\n\n            // check if needs special handling to point at layer calling event\n            var layerEvents = ['update-start', 'update-end', 'error'];\n            if (layerEvents.indexOf(dojoName) >= 0) {\n                e.layer = e.target;\n            }\n            handlers[ourEventName](e);\n        });\n    });\n}\n\nmodule.exports = function () {\n    return {\n        wrapEvents: wrapEvents\n    };\n};\n\n},{}],151:[function(_dereq_,module,exports){\n'use strict';\n\n// TODO hilight layer would be a good candidate for a custom class which internally proxies to ESRI's GraphicsLayer.\n\nvar defaultSymbols = _dereq_('./defaultHilightSymbols.json');\n\n// contains functions to support the hilight layer.\n\nfunction cloneBuilder(esriBundle) {\n    /**\r\n    * Clone a graphic from a map-bound layer.\r\n    * @method cloneLayerGraphic\r\n    * @param {Graphic} graphic an ESRI graphic that resides in a map layer.\r\n    * @return {Object} an unbound copy of the graphic\r\n    */\n    return function (graphic) {\n        var clone = new esriBundle.Graphic({\n            geometry: graphic.geometry\n        });\n        clone.symbol = graphic.getLayer().renderer.getSymbol(graphic);\n        return clone;\n    };\n}\n\nfunction graphicBuilder(esriBundle) {\n    /**\r\n    * Generating a graphic from server geometry.\r\n    * @method geomToGraphic\r\n    * @param {Object} geometry feature geometry conforming to ESRI Geometry standard\r\n    * @param {Object} symbol esri symbol in server format\r\n    * @return {Object} an ESRI GraphicsLayer\r\n    */\n    return function (geometry, symbol) {\n        var graphic = new esriBundle.Graphic({\n            geometry: geometry\n        });\n        graphic.symbol = esriBundle.symbolJsonUtils.fromJson(symbol);\n        return graphic;\n    };\n}\n\nfunction getGraphicsBuilder(esriBundle, geoApi) {\n    // TODO once document sites are up and running, figure out a way to hyperlink the graphicBundles parameter to the class documentation page in the viewer site\n    /**\r\n    * Generating a graphic from server geometry.\r\n    * @method getUnboundGraphics\r\n    * @param {Array} graphicBundles set of graphic bundles with properties .graphic, .source, .layer, .featureIdx.\r\n    * @param {Object} spatialReference the projection the unbound graphics should be in\r\n    * @return {Array} a set of promises that resolve with an unbound graphic, one for each graphic bundle provided\r\n    */\n    return function (graphicBundles, spatialReference) {\n\n        // generate detached graphics to give to the hilight layer.\n        // promises because server layers renderer is inside a promise\n        return graphicBundles.map(function (bundle) {\n            if (bundle.source === 'server') {\n                var _ret = (function () {\n                    var geom = bundle.graphic.geometry;\n\n                    // check projection\n                    if (!geoApi.proj.isSpatialRefEqual(geom.spatialReference, spatialReference)) {\n                        geom = geoApi.proj.localProjectGeometry(spatialReference, geom);\n                    }\n\n                    // determine symbol for this server graphic\n                    var attribs = bundle.layer.attributeBundle;\n                    return {\n                        v: attribs[bundle.featureIdx].layerData.then(function (layerData) {\n                            var symb = geoApi.symbology.getGraphicSymbol(bundle.graphic.attributes, layerData.renderer);\n                            return geoApi.hilight.geomToGraphic(geom, symb);\n                        })\n                    };\n                })();\n\n                if (typeof _ret === 'object') return _ret.v;\n            } else {\n                // local graphic. clone and hilight\n                return Promise.resolve(geoApi.hilight.cloneLayerGraphic(bundle.graphic));\n            }\n        });\n    };\n}\n\nfunction hilightBuilder(esriBundle) {\n    /**\r\n    * Generate a graphic layer to handle feature hilighting.\r\n    * @method makeHilightLayer\r\n    * @param {Object} options optional settings for the hilight layer\r\n    *                         layerId - id to use for the hilight layer. defaults to rv_hilight\r\n    *                         pinSymbol - esri symbol in server json format to symbolize the click marker. defaults to a red pin\r\n    *                         hazeOpacity -  how opaque the haze sheet behind the hilight is. 0 to 255, 0 being transparent. defaults to 127\r\n    * @return {Object} an ESRI GraphicsLayer\r\n    */\n    return function (options) {\n        // set options\n        var id = 'rv_hilight';\n        var hazeOpac = 127;\n        var pinSymbol = defaultSymbols.pinSymbol;\n\n        if (options) {\n            if (options.layerId) {\n                id = options.layerId;\n            }\n            if (options.pinSymbol) {\n                pinSymbol = options.pinSymbol;\n            }\n            if (options.hazeOpacity) {\n                hazeOpac = options.hazeOpacity;\n            }\n        }\n\n        var hgl = new esriBundle.GraphicsLayer({ id: id, visible: true });\n\n        // ensure highlight is top-most graphic layer\n        function moveHilightToTop() {\n            hgl._map.reorderLayer(hgl, hgl._map.graphicsLayerIds.length);\n        }\n\n        /**\r\n        * Add a graphic to indicate where user clicked.\r\n        * @method addPin\r\n        * @param {Point} point an ESRI point object to use as the graphic location\r\n        */\n        hgl.addPin = function (point) {\n\n            var pin = new esriBundle.Graphic({ symbol: pinSymbol });\n            pin.setGeometry(point);\n\n            hgl.add(pin);\n            moveHilightToTop();\n        };\n\n        /**\r\n        * Add a graphic or array of graphics to the highlight layer. Remove any previous graphics.\r\n        * @method addHilight\r\n        * @param {Graphic|Array} graphic an ESRI graphic, or array of ESRI graphics. Should be in map spatialReference, and not bound to a layer\r\n        */\n        hgl.addHilight = function (graphic) {\n\n            var graphics = Array.isArray(graphic) ? graphic : [graphic];\n\n            if (hgl._hilightGraphics) {\n                // if active hilight graphics, remove them\n                hgl._hilightGraphics.forEach(function (g) {\n                    return hgl.remove(g);\n                });\n            } else {\n                // first application of hilight. add haze background by creating a partially opaque layer for\n                // the whole map extent with some buffer. This will go under the highlighted graphic to make it stand out.\n                var hazeJson = {\n                    symbol: defaultSymbols.hazeSymbol\n                };\n                hazeJson.symbol.color[3] = hazeOpac;\n                var hazeGraphic = new esriBundle.Graphic(hazeJson);\n                hazeGraphic.setGeometry(hgl._map.extent.expand(1.5)); // expand to avoid edges on quick pan\n                hazeGraphic.haze = true; // notifies layer to put this under any hilight graphics\n                hgl.add(hazeGraphic);\n            }\n\n            // add new hilight graphics\n            hgl._hilightGraphics = graphics;\n            graphics.forEach(function (g) {\n                return hgl.add(g);\n            });\n            moveHilightToTop();\n        };\n\n        /**\r\n        * Remove hilight from map\r\n        * @method clearHilight\r\n        */\n        hgl.clearHilight = function () {\n            // clear tracking vars, wipe the layer\n            hgl._hilightGraphics = null;\n            hgl.clear();\n        };\n\n        hgl.on('graphic-node-add', function (e) {\n            // figure out if graphic needs to be at top or bottom of hilight layer\n            // haze polygon goes to bottom, everything else to top\n            var g = e.graphic;\n            var dojoShape = g.getShape();\n\n            if (g.haze) {\n                dojoShape.moveToBack();\n            } else {\n                dojoShape.moveToFront();\n            }\n        });\n\n        return hgl;\n    };\n}\n\nmodule.exports = function (esriBundle, geoApi) {\n    return {\n        makeHilightLayer: hilightBuilder(esriBundle),\n        geomToGraphic: graphicBuilder(esriBundle),\n        cloneLayerGraphic: cloneBuilder(esriBundle),\n        getUnboundGraphics: getGraphicsBuilder(esriBundle, geoApi)\n    };\n};\n\n},{\"./defaultHilightSymbols.json\":148}],152:[function(_dereq_,module,exports){\n'use strict';\nvar attribute = _dereq_('./attribute.js');\nvar basemap = _dereq_('./basemap.js');\nvar events = _dereq_('./events.js');\nvar hilight = _dereq_('./hilight.js');\nvar layer = _dereq_('./layer.js');\nvar legend = _dereq_('./legend.js');\nvar mapManager = _dereq_('./mapManager.js');\nvar mapPrint = _dereq_('./mapPrint.js');\nvar proj = _dereq_('./proj.js');\nvar query = _dereq_('./query.js');\nvar shared = _dereq_('./shared.js');\nvar symbology = _dereq_('./symbology.js');\n\nfunction initAll(esriBundle, window) {\n    var debug = false;\n    var api = {};\n\n    api.layer = layer(esriBundle, api);\n    api.legend = legend();\n    api.proj = proj(esriBundle);\n    api.basemap = basemap(esriBundle);\n    api.mapManager = mapManager(esriBundle, api);\n    api.mapPrint = mapPrint(esriBundle, api);\n    api.attribs = attribute(esriBundle, api);\n    api.symbology = symbology(esriBundle, api, window);\n    api.hilight = hilight(esriBundle, api);\n    api.events = events();\n    api.query = query(esriBundle);\n    api.shared = shared(esriBundle);\n    api.debug = function () {\n        if (arguments.length === 1) {\n            debug = arguments[0] === true;\n        }\n\n        return debug;\n    };\n    api.esriBundle = function () {\n        if (debug) {\n            return esriBundle;\n        }\n        throw new Error('Must set debug to directly access the bundle');\n    };\n\n    return api;\n}\n\nmodule.exports = function (esriLoaderUrl, window) {\n\n    // esriDeps is an array pairing ESRI JSAPI dependencies with their imported names\n    // in esriBundle\n    var esriDeps = [['dojo/Deferred', 'Deferred'], ['dojo/query', 'dojoQuery'], ['esri/Color', 'Color'], ['esri/config', 'esriConfig'], ['esri/dijit/Basemap', 'Basemap'], ['esri/dijit/BasemapGallery', 'BasemapGallery'], ['esri/dijit/BasemapLayer', 'BasemapLayer'], ['esri/dijit/OverviewMap', 'OverviewMap'], ['esri/dijit/Scalebar', 'Scalebar'], ['esri/geometry/Extent', 'Extent'], ['esri/geometry/Point', 'Point'], ['esri/geometry/ScreenPoint', 'ScreenPoint'], ['esri/graphic', 'Graphic'], ['esri/graphicsUtils', 'graphicsUtils'], ['esri/layers/ArcGISDynamicMapServiceLayer', 'ArcGISDynamicMapServiceLayer'], ['esri/layers/ArcGISImageServiceLayer', 'ArcGISImageServiceLayer'], ['esri/layers/ArcGISTiledMapServiceLayer', 'ArcGISTiledMapServiceLayer'], ['esri/layers/FeatureLayer', 'FeatureLayer'], ['esri/layers/GraphicsLayer', 'GraphicsLayer'], ['esri/layers/LayerDrawingOptions', 'LayerDrawingOptions'], ['esri/layers/WMSLayer', 'WmsLayer'], ['esri/map', 'Map'], ['esri/request', 'esriRequest'], ['esri/SpatialReference', 'SpatialReference'], ['esri/symbols/jsonUtils', 'symbolJsonUtils'], ['esri/tasks/GeometryService', 'GeometryService'], ['esri/tasks/IdentifyParameters', 'IdentifyParameters'], ['esri/tasks/IdentifyTask', 'IdentifyTask'], ['esri/tasks/ProjectParameters', 'ProjectParameters'], ['esri/tasks/query', 'Query'], ['esri/tasks/QueryTask', 'QueryTask'], ['esri/tasks/PrintParameters', 'PrintParameters'], ['esri/tasks/PrintTask', 'PrintTask'], ['esri/tasks/PrintTemplate', 'PrintTemplate']];\n\n    function makeDojoRequests() {\n        return new Promise(function (resolve, reject) {\n\n            // NOTE: do not change the callback to an arrow function since we don't know if\n            // Dojo's require has any expectations of the scope within that function or\n            // does any odd metaprogramming\n            window.require(esriDeps.map(function (deps) {\n                return deps[0];\n            }), function () {\n                var esriBundle = {};\n\n                // iterate over arguments to avoid creating an ugly giant function call\n                // arguments is not an array so we do this the hard way\n                for (var i = 0; i < arguments.length; ++i) {\n                    esriBundle[esriDeps[i][1]] = arguments[i];\n                }\n                resolve(esriBundle);\n            });\n            window.require.on('error', reject);\n        });\n    }\n\n    // the startup for this module is:\n    // 1. add a script tag to load the API (this typically points to a custom ESRI build)\n    // 2. load all the ESRI and Dojo dependencies `makeDojoRequests()`\n    // 3. initialize all of our modules\n    // everything is done in an async model and the result is a promise which resolves to\n    // a reference to our API\n    return new Promise(function (resolve, reject) {\n        if (window.require) {\n            console.warn('window.require has been set, ' + 'attempting to reuse existing loader with no new script tag created');\n            resolve();\n            return;\n        }\n\n        var oScript = window.document.createElement('script');\n        var oHead = window.document.head || window.document.getElementsByTagName('head')[0];\n\n        oScript.type = 'text\\/javascript';\n        oScript.onerror = function (err) {\n            return reject(err);\n        };\n        oScript.onload = function () {\n            return resolve();\n        };\n        oHead.appendChild(oScript);\n        oScript.src = esriLoaderUrl; // '//ec.cloudapp.net/~aly/esri/dojo/dojo.js';\n        console.log('made a promise');\n    }).then(makeDojoRequests).then(function (esriBundle) {\n        return initAll(esriBundle, window);\n    });\n};\n\n},{\"./attribute.js\":146,\"./basemap.js\":147,\"./events.js\":150,\"./hilight.js\":151,\"./layer.js\":153,\"./legend.js\":157,\"./mapManager.js\":158,\"./mapPrint.js\":159,\"./proj.js\":160,\"./query.js\":161,\"./shared.js\":162,\"./symbology.js\":163}],153:[function(_dereq_,module,exports){\n'use strict';\n\n// TODO consider splitting this module into different modules.  in particular,\n//      file-based stuff vs server based stuff, and layer creation vs layer support\n\n// TODO convert internal function header comments to JSDoc, and use the @private tag\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar csv2geojson = _dereq_('csv2geojson');\nvar Terraformer = _dereq_('terraformer');\nvar shp = _dereq_('shpjs');\nvar ogc = _dereq_('./layer/ogc.js');\nvar bbox = _dereq_('./layer/bbox.js');\nvar defaultRenderers = _dereq_('./defaultRenderers.json');\nTerraformer.ArcGIS = _dereq_('terraformer-arcgis-parser');\n\n/**\r\n* Maps GeoJSON geometry types to a set of default renders defined in GlobalStorage.DefaultRenders\r\n* @property featureTypeToRenderer {Object}\r\n* @private\r\n*/\nvar featureTypeToRenderer = {\n    Point: 'circlePoint',\n    MultiPoint: 'circlePoint',\n    LineString: 'solidLine',\n    MultiLineString: 'solidLine',\n    Polygon: 'outlinedPoly',\n    MultiPolygon: 'outlinedPoly'\n};\n\n/**\r\n* Different types of services that a URL could point to\r\n* @property serviceType {Object}\r\n*/\nvar serviceType = {\n    CSV: 'csv',\n    GeoJSON: 'geojson',\n    Shapefile: 'shapefile',\n    FeatureLayer: 'featurelayer',\n    RasterLayer: 'rasterlayer',\n    GroupLayer: 'grouplayer',\n    TileService: 'tileservice',\n    FeatureService: 'featureservice',\n    DynamicService: 'dynamicservice',\n    ImageService: 'imageservice',\n    WMS: 'wms',\n    Unknown: 'unknown',\n    Error: 'error'\n};\n\n// attempts to determine if a path points to a location on the internet,\n// or is a local file.  Returns true if internetish\nfunction isServerFile(url) {\n    // TODO possibly enhance to be better check, or support more cases\n\n    var lowUrl = url.toLowerCase();\n    var tests = [/^http:/, /^https:/, /^ftp:/, /^\\/\\//];\n    return tests.some(function (test) {\n        return lowUrl.match(test);\n    });\n}\n\n// will grab a file from a server address as binary.\n// returns a promise that resolves with the file data.\nfunction getServerFile(url, esriBundle) {\n    return new Promise(function (resolve, reject) {\n        // extract info for this service\n        var defService = esriBundle.esriRequest({\n            url: url,\n            handleAs: 'arraybuffer'\n        });\n\n        defService.then(function (srvResult) {\n            resolve(srvResult);\n        }, function (error) {\n            // something went wrong\n            reject(error);\n        });\n    });\n}\n\n// returns a standard information object with serviceType\n// supports predictLayerUrl\n// type is serviceType enum value\nfunction makeInfo(type) {\n    return {\n        serviceType: type\n    };\n}\n\n// returns a standard information object with serviceType and name\n// common for most ESRI endpoints\n// supports predictLayerUrl\n// type is serviceType enum value\n// name is property in json containing a service name\n// json is json result from service\nfunction makeLayerInfo(type, name, json) {\n    var info = makeInfo(type);\n    info.name = json[name] || '';\n    return info;\n}\n\n// returns promise of standard information object with serviceType\n// and fileData if file is located online (not on disk).\nfunction makeFileInfo(type, url, esriBundle) {\n    return new Promise(function (resolve) {\n        var info = makeInfo(type);\n        if (url && isServerFile(url)) {\n            // be a pal and download the file content\n            getServerFile(url, esriBundle).then(function (data) {\n                info.fileData = data;\n                resolve(info);\n            })['catch'](function () {\n                info.type = serviceType.Error;\n                resolve(info);\n            });\n        } else {\n            resolve(info);\n        }\n    });\n}\n\n// inspects the JSON that was returned from a service.\n// if the JSON belongs to an ESRI endpoint, we do some terrible dog-logic to attempt\n// to derive what type of endpoint it is (mainly by looking for properties that are\n// unique to that type of service).\n// returns an enumeration value (string) from serviceType based on the match found.\n// non-esri services or unexpected esri services will return the .Unknown value\nfunction crawlEsriService(srvJson) {\n    if (srvJson.type) {\n        // a layer endpoint (i.e. url ends with integer index)\n        var mapper = {\n            'Feature Layer': serviceType.FeatureLayer,\n            'Raster Layer': serviceType.RasterLayer,\n            'Group Layer': serviceType.GroupLayer\n        };\n        return mapper[srvJson.type] || serviceType.Unknown;\n    } else if (srvJson.hasOwnProperty('singleFusedMapCache')) {\n        if (srvJson.singleFusedMapCache) {\n            // a tile server\n            return serviceType.TileService;\n        } else {\n            // a map server\n            return serviceType.DynamicService;\n        }\n    } else if (srvJson.hasOwnProperty('allowGeometryUpdates')) {\n        // a feature server\n        return serviceType.FeatureService;\n    } else if (srvJson.hasOwnProperty('allowedMosaicMethods')) {\n        // an image server\n        return serviceType.ImageService;\n    } else {\n        return serviceType.Unknown;\n    }\n}\n\n// given a URL, attempt to read it as an ESRI rest endpoint.\n// returns a promise that resovles with an information object.\n// at minimum, the object will have a .serviceType property with a value from the above enumeration.\n// if the type is .Unknown, then we were unable to determine the url was an ESRI rest endpoint.\n// otherwise, we were successful, and the information object will have other properties depending on the service type\n// - .name : scraped from service, but may be rubbish (depends on service publisher). used as UI suggestion only\n// - .fields : for feature layer service only. list of fields to allow user to pick name field\n// - .geometryType : for feature layer service only.  for help in defining the renderer, if required.\n// - .layers : for dynamic layer service only. lists the child layers\nfunction pokeEsriService(url, esriBundle, hint) {\n\n    // reaction functions to different esri services\n    var srvHandler = {};\n\n    // feature layer gets some extra treats\n    srvHandler[serviceType.FeatureLayer] = function (srvJson) {\n        var info = makeLayerInfo(serviceType.FeatureLayer, 'name', srvJson);\n        info.fields = srvJson.fields;\n        info.geometryType = srvJson.geometryType;\n        info.smartDefaults = {\n            // TODO: try to find a name field if possible\n            primary: info.fields[0].name // pick the first field as primary and return its name for ui binding\n        };\n        return info;\n    };\n\n    // no treats for raster (for now)\n    srvHandler[serviceType.RasterLayer] = function (srvJson) {\n        return makeLayerInfo(serviceType.RasterLayer, 'name', srvJson);\n    };\n\n    // no treats for group (for now)\n    srvHandler[serviceType.GroupLayer] = function (srvJson) {\n        return makeLayerInfo(serviceType.GroupLayer, 'name', srvJson);\n    };\n\n    // no treats for tile (for now)\n    srvHandler[serviceType.TileService] = function (srvJson) {\n        return makeLayerInfo(serviceType.TileService, 'mapName', srvJson);\n    };\n\n    // no treats for mapserver / dynamic (for now)\n    srvHandler[serviceType.DynamicService] = function (srvJson) {\n        var info = makeLayerInfo(serviceType.DynamicService, 'mapName', srvJson);\n        info.layers = srvJson.layers;\n        return info;\n    };\n\n    // no treats for imageserver (for now)\n    srvHandler[serviceType.ImageService] = function (srvJson) {\n        var info = makeLayerInfo(serviceType.ImageService, 'name', srvJson);\n        info.fields = srvJson.fields;\n        return info;\n    };\n\n    // couldnt figure it out\n    srvHandler[serviceType.Unknown] = function () {\n        return makeInfo(serviceType.Unknown);\n    };\n\n    return new Promise(function (resolve) {\n        // extract info for this service\n        var defService = esriBundle.esriRequest({\n            url: url,\n            content: { f: 'json' },\n            callbackParamName: 'callback',\n            handleAs: 'json'\n        });\n\n        defService.then(function (srvResult) {\n            // request didnt fail, indicating it is likely an ArcGIS Server endpoint\n            var resultType = crawlEsriService(srvResult);\n\n            if (hint && resultType !== hint) {\n                // our hint doesn't match the service\n                resultType = serviceType.Unknown;\n            }\n            resolve(srvHandler[resultType](srvResult));\n        }, function () {\n            // something went wrong, but that doesnt mean our service is invalid yet\n            // it's likely not ESRI.  return Error and let main predictor keep investigating\n            resolve(makeInfo(serviceType.Error));\n        });\n    });\n}\n\n// tests a URL to see if the value is a file\n// providing the known type as a hint will cause the function to run the\n// specific logic for that file type, rather than guessing and trying everything\n// resolves with promise of information object\n// - serviceType : the type of file (CSV, Shape, GeoJSON, Unknown)\n// - fileData : if the file is located on a server, will xhr\nfunction pokeFile(url, esriBundle, hint) {\n\n    // reaction functions to different files\n    // overkill right now, as files just identify the type right now\n    // but structure will let us enhance for custom things if we need to\n    var fileHandler = {};\n\n    // csv\n    fileHandler[serviceType.CSV] = function () {\n        return makeFileInfo(serviceType.CSV, url, esriBundle);\n    };\n\n    // geojson\n    fileHandler[serviceType.GeoJSON] = function () {\n        return makeFileInfo(serviceType.GeoJSON, url, esriBundle);\n    };\n\n    // csv\n    fileHandler[serviceType.Shapefile] = function () {\n        return makeFileInfo(serviceType.Shapefile, url, esriBundle);\n    };\n\n    // couldnt figure it out\n    fileHandler[serviceType.Unknown] = function () {\n        // dont supply url, as we don't want to download random files\n        return makeFileInfo(serviceType.Unknown);\n    };\n\n    return new Promise(function (resolve) {\n        if (hint) {\n            // force the data extraction of the hinted format\n            resolve(fileHandler[hint]());\n        } else {\n            // inspect the url for file extensions\n            var guessType = serviceType.Unknown;\n            switch (url.substr(url.lastIndexOf('.') + 1).toLowerCase()) {\n\n                // check for file extensions\n                case 'csv':\n                    guessType = serviceType.CSV;\n                    break;\n                case 'zip':\n                    guessType = serviceType.Shapefile;\n                    break;\n\n                case 'json':\n                    guessType = serviceType.GeoJSON;\n                    break;\n            }\n            resolve(fileHandler[guessType]());\n        }\n    });\n}\n\n// tests a URL to see if the value is a wms\n// resolves with promise of information object\n// - serviceType : the type of service (WMS, Unknown)\nfunction pokeWms(url, esriBundle) {\n\n    // FIXME add some WMS detection logic.  that would be nice\n\n    console.log(url, esriBundle); // to stop jslint from quacking. remove when params are actually used\n\n    return Promise.resolve(makeInfo(serviceType.WMS));\n}\n\nfunction predictLayerUrlBuilder(esriBundle) {\n    /**\r\n    * Attempts to determine what kind of layer the URL most likely is, and\r\n    * if possible, return back some useful information about the layer\r\n    *\r\n    * - serviceType: the type of layer the function thinks the url is referring to. is a value of serviceType enumeration (string)\r\n    * - fileData: file contents in an array buffer. only present if the URL points to a file that exists on an internet server (i.e. not a local disk drive)\r\n    * - name: best attempt at guessing the name of the service (string). only present for ESRI service URLs\r\n    * - fields: array of field definitions for the layer. conforms to ESRI's REST field standard. only present for feature layer and image service URLs.\r\n    * - geometryType: describes the geometry of the layer (string). conforms to ESRI's REST geometry type enum values. only present for feature layer URLs.\r\n    * - groupIdx: property only available if a group layer is queried. it is the layer index of the group layer in the list under its parent dynamic layer\r\n    *\r\n    * @method predictLayerUrl\r\n    * @param {String} url a url to something that is hopefully a map service\r\n    * @param {String} hint optional. allows the caller to specify the url type, forcing the function to run the data logic for that type\r\n    * @returns {Promise} a promise resolving with an infomation object\r\n    */\n    return function (url, hint) {\n\n        // TODO this function has lots of room to improve.  there are many valid urls that it will\n        //      fail to identify correctly in it's current state\n\n        // TODO refactor how this function works.\n        //      wait for the web service request library to not be esri/request\n        //      use new library to make a head call on the url provided\n        //      examine the content type of the head call result\n        //        if xml, assume WMS\n        //        if json, assume esri  (may need extra logic to differentiate from json file?)\n        //        file case is explicit (e.g text/json)\n        //      then hit appropriate handler, do a second web request for content if required\n\n        if (hint) {\n            // go directly to appropriate logic block\n            var hintToFlavour = {}; // why? cuz cyclomatic complexity + OBEY RULES\n            var flavourToHandler = {};\n\n            // hint type to hint flavour\n            hintToFlavour[serviceType.CSV] = 'F_FILE';\n            hintToFlavour[serviceType.GeoJSON] = 'F_FILE';\n            hintToFlavour[serviceType.Shapefile] = 'F_FILE';\n            hintToFlavour[serviceType.FeatureLayer] = 'F_ESRI';\n            hintToFlavour[serviceType.RasterLayer] = 'F_ESRI';\n            hintToFlavour[serviceType.GroupLayer] = 'F_ESRI';\n            hintToFlavour[serviceType.TileService] = 'F_ESRI';\n            hintToFlavour[serviceType.DynamicService] = 'F_ESRI';\n            hintToFlavour[serviceType.ImageService] = 'F_ESRI';\n            hintToFlavour[serviceType.WMS] = 'F_WMS';\n\n            // hint flavour to flavour-handler\n            flavourToHandler.F_FILE = function () {\n                return pokeFile(url, esriBundle, hint);\n            };\n\n            flavourToHandler.F_ESRI = function () {\n                return pokeEsriService(url, esriBundle, hint);\n            };\n\n            flavourToHandler.F_WMS = function () {\n                // FIXME REAL LOGIC COMING SOON\n                return pokeWms(url, esriBundle);\n            };\n\n            // execute handler.  hint -> flavour -> handler -> run it -> promise\n            return flavourToHandler[hintToFlavour[hint]]();\n        } else {\n\n            // TODO restructure.  this approach cleans up the pyramid of doom.\n            //      Needs to add check for empty tests, resolve as unknown.\n            //      Still a potential to take advantage of the nice structure.  Will depend\n            //      what comes first:  WMS logic (adding a 3rd test), or changing the request\n            //      library, meaning we get the type early from the head request.\n            /*\r\n            tests = [pokeFile, pokeService];\r\n              function runTests() {\r\n                test = tests.pop();\r\n                test(url, esriBundle).then(info => {\r\n                    if (info.serviceType !== serviceType.Unknown) {\r\n                        resolve(info);\r\n                        return;\r\n                    }\r\n                    runTests();\r\n                });\r\n            }\r\n              runTests();\r\n            */\n\n            return new Promise(function (resolve) {\n                // no hint. run tests until we find a match.\n                // test for file\n                pokeFile(url, esriBundle).then(function (infoFile) {\n                    if (infoFile.serviceType === serviceType.Unknown || infoFile.serviceType === serviceType.Error) {\n\n                        // not a file, test for ESRI\n                        pokeEsriService(url, esriBundle).then(function (infoEsri) {\n                            if (infoEsri.serviceType === serviceType.Unknown || infoEsri.serviceType === serviceType.Error) {\n\n                                // FIXME REAL LOGIC COMING SOON\n                                // pokeWMS\n                                resolve(infoEsri);\n                            } else {\n                                // it was a esri service. rejoice.\n\n                                // shortlived rejoice because grouped layers lul\n                                if (infoEsri.serviceType === serviceType.GroupLayer) {\n                                    (function () {\n                                        var lastSlash = url.lastIndexOf('/');\n                                        var layerIdx = parseInt(url.substring(lastSlash + 1));\n                                        url = url.substring(0, lastSlash);\n                                        pokeEsriService(url, esriBundle).then(function (infoDynamic) {\n                                            infoDynamic.groupIdx = layerIdx;\n                                            resolve(infoDynamic);\n                                        });\n                                    })();\n                                } else {\n                                    resolve(infoEsri);\n                                }\n                            }\n                        });\n                    } else {\n                        // it was a file. rejoice.\n                        resolve(infoFile);\n                    }\n                });\n            });\n        }\n    };\n}\n\n/**\r\n* Converts an array buffer to a string\r\n*\r\n* @method arrayBufferToString\r\n* @private\r\n* @param {Arraybuffer} buffer an array buffer containing stuff (ideally string-friendly)\r\n* @returns {String} array buffer in string form\r\n*/\nfunction arrayBufferToString(buffer) {\n    // handles UTF8 encoding\n    return new TextDecoder('utf-8').decode(new Uint8Array(buffer));\n}\n\n/**\r\n* Performs validation on GeoJson object. Returns a promise resolving with the validation object.\r\n* Worker function for validateFile, see that file for return value specs\r\n*\r\n* @method validateGeoJson\r\n* @private\r\n* @param {Object} geoJson feature collection in geojson form\r\n* @returns {Promise} promise resolving with information on the geoJson object\r\n*/\nfunction validateGeoJson(geoJson) {\n    // GeoJSON geometry type to ESRI geometry type\n    var geomMap = {\n        Point: 'esriGeometryPoint',\n        MultiPoint: 'esriGeometryMultipoint',\n        LineString: 'esriGeometryPolyline',\n        MultiLineString: 'esriGeometryPolyline',\n        Polygon: 'esriGeometryPolygon',\n        MultiPolygon: 'esriGeometryPolygon'\n    };\n\n    var fields = extractFields(geoJson);\n\n    var res = {\n        fields: fields,\n        geometryType: geomMap[geoJson.features[0].geometry.type],\n        formattedData: geoJson,\n        smartDefaults: {\n            // TODO: try to find a name field if possible\n            primary: fields[0].name // pick the first field as primary and return its name for ui binding\n        }\n    };\n\n    if (!res.geometryType) {\n        return Promise.reject(new Error('Unexpected geometry type in GeoJSON'));\n    }\n\n    // TODO optional check: iterate through every feature, ensure geometry type and properties are all identical\n\n    return Promise.resolve(res);\n}\n\n/**\r\n* Performs validation on csv data. Returns a promise resolving with the validation object.\r\n* Worker function for validateFile, see that file for return value specs\r\n*\r\n* @method validateCSV\r\n* @private\r\n* @param {Object} data csv data as string\r\n* @returns {Promise} promise resolving with information on the csv data\r\n*/\nfunction validateCSV(data) {\n\n    var formattedData = arrayBufferToString(data); // convert from arraybuffer to string to parsed csv. store string format for later\n    var rows = csvPeek(formattedData, ','); // FIXME: this assumes delimiter is a `,`; need validation\n    var errorMessage = undefined; // error message if any to return\n\n    // validations\n    if (rows.length === 0) {\n        // fail, no rows\n        errorMessage = 'File has no rows';\n    } else {\n        var _ret2 = (function () {\n            // field count of first row.\n            var fc = rows[0].length;\n            if (fc < 2) {\n                // fail not enough columns\n                errorMessage = 'File has less than two columns';\n            } else {\n                // check field counts of each row\n                if (rows.every(function (rowArr) {\n                    return rowArr.length === fc;\n                })) {\n\n                    var res = {\n                        formattedData: formattedData,\n                        smartDefaults: guessCSVfields(rows), // calculate smart defaults\n\n                        // make field list esri-ish for consistancy\n                        fields: rows[0].map(function (field) {\n                            return {\n                                name: field,\n                                type: 'esriFieldTypeString'\n                            };\n                        }),\n                        geometryType: 'esriGeometryPoint' // always point for CSV\n                    };\n\n                    return {\n                        v: Promise.resolve(res)\n                    };\n                } else {\n                    errorMessage = 'File has inconsistent column counts';\n                }\n            }\n        })();\n\n        if (typeof _ret2 === 'object') return _ret2.v;\n    }\n\n    return Promise.reject(new Error(errorMessage));\n}\n\n/**\r\n* Validates file content.  Does some basic checking for errors. Attempts to get field list, and\r\n* if possible, provide the file in a more useful format. Promise rejection indicates failed validation\r\n*\r\n* - formattedData: file contents in a more useful format. JSON for GeoJSON and Shapefile. String for CSV\r\n* - fields: array of field definitions for the file. conforms to ESRI's REST field standard.\r\n* - geometryType: describes the geometry of the file (string). conforms to ESRI's REST geometry type enum values.\r\n*\r\n* @method validateFile\r\n* @param {String} type the format of file. aligns to serviceType enum (CSV, Shapefile, GeoJSON)\r\n* @param {Arraybuffer} data the file content in binary\r\n* @returns {Promise} a promise resolving with an infomation object\r\n*/\nfunction validateFile(type, data) {\n    var _fileHandler;\n\n    var fileHandler = (_fileHandler = {}, _defineProperty(_fileHandler, serviceType.CSV, function (data) {\n        return validateCSV(data);\n    }), _defineProperty(_fileHandler, serviceType.GeoJSON, function (data) {\n        var geoJson = JSON.parse(arrayBufferToString(data));\n        return validateGeoJson(geoJson);\n    }), _defineProperty(_fileHandler, serviceType.Shapefile, function (data) {\n        return shp(data).then(function (geoJson) {\n            return validateGeoJson(geoJson);\n        });\n    }), _fileHandler);\n\n    // trigger off the appropriate handler, return promise\n    return fileHandler[type](data);\n}\n\n/**\r\n * From provided CSV data, guesses which columns are long and lat. If guessing is no successful, returns null for one or both fields.\r\n *\r\n * @method guessCSVfields\r\n * @private\r\n * @param  {Array} rows csv data\r\n * @return {Object}      an object with lat and long string properties indicating corresponding field names\r\n */\nfunction guessCSVfields(rows) {\n    // magic regexes\n    // TODO: in case of performance issues with running regexes on large csv files, limit to, say, the first hundred rows\n    // TODO: explain regexes\n    var latValueRegex = new RegExp(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$/); // filters by field value\n    var longValueRegex = new RegExp(/^[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/);\n    var latNameRegex = new RegExp(/^.*(y|la).*$/i); // filters by field name\n    var longNameRegex = new RegExp(/^.*(x|lo).*$/i);\n\n    var latCandidates = findCandidates(rows, latValueRegex, latNameRegex); // filter out all columns that are not lat based on row values\n    var longCandidates = findCandidates(rows, longValueRegex, longNameRegex); // filter out all columns that are not long based on row values\n\n    // console.log(latCandidates);\n    // console.log(longCandidates);\n\n    // pick the first lat guess or null\n    var lat = latCandidates[0] || null;\n\n    // pick the first long guess or null\n    var long = longCandidates.find(function (field) {\n        return field !== lat;\n    }) || null;\n\n    // for primary field, pick the first on that is not lat or long field or null\n    var primary = rows[0].find(function (field) {\n        return field !== lat && field !== long;\n    }) || null;\n\n    return {\n        lat: lat,\n        long: long,\n        primary: primary\n    };\n\n    function findCandidates(rows, valueRegex, nameRegex) {\n        var fields = rows[0]; // first row must be headers\n\n        var candidates = fields.filter(function (field, index) {\n            return rows.every(function (row, rowIndex) {\n                return rowIndex === 0 || valueRegex.test(row[index]);\n            });\n        }) // skip first row as its just headers\n        .filter(function (field) {\n            return nameRegex.test(field);\n        });\n\n        return candidates;\n    }\n}\n\nfunction serverLayerIdentifyBuilder(esriBundle) {\n    // TODO we are using layerIds option property as it aligns with what the ESRI identify parameter\n    //      object uses.  However, in r2 terminology, a layerId is specific to a full map layer, not\n    //      indexes of a single dynamic layer.  for clarity, could consider renaming to .visibleLayers\n    //      and then map the value to the .layerIds property inside this function.\n\n    /**\r\n    * Perform a server-side identify on a layer (usually an ESRI dynamic layer)\r\n    * Accepts the following options:\r\n    *   - geometry: Required. geometry in map co-ordinates for the area to identify.\r\n    *     will usually be an ESRI Point, though a polygon would work.\r\n    *   - mapExtent: Required. ESRI Extent of the current map view\r\n    *   - width: Required. Width of the map in pixels\r\n    *   - height: Required. Height of the map in pixels\r\n    *   - layerIds: an array of integers specifying the layer indexes to be examined. Will override the current\r\n    *     visible indexes in the layer parameter\r\n    *   - returnGeometry: a boolean indicating if result geometery should be returned with results.  Defaults to false\r\n    *   - tolerance: an integer indicating how many screen pixels away from the mouse is valid for a hit.  Defaults to 5\r\n    *\r\n    * @method serverLayerIdentify\r\n    * @param {Object} layer an ESRI dynamic layer object\r\n    * @param {Object} opts An object for supplying additional parameters\r\n    * @returns {Promise} a promise resolving with an array of identify results (empty array if no hits)\r\n    */\n    return function (layer, opts) {\n\n        var identParams = new esriBundle.IdentifyParameters();\n\n        // pluck treats from options parameter\n        if (opts) {\n\n            var reqOpts = ['geometry', 'mapExtent', 'height', 'width'];\n            reqOpts.forEach(function (optProp) {\n                if (opts[optProp]) {\n                    identParams[optProp] = opts[optProp];\n                } else {\n                    throw new Error('serverLayerIdentify - missing opts.' + optProp + ' arguement');\n                }\n            });\n\n            identParams.layerIds = opts.layerIds || layer.visibleLayers;\n            identParams.returnGeometry = opts.returnGeometry || false;\n            identParams.layerOption = esriBundle.IdentifyParameters.LAYER_OPTION_ALL;\n            identParams.spatialReference = opts.geometry.spatialReference;\n            identParams.tolerance = opts.tolerance || 5;\n\n            // TODO add support for identParams.layerDefinitions once attribute filtering is implemented\n        } else {\n                throw new Error('serverLayerIdentify - missing opts arguement');\n            }\n\n        // asynch an identify task\n        return new Promise(function (resolve, reject) {\n            var identify = new esriBundle.IdentifyTask(layer.url);\n\n            // TODO possibly tack on the layer.id to the resolved thing so we know which parent layer returned?\n            //      would only be required if the caller is mashing promises together and using Promise.all()\n\n            identify.on('complete', function (result) {\n                resolve(result.results);\n            });\n            identify.on('error', function (err) {\n                reject(err.error);\n            });\n\n            identify.execute(identParams);\n        });\n    };\n}\n\n/**\r\n* Performs in place assignment of integer ids for a GeoJSON FeatureCollection.\r\n* If at least one feature has an existing id outside the geoJson properties section,\r\n* the original id value is copied in a newly created property ID_FILE of the properties object\r\n* and the existing id value is replaced by an autogenerated number.\r\n* Features without existing id from that same dataset will get a new properties ID_FILE\r\n* with an empty string as value.\r\n**************************************\r\n* If at least one feature has an existing OBJECTID inside the geoJson properties section,\r\n* the original OBJECTID value is copied in a newly created property OBJECTID_FILE of the properties object\r\n* and the existing OBJECTID value is replaced by an autogenerated number.\r\n* Features without existing OBJECTID from that same dataset will get a new properties OBJECTID_FILE\r\n* with an empty string as value.\r\n*/\nfunction assignIds(geoJson) {\n    if (geoJson.type !== 'FeatureCollection') {\n        throw new Error('Assignment can only be performed on FeatureCollections');\n    }\n\n    var emptyID = true;\n    var emptyObjID = true;\n\n    // for every feature, if it does not have an id property, add it.\n    // 0 is not a valid object id\n    geoJson.features.forEach(function (val, idx) {\n        Object.assign(val.properties, { ID_FILE: '', OBJECTID_FILE: '' });\n\n        // to avoid double ID columns outside properties\n        if ('id' in val && typeof val.id !== 'undefined') {\n            val.properties.ID_FILE = val.id;\n            emptyID = false;\n        }\n\n        // to avoid double OBJECTID columns. Useful for both geojson and CSV file.\n        if ('OBJECTID' in val.properties) {\n            val.properties.OBJECTID_FILE = val.properties.OBJECTID;\n            delete val.properties.OBJECTID;\n            emptyObjID = false;\n        }\n\n        val.id = idx + 1;\n    });\n\n    // remove ID_FILE if all empty\n    if (emptyID) {\n        geoJson.features.forEach(function (val) {\n            delete val.properties.ID_FILE;\n        });\n    }\n\n    // remove OBJECTID_FILE if all empty\n    if (emptyObjID) {\n        geoJson.features.forEach(function (val) {\n            delete val.properties.OBJECTID_FILE;\n        });\n    }\n}\n\n/**\r\n * Extracts fields from the first feature in the feature collection, does no\r\n * guesswork on property types and calls everything a string.\r\n */\nfunction extractFields(geoJson) {\n    if (geoJson.features.length < 1) {\n        throw new Error('Field extraction requires at least one feature');\n    }\n\n    return Object.keys(geoJson.features[0].properties).map(function (prop) {\n        return { name: prop, type: 'esriFieldTypeString' };\n    });\n}\n\n/**\r\n * Makes an attempt to load and register a projection definition.\r\n * Returns promise resolving when process is complete\r\n * projModule - proj module from geoApi\r\n * projCode - the string or int epsg code we want to lookup\r\n * epsgLookup - function that will do the epsg lookup, taking code and returning promise of result or null\r\n */\nfunction projectionLookup(projModule, projCode, epsgLookup) {\n    // look up projection definitions if it's not already loaded and we have enough info\n    if (!projModule.getProjection(projCode) && epsgLookup && projCode) {\n        return epsgLookup(projCode).then(function (projDef) {\n            if (projDef) {\n                // register projection\n                projModule.addProjection(projCode, projDef);\n            }\n            return projDef;\n        });\n    } else {\n        return Promise.resolve(null);\n    }\n}\n\nfunction makeGeoJsonLayerBuilder(esriBundle, geoApi) {\n\n    /**\r\n    * Converts a GeoJSON object into a FeatureLayer.  Expects GeoJSON to be formed as a FeatureCollection\r\n    * containing a uniform feature type (FeatureLayer type will be set according to the type of the first\r\n    * feature entry).  Accepts the following options:\r\n    *   - targetWkid: Required. an integer for an ESRI wkid to project geometries to\r\n    *   - renderer: a string identifying one of the properties in defaultRenders\r\n    *   - sourceProjection: a string matching a proj4.defs projection to be used for the source data (overrides\r\n    *     geoJson.crs)\r\n    *   - fields: an array of fields to be appended to the FeatureLayer layerDefinition (OBJECTID is set by default)\r\n    *   - epsgLookup: a function that takes an EPSG code (string or number) and returns a promise of a proj4 style\r\n    *     definition or null if not found\r\n    *   - layerId: a string to use as the layerId\r\n    *   - colour: a hex string to define the symbol colour. e.g. '#33DD6A'\r\n    *\r\n    * @method makeGeoJsonLayer\r\n    * @param {Object} geoJson An object following the GeoJSON specification, should be a FeatureCollection with\r\n    * Features of only one type\r\n    * @param {Object} opts An object for supplying additional parameters\r\n    * @returns {Promise} a promise resolving with a {FeatureLayer}\r\n    */\n    return function (geoJson, opts) {\n\n        // TODO add documentation on why we only support layers with WKID (and not WKT).\n        var targetWkid = undefined;\n        var srcProj = 'EPSG:4326'; // 4326 is the default for GeoJSON with no projection defined\n        var layerId = undefined;\n        var layerDefinition = {\n            objectIdField: 'OBJECTID',\n            fields: [{\n                name: 'OBJECTID',\n                type: 'esriFieldTypeOID'\n            }]\n        };\n\n        // ensure our features have ids\n        assignIds(geoJson);\n        layerDefinition.drawingInfo = defaultRenderers[featureTypeToRenderer[geoJson.features[0].geometry.type]];\n\n        // attempt to get spatial reference from geoJson\n        if (geoJson.crs && geoJson.crs.type === 'name') {\n            srcProj = geoJson.crs.properties.name;\n        }\n\n        // pluck treats from options parameter\n        if (opts) {\n            if (opts.sourceProjection) {\n                srcProj = opts.sourceProjection;\n            }\n\n            if (opts.targetWkid) {\n                targetWkid = opts.targetWkid;\n            } else {\n                throw new Error('makeGeoJsonLayer - missing opts.targetWkid arguement');\n            }\n\n            if (opts.fields) {\n                layerDefinition.fields = layerDefinition.fields.concat(opts.fields);\n            }\n\n            if (opts.layerId) {\n                layerId = opts.layerId;\n            } else {\n                layerId = geoApi.shared.generateUUID();\n            }\n\n            // TODO add support for renderer option, or drop the option\n        } else {\n                throw new Error('makeGeoJsonLayer - missing opts arguement');\n            }\n\n        if (layerDefinition.fields.length === 1) {\n            // caller has not supplied custom field list. so take them all.\n            layerDefinition.fields = layerDefinition.fields.concat(extractFields(geoJson));\n        }\n\n        var destProj = 'EPSG:' + targetWkid;\n\n        // look up projection definitions if they don't already exist and we have enough info\n        var srcLookup = projectionLookup(geoApi.proj, srcProj, opts.epsgLookup);\n        var destLookup = projectionLookup(geoApi.proj, destProj, opts.epsgLookup);\n\n        // make the layer\n        var buildLayer = new Promise(function (resolve) {\n\n            // project data and convert to esri json format\n            // console.log('reprojecting ' + srcProj + ' -> EPSG:' + targetWkid);\n            geoApi.proj.projectGeojson(geoJson, destProj, srcProj);\n            var esriJson = Terraformer.ArcGIS.convert(geoJson, { sr: targetWkid });\n            var geometryType = layerDefinition.drawingInfo.geometryType;\n\n            var fs = {\n                features: esriJson,\n                geometryType: geometryType\n            };\n            var layer = new esriBundle.FeatureLayer({\n                layerDefinition: layerDefinition,\n                featureSet: fs\n            }, {\n                mode: esriBundle.FeatureLayer.MODE_SNAPSHOT,\n                id: layerId\n            });\n\n            // ＼(｀O´)／ manually setting SR because it will come out as 4326\n            layer.spatialReference = new esriBundle.SpatialReference({ wkid: targetWkid });\n\n            if (opts.colour) {\n                layer.renderer.symbol.color = new esriBundle.Color(opts.colour);\n            }\n\n            // initializing layer using JSON does not set this property. do it manually.\n            layer.geometryType = geometryType;\n\n            resolve(layer);\n        });\n\n        // call promises in order\n        return srcLookup.then(function () {\n            return destLookup;\n        }).then(function () {\n            return buildLayer;\n        });\n    };\n}\n\nfunction makeCsvLayerBuilder(esriBundle, geoApi) {\n\n    /**\r\n    * Constructs a FeatureLayer from CSV data. Accepts the following options:\r\n    *   - targetWkid: Required. an integer for an ESRI wkid the spatial reference the returned layer should be in\r\n    *   - renderer: a string identifying one of the properties in defaultRenders\r\n    *   - fields: an array of fields to be appended to the FeatureLayer layerDefinition (OBJECTID is set by default)\r\n    *   - latfield: a string identifying the field containing latitude values ('Lat' by default)\r\n    *   - lonfield: a string identifying the field containing longitude values ('Long' by default)\r\n    *   - delimiter: a string defining the delimiter character of the file (',' by default)\r\n    *   - epsgLookup: a function that takes an EPSG code (string or number) and returns a promise of a proj4 style\r\n    *     definition or null if not found\r\n    *   - layerId: a string to use as the layerId\r\n    *   - colour: a hex string to define the symbol colour. e.g. '#33DD6A'\r\n    * @param {string} csvData the CSV data to be processed\r\n    * @param {object} opts options to be set for the parser\r\n    * @returns {Promise} a promise resolving with a {FeatureLayer}\r\n    */\n    return function (csvData, opts) {\n        var csvOpts = { // default values\n            latfield: 'Lat',\n            lonfield: 'Long',\n            delimiter: ','\n        };\n\n        // user options if\n        if (opts) {\n            if (opts.latfield) {\n                csvOpts.latfield = opts.latfield;\n            }\n\n            if (opts.lonfield) {\n                csvOpts.lonfield = opts.lonfield;\n            }\n\n            if (opts.delimiter) {\n                csvOpts.delimiter = opts.delimiter;\n            }\n        }\n\n        return new Promise(function (resolve, reject) {\n            csv2geojson.csv2geojson(csvData, csvOpts, function (err, data) {\n                if (err) {\n                    console.warn('csv conversion error');\n                    console.log(err);\n                    reject(err);\n                } else {\n                    // csv2geojson will not include the lat and long in the feature\n                    data.features.map(function (feature) {\n                        // add new property Long and Lat before layer is generated\n                        feature.properties[csvOpts.lonfield] = feature.geometry.coordinates[0];\n                        feature.properties[csvOpts.latfield] = feature.geometry.coordinates[1];\n                    });\n\n                    // TODO are we at risk adding params to the var that was passed in? should we make a copy and modify the copy?\n                    opts.sourceProjection = 'EPSG:4326'; // csv is always latlong\n                    opts.renderer = 'circlePoint'; // csv is always latlong\n\n                    // NOTE: since makeGeoJsonLayer is a \"built\" function, grab the built version from our link to api object\n                    geoApi.layer.makeGeoJsonLayer(data, opts).then(function (jsonLayer) {\n                        resolve(jsonLayer);\n                    });\n                }\n            });\n        });\n    };\n}\n\n/**\r\n* Peek at the CSV output (useful for checking headers)\r\n* @param {string} csvData the CSV data to be processed\r\n* @param {string} delimiter the delimiter used by the data\r\n* @returns {Array} an array of arrays containing the parsed CSV\r\n*/\nfunction csvPeek(csvData, delimiter) {\n    return csv2geojson.dsv(delimiter).parseRows(csvData);\n}\n\nfunction makeShapeLayerBuilder(esriBundle, geoApi) {\n\n    /**\r\n    * Constructs a FeatureLayer from Shapefile data. Accepts the following options:\r\n    *   - targetWkid: Required. an integer for an ESRI wkid the spatial reference the returned layer should be in\r\n    *   - renderer: a string identifying one of the properties in defaultRenders\r\n    *   - sourceProjection: a string matching a proj4.defs projection to be used for the source data (overrides\r\n    *     geoJson.crs)\r\n    *   - fields: an array of fields to be appended to the FeatureLayer layerDefinition (OBJECTID is set by default)\r\n    *   - epsgLookup: a function that takes an EPSG code (string or number) and returns a promise of a proj4 style\r\n    *     definition or null if not found\r\n    *   - layerId: a string to use as the layerId\r\n    *   - colour: a hex string to define the symbol colour. e.g. '#33DD6A'\r\n    * @param {ArrayBuffer} shapeData an ArrayBuffer of the Shapefile in zip format\r\n    * @param {object} opts options to be set for the parser\r\n    * @returns {Promise} a promise resolving with a {FeatureLayer}\r\n    */\n    return function (shapeData, opts) {\n        return new Promise(function (resolve, reject) {\n            // turn shape into geojson\n            shp(shapeData).then(function (geoJson) {\n                // turn geojson into feature layer\n                // NOTE: since makeGeoJsonLayer is a \"built\" function, grab the built version from our link to api object\n                geoApi.layer.makeGeoJsonLayer(geoJson, opts).then(function (jsonLayer) {\n                    resolve(jsonLayer);\n                });\n            })['catch'](function (err) {\n                reject(err);\n            });\n        });\n    };\n}\n\nfunction getFeatureInfoBuilder(esriBundle) {\n    /**\r\n    * Fetches feature information, including geometry, from esri servers for feature layer.\r\n    * @param {layerUrl} layerUrl linking to layer where feature layer resides\r\n    * @param {objectId} objectId for feature to be retrived from a feature layer\r\n    * @returns {Promise} promise resolves with an esri Graphic (http://resources.arcgis.com/en/help/arcgis-rest-api/#/Feature_Map_Service_Layer/02r3000000r9000000/)\r\n    */\n    return function (layerUrl, objectId) {\n        return new Promise(function (resolve, reject) {\n            var defData = esriBundle.esriRequest({\n                url: layerUrl + objectId,\n                content: {\n                    f: 'json'\n                },\n                callbackParamName: 'callback',\n                handleAs: 'json'\n            });\n\n            defData.then(function (layerObj) {\n                console.log(layerObj);\n                resolve(layerObj);\n            }, function (error) {\n                console.warn(error);\n                reject(error);\n            });\n        });\n    };\n}\n\n/**\r\n* Given 2D array in column x row format, check if all entries in the two given columns are numeric.\r\n*\r\n* @param {Array} arr is a 2D array based on the CSV file that contains row information for all of the rows\r\n* @param {Integer} ind1 is a user specified index when uploading the CSV that specifies lat or long column (whichever isn't specified by ind2)\r\n* @param {Integer} ind2 is a user specified index when uploading the CSV that specifies lat or long column (whichever isn't specified by ind1)\r\n* @return {Boolean} returns true or false based on whether or not all all columns at ind1 and ind2 are numbers\r\n*/\nfunction validateLatLong(arr, ind1, ind2) {\n    return arr.every(function (row) {\n        return !(isNaN(row[ind1]) || isNaN(row[ind2]));\n    });\n}\n\n// CAREFUL NOW!\n// we are passing in a reference to geoApi.  it is a pointer to the object that contains this module,\n// along with other modules. it lets us access other modules without re-instantiating them in here.\nmodule.exports = function (esriBundle, geoApi) {\n\n    return {\n        ArcGISDynamicMapServiceLayer: esriBundle.ArcGISDynamicMapServiceLayer,\n        ArcGISImageServiceLayer: esriBundle.ArcGISImageServiceLayer,\n        GraphicsLayer: esriBundle.GraphicsLayer,\n        FeatureLayer: esriBundle.FeatureLayer,\n        ScreenPoint: esriBundle.ScreenPoint,\n        Query: esriBundle.Query,\n        TileLayer: esriBundle.ArcGISTiledMapServiceLayer,\n        ogc: ogc(esriBundle),\n        bbox: bbox(esriBundle, geoApi),\n        LayerDrawingOptions: esriBundle.LayerDrawingOptions,\n        getFeatureInfo: getFeatureInfoBuilder(esriBundle),\n        makeGeoJsonLayer: makeGeoJsonLayerBuilder(esriBundle, geoApi),\n        makeCsvLayer: makeCsvLayerBuilder(esriBundle, geoApi),\n        makeShapeLayer: makeShapeLayerBuilder(esriBundle, geoApi),\n        serverLayerIdentify: serverLayerIdentifyBuilder(esriBundle),\n        predictLayerUrl: predictLayerUrlBuilder(esriBundle),\n        validateFile: validateFile,\n        csvPeek: csvPeek,\n        serviceType: serviceType,\n        validateLatLong: validateLatLong\n    };\n};\n// maps handlers for different file types\n\n// convert from arraybuffer (containing zipped shapefile) to json (using shp library)\n\n},{\"./defaultRenderers.json\":149,\"./layer/bbox.js\":154,\"./layer/ogc.js\":155,\"csv2geojson\":5,\"shpjs\":137,\"terraformer\":145,\"terraformer-arcgis-parser\":143}],154:[function(_dereq_,module,exports){\n'use strict';\n\n// TODO: this module is currently split from layer.js because layer.js is already huge and doesn't need\n// more functions we can't find.  When (if ever) we refactor this can probably merge with some other code.\n\nvar defaultRenderers = _dereq_('../defaultRenderers.json');\n\nfunction bboxBuilder(esriBundle, apiRef) {\n    /**\r\n    * Makes a bounding box layer (a graphics layer with one rectangle graphic matching the supplied extent).\r\n    * @method makeBoundingBox\r\n    * @param {String} id the id of the bounding box to be created\r\n    * @param {EsriExtent} extent an ESRI extent object to be used for the graphics boundaries\r\n    * @param {SpatialReference} targetSr an ESRI spatial reference which is used for projecting the result\r\n    * @return {GraphicsLayer} an ESRI GraphicsLayer\r\n    */\n    return function (id, extent, targetSr) {\n        var result = new esriBundle.GraphicsLayer({ id: id, visible: true });\n        var projectedExtent = extent;\n        if (!apiRef.proj.isSpatialRefEqual(extent.spatialReference, targetSr)) {\n            projectedExtent = apiRef.proj.projectEsriExtent(extent, targetSr);\n        }\n        result.add(new esriBundle.Graphic({\n            geometry: projectedExtent,\n            symbol: defaultRenderers.boundingBoxPoly.renderer.symbol\n        }));\n        return result;\n    };\n}\n\nmodule.exports = function (esriBundle, apiRef) {\n    return {\n        makeBoundingBox: bboxBuilder(esriBundle, apiRef)\n    };\n};\n\n},{\"../defaultRenderers.json\":149}],155:[function(_dereq_,module,exports){\n'use strict';\nvar yxList = _dereq_('./reversedAxis.json');\n\nfunction getFeatureInfoBuilder(esriBundle) {\n    /**\r\n     * Handles click events for WMS layers (makes a WMS GetFeatureInfo call behind the scenes).\r\n     *\r\n     * @param {WMSLayer} wmsLayer an ESRI WMSLayer object to be queried\r\n     * @param {Object} clickEvent an ESRI map click event (used for screen coordinates)\r\n     * @param {Array} layerList a list of strings identifying the WMS layers to be queried\r\n     * @param {String} mimeType the format to be requested for the response\r\n     * @returns {Promise} a promise which resolves with the raw text of the GetFeatureInfo response\r\n     */\n    return function (wmsLayer, clickEvent, layerList, mimeType) {\n        var wkid = undefined;\n        var req = undefined;\n        var esriMap = wmsLayer.getMap();\n        var ext = esriMap.extent;\n        var srList = wmsLayer.spatialReferences;\n        var layers = layerList.join(',');\n\n        if (srList && srList.length > 1) {\n            wkid = srList[0];\n        } else if (esriMap.spatialReference.wkid) {\n            wkid = esriMap.spatialReference.wkid;\n        }\n        if (wmsLayer.version === '1.3' || wmsLayer.version === '1.3.0') {\n            req = { CRS: 'EPSG:' + wkid, I: clickEvent.screenPoint.x, J: clickEvent.screenPoint.y,\n                STYLES: '', FORMAT: wmsLayer.imageFormat };\n            if (yxList.indexOf(String(wkid)) > -1) {\n                req.BBOX = ext.ymin + ',' + ext.xmin + ',' + ext.ymax + ',' + ext.xmax;\n            }\n        } else {\n            req = { SRS: 'EPSG:' + wkid, X: clickEvent.screenPoint.x, Y: clickEvent.screenPoint.y };\n        }\n        if (!req.hasOwnProperty('BBOX')) {\n            req.BBOX = ext.xmin + ',' + ext.ymin + ',' + ext.xmax + ',' + ext.ymax;\n        }\n        var settings = {\n            SERVICE: 'WMS',\n            REQUEST: 'GetFeatureInfo',\n            VERSION: wmsLayer.version,\n            WIDTH: esriMap.width,\n            HEIGHT: esriMap.height,\n            QUERY_LAYERS: layers,\n            LAYERS: layers,\n            INFO_FORMAT: mimeType\n        };\n\n        Object.keys(settings).forEach(function (key) {\n            return req[key] = settings[key];\n        });\n\n        return Promise.resolve(esriBundle.esriRequest({\n            url: wmsLayer.url.split('?')[0],\n            content: req,\n            handleAs: 'text'\n        }));\n    };\n}\n\nfunction parseCapabilitiesBuilder(esriBundle) {\n\n    var query = esriBundle.dojoQuery;\n\n    /**\r\n     * Fetch layer data from a WMS endpoint.  This method will execute a WMS GetCapabilities\r\n     * request against the specified URL, it requests WMS 1.3 and it is capable of parsing\r\n     * 1.3 or 1.1.1 responses.  It returns a promise which will resolve with basic layer\r\n     * metadata and querying information.\r\n     *\r\n     * metadata response format:\r\n     *   { queryTypes: [mimeType(str)],\r\n     *     layers: [\r\n     *       {name(str), desc(str), queryable(bool), layers:[recursive] }\r\n     *     ] }\r\n     *\r\n     * @param {string} wmsEndpoint a URL pointing to a WMS server (it must not include a query string)\r\n     * @return {Promise} a promise resolving with a metadata object (as specified above)\r\n     */\n    return function (wmsEndpoint) {\n        var reqPromise = new Promise(function (resolve) {\n            getCapabilities().then(function (data) {\n                return resolve(data);\n            }) // if successful, pass straight back\n            ['catch'](function () {\n                // if errors, try again; see fgpv-vpgf/fgpv-vpgf#908 issue\n                console.error('Get capabilities failed; trying the second time;');\n                resolve(getCapabilities());\n            });\n        });\n\n        // there might already be a way to do this in the parsing API\n        // I don't know XML parsing well enough (and I don't want to)\n        // this has now been ported from RAMP to FGPV and I still, happily,\n        // do not know any more about XML parsing now\n        function getImmediateChild(node, childName) {\n            for (var i = 0; i < node.childNodes.length; ++i) {\n                if (node.childNodes[i].nodeName === childName) {\n                    return node.childNodes[i];\n                }\n            }\n            return undefined;\n        }\n\n        // find all <Layer> nodes under the given XML node\n        // pick title, name and queryable nodes/attributes\n        // recursively called on all child <Layer> nodes\n        function getLayers(xmlNode) {\n            return query('> Layer', xmlNode).map(function (layer) {\n                var nameNode = getImmediateChild(layer, 'Name');\n                var titleNode = getImmediateChild(layer, 'Title');\n                return {\n                    name: nameNode ? nameNode.textContent : null,\n                    desc: titleNode.textContent,\n                    queryable: layer.getAttribute('queryable') === '1',\n                    layers: getLayers(layer)\n                };\n            });\n        }\n\n        function getCapabilities() {\n            var url = wmsEndpoint;\n\n            // if url has a '?' do not append to avoid errors, user must add this manually\n            if (wmsEndpoint.indexOf('?') === -1) {\n                url += '?service=WMS&version=1.3&request=GetCapabilities';\n            }\n\n            return Promise.resolve(new esriBundle.esriRequest({\n                url: url,\n                handleAs: 'xml'\n            }).promise);\n        }\n\n        return reqPromise.then(function (data) {\n            return {\n                layers: getLayers(query('Capability', data)[0]),\n                queryTypes: query('GetFeatureInfo > Format', data).map(function (node) {\n                    return node.textContent;\n                })\n            };\n        });\n    };\n}\n\n/**\r\n * Recursively crawl a wms layer info structure. Store any legends in the provided map object.\r\n *\r\n * @private\r\n * @param {Array} layerInfos array of ESRI WMSLayerInfo objects\r\n * @param {Map} urlMap a Map of sublayer names to legend urls\r\n */\nfunction crawlLayerInfos(layerInfos, urlMap) {\n    layerInfos.forEach(function (li) {\n        if (li.name) {\n            urlMap.set(li.name, li.legendURL);\n        }\n        if (li.subLayers.length > 0) {\n            crawlLayerInfos(li.subLayers, urlMap);\n        }\n    });\n}\n\n/**\r\n * Finds the appropriate legend URLs for WMS layers.\r\n *\r\n * @param {WMSLayer} wmsLayer an ESRI WMSLayer object to be queried\r\n * @param {Array} layerList a list of strings identifying the WMS layers to be queried\r\n * @returns {Array} a list of strings containing URLs for specified layers (order is preserved)\r\n */\nfunction getLegendUrls(wmsLayer, layerList) {\n    var liMap = new Map(); // use Map in case someone clever uses a WMS layer name that matches an Object's default properties\n    crawlLayerInfos(wmsLayer.layerInfos, liMap);\n    return layerList.map(function (l) {\n        return liMap.get(l);\n    });\n}\n\nmodule.exports = function (esriBundle) {\n    return {\n        WmsLayer: esriBundle.WmsLayer,\n        getFeatureInfo: getFeatureInfoBuilder(esriBundle),\n        parseCapabilities: parseCapabilitiesBuilder(esriBundle),\n        getLegendUrls: getLegendUrls\n    };\n};\n\n},{\"./reversedAxis.json\":156}],156:[function(_dereq_,module,exports){\nmodule.exports=[\"4326\",\"4269\",\"4258\",\"31467\",\"31468\",\"31469\",\"2166\",\"2167\",\"2168\",\"2036\",\"2044\",\"2045\",\"2065\",\"2081\",\"2082\",\"2083\",\"2085\",\"2086\",\"2091\",\"2092\",\"2093\",\"2096\",\"2097\",\"2098\",\"2105\",\"2106\",\"2107\",\"2108\",\"2109\",\"2110\",\"2111\",\"2112\",\"2113\",\"2114\",\"2115\",\"2116\",\"2117\",\"2118\",\"2119\",\"2120\",\"2121\",\"2122\",\"2123\",\"2124\",\"2125\",\"2126\",\"2127\",\"2128\",\"2129\",\"2130\",\"2131\",\"2132\",\"2169\",\"2170\",\"2171\",\"2172\",\"2173\",\"2174\",\"2175\",\"2176\",\"2177\",\"2178\",\"2179\",\"2180\",\"2193\",\"2199\",\"2200\",\"2206\",\"2207\",\"2208\",\"2209\",\"2210\",\"2211\",\"2212\",\"2319\",\"2320\",\"2321\",\"2322\",\"2323\",\"2324\",\"2325\",\"2326\",\"2327\",\"2328\",\"2329\",\"2330\",\"2331\",\"2332\",\"2333\",\"2334\",\"2335\",\"2336\",\"2337\",\"2338\",\"2339\",\"2340\",\"2341\",\"2342\",\"2343\",\"2344\",\"2345\",\"2346\",\"2347\",\"2348\",\"2349\",\"2350\",\"2351\",\"2352\",\"2353\",\"2354\",\"2355\",\"2356\",\"2357\",\"2358\",\"2359\",\"2360\",\"2361\",\"2362\",\"2363\",\"2364\",\"2365\",\"2366\",\"2367\",\"2368\",\"2369\",\"2370\",\"2371\",\"2372\",\"2373\",\"2374\",\"2375\",\"2376\",\"2377\",\"2378\",\"2379\",\"2380\",\"2381\",\"2382\",\"2383\",\"2384\",\"2385\",\"2386\",\"2387\",\"2388\",\"2389\",\"2390\",\"2391\",\"2392\",\"2393\",\"2394\",\"2395\",\"2396\",\"2397\",\"2398\",\"2399\",\"2400\",\"2401\",\"2402\",\"2403\",\"2404\",\"2405\",\"2406\",\"2407\",\"2408\",\"2409\",\"2410\",\"2411\",\"2412\",\"2413\",\"2414\",\"2415\",\"2416\",\"2417\",\"2418\",\"2419\",\"2420\",\"2421\",\"2422\",\"2423\",\"2424\",\"2425\",\"2426\",\"2427\",\"2428\",\"2429\",\"2430\",\"2431\",\"2432\",\"2433\",\"2434\",\"2435\",\"2436\",\"2437\",\"2438\",\"2439\",\"2440\",\"2441\",\"2442\",\"2443\",\"2444\",\"2445\",\"2446\",\"2447\",\"2448\",\"2449\",\"2450\",\"2451\",\"2452\",\"2453\",\"2454\",\"2455\",\"2456\",\"2457\",\"2458\",\"2459\",\"2460\",\"2461\",\"2462\",\"2463\",\"2464\",\"2465\",\"2466\",\"2467\",\"2468\",\"2469\",\"2470\",\"2471\",\"2472\",\"2473\",\"2474\",\"2475\",\"2476\",\"2477\",\"2478\",\"2479\",\"2480\",\"2481\",\"2482\",\"2483\",\"2484\",\"2485\",\"2486\",\"2487\",\"2488\",\"2489\",\"2490\",\"2491\",\"2492\",\"2493\",\"2494\",\"2495\",\"2496\",\"2497\",\"2498\",\"2499\",\"2500\",\"2501\",\"2502\",\"2503\",\"2504\",\"2505\",\"2506\",\"2507\",\"2508\",\"2509\",\"2510\",\"2511\",\"2512\",\"2513\",\"2514\",\"2515\",\"2516\",\"2517\",\"2518\",\"2519\",\"2520\",\"2521\",\"2522\",\"2523\",\"2524\",\"2525\",\"2526\",\"2527\",\"2528\",\"2529\",\"2530\",\"2531\",\"2532\",\"2533\",\"2534\",\"2535\",\"2536\",\"2537\",\"2538\",\"2539\",\"2540\",\"2541\",\"2542\",\"2543\",\"2544\",\"2545\",\"2546\",\"2547\",\"2548\",\"2549\",\"2551\",\"2552\",\"2553\",\"2554\",\"2555\",\"2556\",\"2557\",\"2558\",\"2559\",\"2560\",\"2561\",\"2562\",\"2563\",\"2564\",\"2565\",\"2566\",\"2567\",\"2568\",\"2569\",\"2570\",\"2571\",\"2572\",\"2573\",\"2574\",\"2575\",\"2576\",\"2577\",\"2578\",\"2579\",\"2580\",\"2581\",\"2582\",\"2583\",\"2584\",\"2585\",\"2586\",\"2587\",\"2588\",\"2589\",\"2590\",\"2591\",\"2592\",\"2593\",\"2594\",\"2595\",\"2596\",\"2597\",\"2598\",\"2599\",\"2600\",\"2601\",\"2602\",\"2603\",\"2604\",\"2605\",\"2606\",\"2607\",\"2608\",\"2609\",\"2610\",\"2611\",\"2612\",\"2613\",\"2614\",\"2615\",\"2616\",\"2617\",\"2618\",\"2619\",\"2620\",\"2621\",\"2622\",\"2623\",\"2624\",\"2625\",\"2626\",\"2627\",\"2628\",\"2629\",\"2630\",\"2631\",\"2632\",\"2633\",\"2634\",\"2635\",\"2636\",\"2637\",\"2638\",\"2639\",\"2640\",\"2641\",\"2642\",\"2643\",\"2644\",\"2645\",\"2646\",\"2647\",\"2648\",\"2649\",\"2650\",\"2651\",\"2652\",\"2653\",\"2654\",\"2655\",\"2656\",\"2657\",\"2658\",\"2659\",\"2660\",\"2661\",\"2662\",\"2663\",\"2664\",\"2665\",\"2666\",\"2667\",\"2668\",\"2669\",\"2670\",\"2671\",\"2672\",\"2673\",\"2674\",\"2675\",\"2676\",\"2677\",\"2678\",\"2679\",\"2680\",\"2681\",\"2682\",\"2683\",\"2684\",\"2685\",\"2686\",\"2687\",\"2688\",\"2689\",\"2690\",\"2691\",\"2692\",\"2693\",\"2694\",\"2695\",\"2696\",\"2697\",\"2698\",\"2699\",\"2700\",\"2701\",\"2702\",\"2703\",\"2704\",\"2705\",\"2706\",\"2707\",\"2708\",\"2709\",\"2710\",\"2711\",\"2712\",\"2713\",\"2714\",\"2715\",\"2716\",\"2717\",\"2718\",\"2719\",\"2720\",\"2721\",\"2722\",\"2723\",\"2724\",\"2725\",\"2726\",\"2727\",\"2728\",\"2729\",\"2730\",\"2731\",\"2732\",\"2733\",\"2734\",\"2735\",\"2738\",\"2739\",\"2740\",\"2741\",\"2742\",\"2743\",\"2744\",\"2745\",\"2746\",\"2747\",\"2748\",\"2749\",\"2750\",\"2751\",\"2752\",\"2753\",\"2754\",\"2755\",\"2756\",\"2757\",\"2758\",\"2935\",\"2936\",\"2937\",\"2938\",\"2939\",\"2940\",\"2941\",\"2953\",\"2963\",\"3006\",\"3007\",\"3008\",\"3009\",\"3010\",\"3011\",\"3012\",\"3013\",\"3014\",\"3015\",\"3016\",\"3017\",\"3018\",\"3019\",\"3020\",\"3021\",\"3022\",\"3023\",\"3024\",\"3025\",\"3026\",\"3027\",\"3028\",\"3029\",\"3030\",\"3034\",\"3035\",\"3038\",\"3039\",\"3040\",\"3041\",\"3042\",\"3043\",\"3044\",\"3045\",\"3046\",\"3047\",\"3048\",\"3049\",\"3050\",\"3051\",\"3058\",\"3059\",\"3068\",\"3114\",\"3115\",\"3116\",\"3117\",\"3118\",\"3120\",\"3126\",\"3127\",\"3128\",\"3129\",\"3130\",\"3131\",\"3132\",\"3133\",\"3134\",\"3135\",\"3136\",\"3137\",\"3138\",\"3139\",\"3140\",\"3146\",\"3147\",\"3150\",\"3151\",\"3152\",\"3300\",\"3301\",\"3328\",\"3329\",\"3330\",\"3331\",\"3332\",\"3333\",\"3334\",\"3335\",\"3346\",\"3350\",\"3351\",\"3352\",\"3366\",\"3386\",\"3387\",\"3388\",\"3389\",\"3390\",\"3396\",\"3397\",\"3398\",\"3399\",\"3407\",\"3414\",\"3416\",\"3764\",\"3788\",\"3789\",\"3790\",\"3791\",\"3793\",\"3795\",\"3796\",\"3819\",\"3821\",\"3823\",\"3824\",\"3833\",\"3834\",\"3835\",\"3836\",\"3837\",\"3838\",\"3839\",\"3840\",\"3841\",\"3842\",\"3843\",\"3844\",\"3845\",\"3846\",\"3847\",\"3848\",\"3849\",\"3850\",\"3851\",\"3852\",\"3854\",\"3873\",\"3874\",\"3875\",\"3876\",\"3877\",\"3878\",\"3879\",\"3880\",\"3881\",\"3882\",\"3883\",\"3884\",\"3885\",\"3888\",\"3889\",\"3906\",\"3907\",\"3908\",\"3909\",\"3910\",\"3911\",\"4001\",\"4002\",\"4003\",\"4004\",\"4005\",\"4006\",\"4007\",\"4008\",\"4009\",\"4010\",\"4011\",\"4012\",\"4013\",\"4014\",\"4015\",\"4016\",\"4017\",\"4018\",\"4019\",\"4020\",\"4021\",\"4022\",\"4023\",\"4024\",\"4025\",\"4026\",\"4027\",\"4028\",\"4029\",\"4030\",\"4031\",\"4032\",\"4033\",\"4034\",\"4035\",\"4036\",\"4037\",\"4038\",\"4040\",\"4041\",\"4042\",\"4043\",\"4044\",\"4045\",\"4046\",\"4047\",\"4052\",\"4053\",\"4054\",\"4055\",\"4074\",\"4075\",\"4080\",\"4081\",\"4120\",\"4121\",\"4122\",\"4123\",\"4124\",\"4125\",\"4126\",\"4127\",\"4128\",\"4129\",\"4130\",\"4131\",\"4132\",\"4133\",\"4134\",\"4135\",\"4136\",\"4137\",\"4138\",\"4139\",\"4140\",\"4141\",\"4142\",\"4143\",\"4144\",\"4145\",\"4146\",\"4147\",\"4148\",\"4149\",\"4150\",\"4151\",\"4152\",\"4153\",\"4154\",\"4155\",\"4156\",\"4157\",\"4158\",\"4159\",\"4160\",\"4161\",\"4162\",\"4163\",\"4164\",\"4165\",\"4166\",\"4167\",\"4168\",\"4169\",\"4170\",\"4171\",\"4172\",\"4173\",\"4174\",\"4175\",\"4176\",\"4178\",\"4179\",\"4180\",\"4181\",\"4182\",\"4183\",\"4184\",\"4185\",\"4188\",\"4189\",\"4190\",\"4191\",\"4192\",\"4193\",\"4194\",\"4195\",\"4196\",\"4197\",\"4198\",\"4199\",\"4200\",\"4201\",\"4202\",\"4203\",\"4204\",\"4205\",\"4206\",\"4207\",\"4208\",\"4209\",\"4210\",\"4211\",\"4212\",\"4213\",\"4214\",\"4215\",\"4216\",\"4218\",\"4219\",\"4220\",\"4221\",\"4222\",\"4223\",\"4224\",\"4225\",\"4226\",\"4227\",\"4228\",\"4229\",\"4230\",\"4231\",\"4232\",\"4233\",\"4234\",\"4235\",\"4236\",\"4237\",\"4238\",\"4239\",\"4240\",\"4241\",\"4242\",\"4243\",\"4244\",\"4245\",\"4246\",\"4247\",\"4248\",\"4249\",\"4250\",\"4251\",\"4252\",\"4253\",\"4254\",\"4255\",\"4256\",\"4257\",\"4259\",\"4260\",\"4261\",\"4262\",\"4263\",\"4264\",\"4265\",\"4266\",\"4267\",\"4268\",\"4270\",\"4271\",\"4272\",\"4273\",\"4274\",\"4275\",\"4276\",\"4277\",\"4278\",\"4279\",\"4280\",\"4281\",\"4282\",\"4283\",\"4284\",\"4285\",\"4286\",\"4287\",\"4288\",\"4289\",\"4291\",\"4292\",\"4293\",\"4294\",\"4295\",\"4296\",\"4297\",\"4298\",\"4299\",\"4300\",\"4301\",\"4302\",\"4303\",\"4304\",\"4306\",\"4307\",\"4308\",\"4309\",\"4310\",\"4311\",\"4312\",\"4313\",\"4314\",\"4315\",\"4316\",\"4317\",\"4318\",\"4319\",\"4322\",\"4324\",\"4327\",\"4329\",\"4339\",\"4341\",\"4343\",\"4345\",\"4347\",\"4349\",\"4351\",\"4353\",\"4355\",\"4357\",\"4359\",\"4361\",\"4363\",\"4365\",\"4367\",\"4369\",\"4371\",\"4373\",\"4375\",\"4377\",\"4379\",\"4381\",\"4383\",\"4386\",\"4388\",\"4417\",\"4434\",\"4463\",\"4466\",\"4469\",\"4470\",\"4472\",\"4475\",\"4480\",\"4482\",\"4483\",\"4490\",\"4491\",\"4492\",\"4493\",\"4494\",\"4495\",\"4496\",\"4497\",\"4498\",\"4499\",\"4500\",\"4501\",\"4502\",\"4503\",\"4504\",\"4505\",\"4506\",\"4507\",\"4508\",\"4509\",\"4510\",\"4511\",\"4512\",\"4513\",\"4514\",\"4515\",\"4516\",\"4517\",\"4518\",\"4519\",\"4520\",\"4521\",\"4522\",\"4523\",\"4524\",\"4525\",\"4526\",\"4527\",\"4528\",\"4529\",\"4530\",\"4531\",\"4532\",\"4533\",\"4534\",\"4535\",\"4536\",\"4537\",\"4538\",\"4539\",\"4540\",\"4541\",\"4542\",\"4543\",\"4544\",\"4545\",\"4546\",\"4547\",\"4548\",\"4549\",\"4550\",\"4551\",\"4552\",\"4553\",\"4554\",\"4555\",\"4557\",\"4558\",\"4568\",\"4569\",\"4570\",\"4571\",\"4572\",\"4573\",\"4574\",\"4575\",\"4576\",\"4577\",\"4578\",\"4579\",\"4580\",\"4581\",\"4582\",\"4583\",\"4584\",\"4585\",\"4586\",\"4587\",\"4588\",\"4589\",\"4600\",\"4601\",\"4602\",\"4603\",\"4604\",\"4605\",\"4606\",\"4607\",\"4608\",\"4609\",\"4610\",\"4611\",\"4612\",\"4613\",\"4614\",\"4615\",\"4616\",\"4617\",\"4618\",\"4619\",\"4620\",\"4621\",\"4622\",\"4623\",\"4624\",\"4625\",\"4626\",\"4627\",\"4628\",\"4629\",\"4630\",\"4631\",\"4632\",\"4633\",\"4634\",\"4635\",\"4636\",\"4637\",\"4638\",\"4639\",\"4640\",\"4641\",\"4642\",\"4643\",\"4644\",\"4645\",\"4646\",\"4652\",\"4653\",\"4654\",\"4655\",\"4656\",\"4657\",\"4658\",\"4659\",\"4660\",\"4661\",\"4662\",\"4663\",\"4664\",\"4665\",\"4666\",\"4667\",\"4668\",\"4669\",\"4670\",\"4671\",\"4672\",\"4673\",\"4674\",\"4675\",\"4676\",\"4677\",\"4678\",\"4679\",\"4680\",\"4681\",\"4682\",\"4683\",\"4684\",\"4685\",\"4686\",\"4687\",\"4688\",\"4689\",\"4690\",\"4691\",\"4692\",\"4693\",\"4694\",\"4695\",\"4696\",\"4697\",\"4698\",\"4699\",\"4700\",\"4701\",\"4702\",\"4703\",\"4704\",\"4705\",\"4706\",\"4707\",\"4708\",\"4709\",\"4710\",\"4711\",\"4712\",\"4713\",\"4714\",\"4715\",\"4716\",\"4717\",\"4718\",\"4719\",\"4720\",\"4721\",\"4722\",\"4723\",\"4724\",\"4725\",\"4726\",\"4727\",\"4728\",\"4729\",\"4730\",\"4731\",\"4732\",\"4733\",\"4734\",\"4735\",\"4736\",\"4737\",\"4738\",\"4739\",\"4740\",\"4741\",\"4742\",\"4743\",\"4744\",\"4745\",\"4746\",\"4747\",\"4748\",\"4749\",\"4750\",\"4751\",\"4752\",\"4753\",\"4754\",\"4755\",\"4756\",\"4757\",\"4758\",\"4759\",\"4760\",\"4761\",\"4762\",\"4763\",\"4764\",\"4765\",\"4766\",\"4767\",\"4768\",\"4769\",\"4770\",\"4771\",\"4772\",\"4773\",\"4774\",\"4775\",\"4776\",\"4777\",\"4778\",\"4779\",\"4780\",\"4781\",\"4782\",\"4783\",\"4784\",\"4785\",\"4786\",\"4787\",\"4788\",\"4789\",\"4790\",\"4791\",\"4792\",\"4793\",\"4794\",\"4795\",\"4796\",\"4797\",\"4798\",\"4799\",\"4800\",\"4801\",\"4802\",\"4803\",\"4804\",\"4805\",\"4806\",\"4807\",\"4808\",\"4809\",\"4810\",\"4811\",\"4812\",\"4813\",\"4814\",\"4815\",\"4816\",\"4817\",\"4818\",\"4819\",\"4820\",\"4821\",\"4822\",\"4823\",\"4824\",\"4839\",\"4855\",\"4856\",\"4857\",\"4858\",\"4859\",\"4860\",\"4861\",\"4862\",\"4863\",\"4864\",\"4865\",\"4866\",\"4867\",\"4868\",\"4869\",\"4870\",\"4871\",\"4872\",\"4873\",\"4874\",\"4875\",\"4876\",\"4877\",\"4878\",\"4879\",\"4880\",\"4883\",\"4885\",\"4887\",\"4889\",\"4891\",\"4893\",\"4895\",\"4898\",\"4900\",\"4901\",\"4902\",\"4903\",\"4904\",\"4907\",\"4909\",\"4921\",\"4923\",\"4925\",\"4927\",\"4929\",\"4931\",\"4933\",\"4935\",\"4937\",\"4939\",\"4941\",\"4943\",\"4945\",\"4947\",\"4949\",\"4951\",\"4953\",\"4955\",\"4957\",\"4959\",\"4961\",\"4963\",\"4965\",\"4967\",\"4969\",\"4971\",\"4973\",\"4975\",\"4977\",\"4979\",\"4981\",\"4983\",\"4985\",\"4987\",\"4989\",\"4991\",\"4993\",\"4995\",\"4997\",\"4999\",\"5012\",\"5013\",\"5017\",\"5048\",\"5105\",\"5106\",\"5107\",\"5108\",\"5109\",\"5110\",\"5111\",\"5112\",\"5113\",\"5114\",\"5115\",\"5116\",\"5117\",\"5118\",\"5119\",\"5120\",\"5121\",\"5122\",\"5123\",\"5124\",\"5125\",\"5126\",\"5127\",\"5128\",\"5129\",\"5130\",\"5132\",\"5167\",\"5168\",\"5169\",\"5170\",\"5171\",\"5172\",\"5173\",\"5174\",\"5175\",\"5176\",\"5177\",\"5178\",\"5179\",\"5180\",\"5181\",\"5182\",\"5183\",\"5184\",\"5185\",\"5186\",\"5187\",\"5188\",\"5224\",\"5228\",\"5229\",\"5233\",\"5245\",\"5246\",\"5251\",\"5252\",\"5253\",\"5254\",\"5255\",\"5256\",\"5257\",\"5258\",\"5259\",\"5263\",\"5264\",\"5269\",\"5270\",\"5271\",\"5272\",\"5273\",\"5274\",\"5275\",\"5801\",\"5802\",\"5803\",\"5804\",\"5808\",\"5809\",\"5810\",\"5811\",\"5812\",\"5813\",\"5814\",\"5815\",\"5816\",\"20004\",\"20005\",\"20006\",\"20007\",\"20008\",\"20009\",\"20010\",\"20011\",\"20012\",\"20013\",\"20014\",\"20015\",\"20016\",\"20017\",\"20018\",\"20019\",\"20020\",\"20021\",\"20022\",\"20023\",\"20024\",\"20025\",\"20026\",\"20027\",\"20028\",\"20029\",\"20030\",\"20031\",\"20032\",\"20064\",\"20065\",\"20066\",\"20067\",\"20068\",\"20069\",\"20070\",\"20071\",\"20072\",\"20073\",\"20074\",\"20075\",\"20076\",\"20077\",\"20078\",\"20079\",\"20080\",\"20081\",\"20082\",\"20083\",\"20084\",\"20085\",\"20086\",\"20087\",\"20088\",\"20089\",\"20090\",\"20091\",\"20092\",\"21413\",\"21414\",\"21415\",\"21416\",\"21417\",\"21418\",\"21419\",\"21420\",\"21421\",\"21422\",\"21423\",\"21453\",\"21454\",\"21455\",\"21456\",\"21457\",\"21458\",\"21459\",\"21460\",\"21461\",\"21462\",\"21463\",\"21473\",\"21474\",\"21475\",\"21476\",\"21477\",\"21478\",\"21479\",\"21480\",\"21481\",\"21482\",\"21483\",\"21896\",\"21897\",\"21898\",\"21899\",\"22171\",\"22172\",\"22173\",\"22174\",\"22175\",\"22176\",\"22177\",\"22181\",\"22182\",\"22183\",\"22184\",\"22185\",\"22186\",\"22187\",\"22191\",\"22192\",\"22193\",\"22194\",\"22195\",\"22196\",\"22197\",\"25884\",\"27205\",\"27206\",\"27207\",\"27208\",\"27209\",\"27210\",\"27211\",\"27212\",\"27213\",\"27214\",\"27215\",\"27216\",\"27217\",\"27218\",\"27219\",\"27220\",\"27221\",\"27222\",\"27223\",\"27224\",\"27225\",\"27226\",\"27227\",\"27228\",\"27229\",\"27230\",\"27231\",\"27232\",\"27391\",\"27392\",\"27393\",\"27394\",\"27395\",\"27396\",\"27397\",\"27398\",\"27492\",\"28402\",\"28403\",\"28404\",\"28405\",\"28406\",\"28407\",\"28408\",\"28409\",\"28410\",\"28411\",\"28412\",\"28413\",\"28414\",\"28415\",\"28416\",\"28417\",\"28418\",\"28419\",\"28420\",\"28421\",\"28422\",\"28423\",\"28424\",\"28425\",\"28426\",\"28427\",\"28428\",\"28429\",\"28430\",\"28431\",\"28432\",\"28462\",\"28463\",\"28464\",\"28465\",\"28466\",\"28467\",\"28468\",\"28469\",\"28470\",\"28471\",\"28472\",\"28473\",\"28474\",\"28475\",\"28476\",\"28477\",\"28478\",\"28479\",\"28480\",\"28481\",\"28482\",\"28483\",\"28484\",\"28485\",\"28486\",\"28487\",\"28488\",\"28489\",\"28490\",\"28491\",\"28492\",\"29701\",\"29702\",\"30161\",\"30162\",\"30163\",\"30164\",\"30165\",\"30166\",\"30167\",\"30168\",\"30169\",\"30170\",\"30171\",\"30172\",\"30173\",\"30174\",\"30175\",\"30176\",\"30177\",\"30178\",\"30179\",\"30800\",\"31251\",\"31252\",\"31253\",\"31254\",\"31255\",\"31256\",\"31257\",\"31258\",\"31259\",\"31275\",\"31276\",\"31277\",\"31278\",\"31279\",\"31281\",\"31282\",\"31283\",\"31284\",\"31285\",\"31286\",\"31287\",\"31288\",\"31289\",\"31290\",\"31466\",\"31700\"]\r\n\n},{}],157:[function(_dereq_,module,exports){\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nvar TOO_MANY_LAYERS = 15;\n\n// This file relates to legends on an exported map, not legends in the layer selector\n\n/**\r\n * Generate all permutations of length M, with exactly N `true` values.\r\n *\r\n * @function\r\n * @param {int} M the size of the array (must be greater than 0)\r\n * @param {int} N the number of entries which should be true (must not be greater than M)\r\n * @return an array containing all possible size M arrays of boolean values with N true entries\r\n */\nfunction allComb(M, N) {\n    var maxTrue = N;\n    var maxFalse = M - N;\n    var C = [[[[]]]]; // C[m][n] is the solution to all_comb(m,n), C[0][0] starts with an empty array\n    for (var m = 1; m <= M; ++m) {\n        C[m] = [];\n        for (var n = 0; n <= m; ++n) {\n            // if this would place more than the max number of true or false values we don't need this part of the array\n            if (n > maxTrue || m - n > maxFalse) {\n                continue;\n            }\n\n            var a = n > 0 ? C[m - 1][n - 1].map(function (x) {\n                return x.concat(true);\n            }) : [];\n            var b = m > n ? C[m - 1][n].map(function (x) {\n                return x.concat(false);\n            }) : [];\n\n            C[m][n] = a.concat(b);\n        }\n    }\n    return C[M][N];\n}\n\n/**\r\n * Convenience function for assigning the `splitBefore` property on layers at specified points.\r\n * NOTE: this function modifies data in place\r\n * @function\r\n * @private\r\n * @param {Array} layers a list of layers to be updated (modified in place)\r\n * @param {Array} splitPoints an array of boolean values indicating if the layer list should be split at that point (must be layers.length-1 in size)\r\n * @return layers the same array as passed in\r\n */\nfunction assignLayerSplits(layers, splitPoints) {\n    layers[0].splitBefore = false;\n    splitPoints.forEach(function (split, i) {\n        return layers[i + 1].splitBefore = split;\n    });\n    return layers;\n}\n\n/**\r\n * Groups multiple layers into each section while attempting to minimize the legend height.\r\n * Allocates to the exact number specified in the `sections` argument.\r\n * NOTE: don't call this with too many layers as it tests all possible groupings and can be\r\n * computationally expensive (< 15 layers should be fine)\r\n * @function\r\n * @private\r\n * @param {Array} layers a list of layers to be fitted\r\n * @param {int} sections the number of sections to use\r\n * @return {Object} an object in the form { layers, sectionsUsed, bestPerm, bestHeight }\r\n */\nfunction packLayersIntoExactSections(layers, sections) {\n    var potentialSplits = layers.length - 1;\n    var requiredSplits = sections - 1;\n\n    var permutations = allComb(potentialSplits, requiredSplits);\n    var bestHeight = Number.MAX_VALUE;\n    var bestPerm = null;\n    var heights = Array(sections);\n\n    permutations.forEach(function (perm) {\n        heights.fill(0);\n        var curSec = 0;\n        layers.forEach(function (l, i) {\n            heights[curSec] += l.height;\n            if (perm[i]) {\n                ++curSec;\n            }\n        });\n        var h = Math.max.apply(Math, _toConsumableArray(heights));\n        if (h <= bestHeight) {\n            bestHeight = h;\n            bestPerm = perm;\n        }\n    });\n    return { layers: layers, sectionsUsed: sections, bestPerm: bestPerm, bestHeight: bestHeight };\n}\n\n/**\r\n * Groups multiple layers into each section while attempting to minimize the legend height.\r\n * Repeats as necessary to use the least number of sections while still keeping the resulting\r\n * legend height within 20% of optimal.\r\n * NOTE: don't call this with too many layers as it tests all possible groupings and can be\r\n * computationally expensive (< 15 layers should be fine)\r\n * @function\r\n * @private\r\n * @param {Array} layers a list of layers to be updated (modified in place)\r\n * @param {int} sections the number of sections to use\r\n * @return {Object} an object in the form { layers, sectionsUsed }\r\n */\nfunction packLayersIntoOptimalSections(layers, sections) {\n    var bestHeight = Number.MAX_VALUE;\n    var bestPerm = null;\n    var sectionsUsed = -1;\n    for (var n = sections; n > 1; --n) {\n        var _packLayersIntoExactSections = packLayersIntoExactSections(layers, n);\n\n        var perm = _packLayersIntoExactSections.bestPerm;\n        var height = _packLayersIntoExactSections.bestHeight;\n\n        if (height * 0.8 > bestHeight) {\n            break;\n        } else if (height <= bestHeight) {\n            bestHeight = height;\n            bestPerm = perm;\n            sectionsUsed = n;\n        }\n    }\n    assignLayerSplits(layers, bestPerm);\n    return { layers: layers, sectionsUsed: sectionsUsed };\n}\n\n/**\r\n * Split a layer into `splitCount` parts of roughly equal size.\r\n * @function\r\n * @private\r\n * @param {Object} layer a layer object to be split into `splitCount` parts\r\n * @param {int} chunkSize the maximum height in pixels of the legend sections\r\n * @param {int} splitCount the number of pieces which the layer should be broken into\r\n * @return an object with properties whiteSpace: <int>, splits: [ <layerItems> ]\r\n */\nfunction splitLayer(layer, chunkSize, splitCount) {\n    var itemYOffset = layer.y;\n    var itemYMax = 0;\n    var splits = [];\n    var splitSizes = Array(splitCount).fill(0);\n\n    function traverse(items) {\n        items.forEach(function (item) {\n\n            if (splitCount === 1) {\n                return;\n            }\n\n            splitSizes[splitCount - 1] = itemYMax - itemYOffset; // bottom of current item - offset at current section start\n\n            // this is the y coordinate of the item's bottom boundary\n            itemYMax = item.y + (item.type === 'group' ? item.headerHeight : item.height);\n\n            if (itemYMax - itemYOffset >= chunkSize) {\n                splitCount--;\n\n                // whitespace is created when an item sitting on the boundary pulled into the next chunk, the space\n                // it would have occupied is wasted; the waste doubles as the entire item is moved to the next legend chunk\n                itemYOffset = item.y;\n                splits.push(item);\n            }\n\n            if (item.type === 'group') {\n                traverse(item.items);\n            }\n        });\n    }\n\n    traverse(layer.items);\n    splitSizes[splitCount - 1] = layer.height - (itemYOffset - layer.y); // bottom of layer - start of last section; start of last section = total offset of last section - offset at start of layer\n\n    // with whiteSpace we want to find the difference between the chunkSize and used space\n    // for each section used (whiteSpace may be negative indicating that a section is\n    // spilling past the target size); the total amount of whiteSpace is a measure of how\n    // bad the layer allocation was\n    return { whiteSpace: splitSizes.reduce(function (a, b) {\n            return a + Math.abs(chunkSize - b);\n        }, 0), splits: splits };\n}\n\n/**\r\n * Find the optimal split points for the given layer.\r\n * @function\r\n * @private\r\n * @param {Object} layer a layer object to be split into `splitCount` parts\r\n * @param {int} splitCount the number of pieces which the layer should be broken into\r\n * @return a reference to the layer passed in\r\n */\nfunction findOptimalSplit(layer, splitCount) {\n    if (splitCount === 1) {\n        return layer;\n    }\n\n    var chunkSize = layer.height / splitCount; // get initial chunk size for starters\n\n    // get initial splits and whitespace with initial chunk size; this will serve to determine the steps at which the chunk size will be increased\n\n    var _splitLayer = splitLayer(layer, chunkSize, splitCount);\n\n    var minSplits = _splitLayer.splits;\n    var minWhiteSpace = _splitLayer.whiteSpace;\n\n    var stepCount = 8; // number of attempts\n    var step = minWhiteSpace / stepCount;\n\n    // calculate splits while increasing the chunk size\n    for (var i = 1; i <= stepCount; i++) {\n        chunkSize += step;\n\n        var _splitLayer2 = splitLayer(layer, chunkSize, splitCount);\n\n        var splits = _splitLayer2.splits;\n        var whiteSpace = _splitLayer2.whiteSpace;\n\n        // store splits corresponding to the minimum whitespace\n        if (whiteSpace < minWhiteSpace) {\n            minWhiteSpace = whiteSpace;\n            minSplits = splits;\n        }\n    }\n\n    // apply split to the splits that result in the minimum of whitespace\n    minSplits.forEach(function (split) {\n        return split.splitBefore = true;\n    });\n    return layer;\n}\n\n/**\r\n * @function\r\n * @private\r\n * @param {Array} layers a list of layers to be updated (modified in place)\r\n * @param {int} sectionsAvailable the maximum number of sections to use\r\n * @param {int} mapHeight the rendered height of the map image\r\n * @return the same layers array as passed in\r\n */\nfunction allocateLayersToSections(layers, sectionsAvailable, mapHeight) {\n    assignLayerSplits(layers, Array(layers.length - 1).fill(true));\n    var bestSectionUsage = {}; // maps number of sections used to best height achieved\n    bestSectionUsage[layers.length] = {\n        height: Math.max.apply(Math, _toConsumableArray(layers.map(function (l) {\n            return l.height;\n        }))),\n        segments: Array(layers.length)\n    };\n    bestSectionUsage[layers.length].segments.fill(1);\n\n    var curSectionsUsed = layers.length;\n\n    var _loop = function () {\n        var oldSegments = bestSectionUsage[curSectionsUsed].segments;\n        var normalizedLayers = oldSegments.map(function (seg, i) {\n            return layers[i].height / seg;\n        });\n        var worstLayerIndex = normalizedLayers.indexOf(Math.max.apply(Math, _toConsumableArray(normalizedLayers)));\n        var newSegments = oldSegments.map(function (seg, i) {\n            return i === worstLayerIndex ? seg + 1 : seg;\n        });\n        ++curSectionsUsed;\n        bestSectionUsage[curSectionsUsed] = {\n            height: Math.max.apply(Math, _toConsumableArray(newSegments.map(function (seg, i) {\n                return layers[i].height / seg;\n            }))),\n            segments: newSegments\n        };\n    };\n\n    while (curSectionsUsed < sectionsAvailable && bestSectionUsage[curSectionsUsed].height > mapHeight * 2) {\n        _loop();\n    }\n    while (curSectionsUsed > layers.length) {\n        if (bestSectionUsage[curSectionsUsed].height < 0.9 * bestSectionUsage[curSectionsUsed - 1].height) {\n            break;\n        }\n        --curSectionsUsed;\n    }\n    layers.forEach(function (l, i) {\n        return findOptimalSplit(l, bestSectionUsage[curSectionsUsed].segments[i]);\n    });\n    return { layers: layers, sectionsUsed: curSectionsUsed };\n}\n\n/**\r\n * Generate the structure for a legend given a set of layers.\r\n * @function\r\n * @param {Array} layerList a list of layers to be updated (modified in place)\r\n * @param {int} sectionsAvailable the maximum number of sections to use\r\n * @param {int} mapHeight the rendered height of the map image\r\n * @return an object with properties layers, sectionsUsed. (layerList is modified in place)\r\n */\nfunction makeLegend(layerList, sectionsAvailable, mapHeight) {\n    if (layerList.length > TOO_MANY_LAYERS) {\n        var _ret2 = (function () {\n            var layersPerSection = Math.ceil(layerList.length / sectionsAvailable);\n            var splitPoints = Array(layerList.length - 1).fill(0).map(function (v, i) {\n                return (i + 1) % layersPerSection === 0;\n            }); // I don't know why the useless fill is necessary\n            assignLayerSplits(layerList, splitPoints);\n            return {\n                v: { layers: layerList, sectionsUsed: sectionsAvailable }\n            };\n        })();\n\n        if (typeof _ret2 === 'object') return _ret2.v;\n    }\n    if (layerList.length <= sectionsAvailable) {\n        return allocateLayersToSections(layerList, sectionsAvailable, mapHeight);\n    } else {\n        return packLayersIntoOptimalSections(layerList, sectionsAvailable);\n    }\n}\n\nmodule.exports = function () {\n    return { makeLegend: makeLegend, allComb: allComb, splitLayer: splitLayer, findOptimalSplit: findOptimalSplit };\n};\n\n},{}],158:[function(_dereq_,module,exports){\n'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nvar basemap = _dereq_('./basemap.js');\n\n/**\r\n  * The `MapManager` module exports an object with the following properties:\r\n  * - `Extent` esri/geometry type\r\n  * - `Map` esri/map type\r\n  * - `OverviewMap` esri/dijit/OverviewMap type\r\n  * - `Scalebar` sri/dijit/Scalebar type\r\n  * - `getExtentFromSetting function to create an ESRI Extent object from extent setting JSON object.\r\n  * - `setupMap` function that interates over config settings and apply logic for any items present.\r\n  * - `setProxy` function to set proxy service URL to avoid same origin issues\r\n  */\n\n// mapManager module, provides function to setup a map\nmodule.exports = function (esriBundle, geoApi) {\n    // note: a decision was made to include esri/dijit/Scalebar here because\n    // it has minimum interaction after creation, no need for the additional\n    // scalebar.js\n    var mapManager = {\n        Extent: esriBundle.Extent,\n        Map: esriBundle.Map,\n        OverviewMap: esriBundle.OverviewMap,\n        Scalebar: esriBundle.Scalebar,\n        getExtentFromJson: getExtentFromJson,\n        setupMap: setupMap,\n        setProxy: setProxy,\n        mapDefault: mapDefault,\n        findClosestLOD: findClosestLOD,\n        getNorthArrowAngle: getNorthArrowAngle,\n        getScaleRatio: getScaleRatio,\n        enforceBoundary: enforceBoundary,\n        clipExtentCoords: clipExtentCoords // only exposed so unit tests can access it\n    };\n\n    var basemapCtrl = undefined;\n    var scalebarCtrl = undefined;\n    var overviewMapCtrl = undefined;\n\n    /**\r\n     * Setup map features with info provided by configuration.\r\n     *\r\n     * @function setupMap\r\n     * @param {esriMap} map      ESRI map object\r\n     * @param {Object} settings  JSON object of map configurations\r\n     * @return {Object} with following properties:\r\n     * <ul>\r\n     *    <li>BasemapControl - an object with setBasemap function and a BasemapGallery object</li>\r\n     *    <li>OverviewMapControl - a reference to the overviewMap control on the map</li>\r\n     *    <li>ScalebarControl - a reference to the scalebar control on the map</li>\r\n     * </ul>\r\n     */\n    function setupMap(map, settings) {\n\n        // check to see if property exists in settings\n        if (settings.basemaps) {\n\n            // need to pass esriBundle to basemap module in order to use it\n            // the alternative is to pass geoApi reference after creation, and then use the geoApi to\n            // access the properly initialized modules.\n            // or Is there an other way to do it?\n            var lbasemap = basemap(esriBundle);\n\n            // basemapCtrl is a basemap gallery object, should store this value for application use\n            basemapCtrl = lbasemap.makeBasemaps(settings.basemaps, map);\n        } else {\n            console.warn('warning: basemaps setting does not exist');\n        }\n\n        // TODO: add code to setup scalebar\n        if (settings.scalebar) {\n\n            scalebarCtrl = new mapManager.Scalebar({\n                map: map,\n                attachTo: settings.scalebar.attachTo,\n                scalebarUnit: settings.scalebar.scalebarUnit\n            });\n\n            scalebarCtrl.show();\n        } else {\n            console.warn('scalebar setting does not exists');\n        }\n\n        // TODO: add code to setup north arrow\n\n        // Setup overview map\n        if (settings.overviewMap && settings.overviewMap.enabled) {\n            if (overviewMapCtrl) {\n                overviewMapCtrl.destroy();\n                overviewMapCtrl = null;\n            }\n\n            overviewMapCtrl = mapManager.OverviewMap({\n                map: map,\n                expandFactor: 1,\n                visible: settings.overviewMap.enabled\n            });\n\n            overviewMapCtrl.startup();\n\n            basemapCtrl.basemapGallery.on('selection-change', function () {\n                overviewMapCtrl.destroy();\n\n                overviewMapCtrl = mapManager.OverviewMap({\n                    map: map,\n                    expandFactor: 1,\n                    visible: settings.overviewMap.enabled\n                });\n\n                overviewMapCtrl.startup();\n            });\n        } else {\n            console.warn('overviewMap setting does not exist, or it\\'s visible' + ' setting is set to false.');\n        }\n\n        // TODO: add code to setup mouse co-ordinates\n\n        // return as object so we can use this in our geo section of fgpv\n        return {\n            BasemapControl: basemapCtrl,\n            OverviewMapControl: overviewMapCtrl,\n            ScalebarControl: scalebarCtrl\n        };\n    }\n\n    /**\r\n     * Set proxy service URL to avoid same origin issues.\r\n     *\r\n     * @function setProxy\r\n     * @param {string} proxyUrl should point to a proxy with an interface compatible with ESRI's resource proxy\r\n     */\n    function setProxy(proxyUrl) {\n        esriBundle.esriConfig.defaults.io.proxyUrl = proxyUrl;\n    }\n\n    /**\r\n     * Sets or gets map default config values.\r\n     *\r\n     * @function mapDefault\r\n     * @param {String} key  name of the default property\r\n     * @param {Any} value   value to set for the specified default property\r\n     */\n    function mapDefault(key, value) {\n        if (typeof value === 'undefined') {\n            return esriBundle.esriConfig.defaults.map[key];\n        } else {\n            esriBundle.esriConfig.defaults.map[key] = value;\n        }\n    }\n\n    /**\r\n     * Create an ESRI Extent object from extent setting JSON object.\r\n     *\r\n     * @function getExtentFromJson\r\n     * @param {Object} extentJson that follows config spec\r\n     * @return {Object} an ESRI Extent object\r\n     */\n    function getExtentFromJson(extentJson) {\n\n        return esriBundle.Extent({ xmin: extentJson.xmin, ymin: extentJson.ymin,\n            xmax: extentJson.xmax, ymax: extentJson.ymax,\n            spatialReference: { wkid: extentJson.spatialReference.wkid } });\n    }\n\n    /**\r\n     * Finds the level of detail closest to the provided scale.\r\n     *\r\n     * @function findClosestLOD\r\n     * @param  {Array} lods     list of levels of detail objects\r\n     * @param  {Number} scale   scale value to search for in the levels of detail\r\n     * @return {Object}         the level of detail object closest to the scale\r\n     */\n    function findClosestLOD(lods, scale) {\n        var diffs = lods.map(function (lod) {\n            return Math.abs(lod.scale - scale);\n        });\n        var lodIdx = diffs.indexOf(Math.min.apply(Math, _toConsumableArray(diffs)));\n        return lods[lodIdx];\n    }\n\n    /**\r\n     * Calculate north arrow bearing. Angle returned is to to rotate north arrow image.\r\n     * http://www.movable-type.co.uk/scripts/latlong.html\r\n     * @function getNorthArrowAngle\r\n     * @param  {Object} map     map object\r\n     * @returns {Number} map rotation angle (in degree)\r\n     */\n    function getNorthArrowAngle(map) {\n\n        // if web mercator, angle will be 180 (this projection always show north straight and 180 is pointing north)\n        var angle = 180;\n\n        // if not web mercator calculate angle.\n        if (map.spatialReference.wkid !== 3857 && map.spatialReference.wkid !== 102100) {\n            // get center point in longitude and use bottom value for latitude\n            var pointB = geoApi.proj.localProjectPoint(map.spatialReference, 'EPSG:4326', { x: (map.extent.xmin + map.extent.xmax) / 2, y: map.extent.ymin });\n\n            // north value (set longitude to be half of Canada extent (141° W, 52° W))\n            var pointA = { x: -96, y: 90 };\n\n            // set info on longitude and latitude\n            var dLon = (pointB.x - pointA.x) * Math.PI / 180;\n            var lat1 = pointA.y * Math.PI / 180;\n            var lat2 = pointB.y * Math.PI / 180;\n\n            // calculate bearing\n            var y = Math.sin(dLon) * Math.cos(lat2);\n            var x = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(dLon);\n            var bearing = Math.atan2(y, x) * 180 / Math.PI;\n\n            // angle (180 is pointing north)\n            angle = ((bearing + 360) % 360).toFixed(1);\n        }\n\n        return angle;\n    }\n\n    /**\r\n     * Calculate distance between min and max extent to know the pixel ratio between\r\n     * screen size and earth distance.\r\n     * http://www.movable-type.co.uk/scripts/latlong.html\r\n     * @function getScaleRatio\r\n     * @param  {Object} map     map object\r\n     * @param {Number} mapWidth optional the map width to use to calculate ratio\r\n     * @returns {Object} contain information about the scale\r\n     *                               - distance: distance between min and max extentId\r\n     *                               - ratio: measure for 1 pixel in earth distance\r\n     *                               - units: array of units [metric, imperial]\r\n     */\n    function getScaleRatio(map) {\n        var mapWidth = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n        // get left and right maximum value point to calculate distance from\n        var pointA = geoApi.proj.localProjectPoint(map.spatialReference, 'EPSG:4326', { x: map.extent.xmin, y: (map.extent.ymin + map.extent.ymax) / 2 });\n        var pointB = geoApi.proj.localProjectPoint(map.spatialReference, 'EPSG:4326', { x: map.extent.xmax, y: (map.extent.ymin + map.extent.ymax) / 2 });\n\n        // Haversine formula to calculate distance\n        var R = 6371e3; // earth radius in meters\n        var rad = Math.PI / 180;\n        var phy1 = pointA.y * rad; // radiant\n        var phy2 = pointB.y * rad; // radiant\n        var deltaPhy = (pointB.y - pointA.y) * rad; // radiant\n        var deltaLambda = (pointB.x - pointA.x) * rad; // radiant\n\n        var a = Math.sin(deltaPhy / 2) * Math.sin(deltaPhy / 2) + Math.cos(phy1) * Math.cos(phy2) * Math.sin(deltaLambda / 2) * Math.sin(deltaLambda / 2);\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        var d = R * c;\n\n        // set map / image width (if mapWidth = 0, use map.width)\n        var width = mapWidth ? mapWidth : map.width;\n\n        // get unit from distance, set distance and ratio (earth size for 1 pixel)\n        var units = [d > 1000 ? 'km' : 'm', d > 1600 ? 'mi' : 'ft'];\n        var distance = d > 1000 ? d / 1000 : d;\n        var ratio = distance / width;\n\n        return { distance: distance, ratio: ratio, units: units };\n    }\n\n    /**\r\n     * Compares to sets of co-ordinates for extents (valid for both x and y). If center of input co-ordinates falls outside\r\n     * map co-ordiantes, function will adjust them so the center is inside the map co-ordinates.\r\n     *\r\n     * @function clipExtentCoords\r\n     * @private\r\n     * @param {Numeric} mid      middle of the the range to test\r\n     * @param {Numeric} max      maximum value of the range to test\r\n     * @param {Numeric} min      minimum value of the range to test\r\n     * @param {Numeric} mapMax   maximum value of the map range\r\n     * @param {Numeric} mapMin   minimum value of the map range\r\n     * @param {Numeric} len      length of the adjusted range, if adjusted\r\n     * @return {Array}           two element array of Numeric, containing result max and min values\r\n     */\n    function clipExtentCoords(mid, max, min, mapMax, mapMin, len) {\n\n        if (mid > mapMax) {\n            max = mapMax;\n            min = mapMax - len;\n        } else if (mid < mapMin) {\n            max = mapMin + len;\n            min = mapMin;\n        }\n        return [max, min];\n    }\n\n    /**\r\n     * Checks if the center of the given extent is outside of the maximum extent. If it is,\r\n     * will determine an adjusted extent with a center inside the maximum extent.  Returns both\r\n     * an indicator flag if an adjustment happened, and the adjusted extent.\r\n     *\r\n     * @function enforceBoundary\r\n     * @param {Object} extent      an ESRI extent to test\r\n     * @param {Object} maxExtent   an ESRI extent indicating the boundary of the map\r\n     * @return {Object}            an object with two properties. adjusted - boolean, true if extent was adjusted. newExtent - object, adjusted ESRI extent\r\n     */\n    function enforceBoundary(extent, maxExtent) {\n        // clone extent\n        var newExtent = esriBundle.Extent(extent.toJson());\n\n        // determine dimensions of adjusted extent.\n        // same as input, unless input is so large it consumes max.\n        // in that case, we shrink to the max. This avoids the \"washing machine\"\n        // bug where we over-correct past the valid range,\n        // and achieve infinite oscillating pans\n        var height = Math.min(extent.getHeight(), maxExtent.getHeight());\n        var width = Math.min(extent.getWidth(), maxExtent.getWidth());\n        var center = extent.getCenter();\n\n        var _clipExtentCoords = clipExtentCoords(center.x, newExtent.xmax, newExtent.xmin, maxExtent.xmax, maxExtent.xmin, width);\n\n        var _clipExtentCoords2 = _slicedToArray(_clipExtentCoords, 2);\n\n        newExtent.xmax = _clipExtentCoords2[0];\n        newExtent.xmin = _clipExtentCoords2[1];\n\n        var _clipExtentCoords3 = clipExtentCoords(center.y, newExtent.ymax, newExtent.ymin, maxExtent.ymax, maxExtent.ymin, height);\n\n        var _clipExtentCoords32 = _slicedToArray(_clipExtentCoords3, 2);\n\n        newExtent.ymax = _clipExtentCoords32[0];\n        newExtent.ymin = _clipExtentCoords32[1];\n\n        return {\n            newExtent: newExtent,\n            adjusted: !extent.contains(newExtent) // true if we adjusted the extent\n        };\n    }\n\n    return mapManager;\n};\n\n},{\"./basemap.js\":147}],159:[function(_dereq_,module,exports){\n'use strict';\n\n// ugly way to add rgbcolor to global scope so it can be used by canvg inside the viewer; this is done because canvg uses UMD loader and has rgbcolor as internal dependency; there is no elegant way around it; another approach would be to clone canvg and change its loader;\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nwindow.RGBColor = _dereq_('rgbcolor');\nvar canvg = _dereq_('canvg-origin');\nvar shared = _dereq_('./shared.js')();\n\nvar XML_ATTRIBUTES = {\n    xmlns: 'http://www.w3.org/2000/svg',\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n    version: '1.1'\n};\n\n/**\r\n  * The `mapPrint` module provides map print and export image related functions.\r\n  *\r\n  * This module exports an object with the following functions\r\n  * - `printMap`\r\n  *\r\n  * NOTE: unit tests might be difficult to implement as DOM is required...\r\n  */\n\n/**\r\n* Generate the image from the esri print task\r\n*\r\n* @param {Object} esriBundle bundle of API classes\r\n* @param {Object} geoApi geoApi to determine if we are in debug mode\r\n* @param {Object} map esri map object\r\n* @param {Object} options options for the print task\r\n*                           url - for the esri geometry server\r\n*                           format - output format\r\n*                           width - target image height if different from default\r\n*                           height - target image width if different from default\r\n* @return {Promise} resolving when the print task created the image\r\n*                           resolve with a \"response: { url: value }\" where url is the path\r\n*                           for the print task export image\r\n*/\nfunction generateServerImage(esriBundle, geoApi, map, options) {\n    // create esri print object with url to print server\n    var printTask = esriBundle.PrintTask(options.url, { async: true });\n    var printParams = new esriBundle.PrintParameters();\n    var printTemplate = new esriBundle.PrintTemplate();\n\n    // each layout has an mxd with that name on the server. We can modify and add new layout (mxd)\n    // we only support MAP_ONLY for now. See https://github.com/fgpv-vpgf/fgpv-vpgf/issues/1160\n    printTemplate.layout = 'MAP_ONLY';\n\n    // only use when layout is MAP_ONLY\n    printTemplate.exportOptions = {\n        height: options.height || map.height,\n        width: options.width || map.width,\n        dpi: 96\n    };\n\n    // pdf | png32 | png8 | jpg | gif | eps | svg | svgz\n    printTemplate.format = options.format;\n    printTemplate.showAttribution = false;\n\n    // define whether the printed map should preserve map scale or map extent.\n    // if true, the printed map will use the outScale property or default to the scale of the input map.\n    // if false, the printed map will use the same extent as the input map and thus scale might change.\n    // we always use false because the output image needs to be of the same extent as the size might be different\n    // we fit the image later because trying to fit the image with canvg when we add user added\n    // layer is tricky!\n    printTemplate.preserveScale = false;\n\n    // set map and template\n    printParams.map = map;\n    printParams.template = printTemplate;\n\n    // need to hide svg layers since we can generate an image for them locally\n    var svgLayers = hideLayers(map);\n\n    var printPromise = new Promise(function (resolve, reject) {\n        // can be use to debug print task. Gives parameters to call directly the print task from it's interface\n        // http://resources.arcgis.com/en/help/rest/apiref/exportwebmap_spec.html\n        // http://snipplr.com/view/72400/sample-json-representation-of-an-esri-web-map-for-export-web-map-task\n        // const mapJSON = printTask._getPrintDefinition(map, printParams);\n        // console.log(JSON.stringify(mapJSON));\n\n        // TODO: catch esriJobFailed. it does not trigger the complete or the error event. Need a way to catch it!\n        // execute the print task\n        printTask.execute(printParams, function (response) {\n            return resolve(shared.convertImageToCanvas(response.url));\n        }, function (error) {\n            return reject(error);\n        });\n    });\n\n    // show user added previously visible for canvg to create canvas\n    showLayers(svgLayers);\n\n    return printPromise;\n}\n\n/**\r\n* Set svg-based layer visibility to false to avoid CORS error\r\n*\r\n* @param {Object} map esri map object\r\n* @return {Array} layer array of layers where visibility is true\r\n*/\nfunction hideLayers(map) {\n    return map.graphicsLayerIds.map(function (layerId) {\n        return map.getLayer(layerId);\n    }).filter(function (layer) {\n        return layer.visible;\n    }).map(function (layer) {\n        layer.setVisibility(false);\n        return layer;\n    });\n}\n\n/**\r\n* Set user added layer visibility to true for those whoe where visible\r\n*\r\n* @param {Array} layers array of graphic layers to set visibility to true\r\n*/\nfunction showLayers(layers) {\n    layers.forEach(function (layer) {\n        return layer.setVisibility(true);\n    });\n}\n\n/**\r\n* Create a canvas from the user added layers (svg tag)\r\n*\r\n* @param {Object} map esri map object\r\n* @param {Object} options [optional = null] { width, height } values; needed to get canvas of a size different from default\r\n*                           width {Number}\r\n*                           height {Number}\r\n* @param {Object} canvas [optional = null] canvas to draw the image upon; if not supplied, a new canvas will be made\r\n* @return {Promise} resolving when the canvas have been created\r\n*                           resolve with a canvas element with user added layer on it\r\n*/\nfunction generateLocalCanvas(map) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];\n    var canvas = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n    canvas = canvas || document.createElement('canvas'); // create canvas element\n\n    // find esri map's svg node\n    // check if xmlns prefixes are set - they aren't; add them\n    // without correct prefixes, Firefox and IE refuse to render svg onto the canvas; Chrome works;\n    // related issues: fgpv-vpgf/fgpv-vpgf#1324, fgpv-vpgf/fgpv-vpgf#1307, fgpv-vpgf/fgpv-vpgf#1306\n    var svgNode = document.getElementById('esri.Map_' + map.id.split('_')[1] + '_gc');\n    if (!svgNode.getAttribute('xmlns')) {\n        Object.entries(XML_ATTRIBUTES).forEach(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2);\n\n            var key = _ref2[0];\n            var value = _ref2[1];\n            return svgNode.setAttribute(key, value);\n        });\n    }\n\n    var originalOptions = undefined;\n    if (options) {\n        originalOptions = resizeSVGElement(svgNode, options);\n    }\n\n    var generationPromise = new Promise(function (resolve, reject) {\n        // parse the svg\n        // convert svg text to canvas and stuff it into canvas canvas dom node\n\n        // wrapping in try/catch since canvg has NO error handling; not sure what errors this can catch though\n        try {\n            // convert svg to text (use map id to select the svg container), then render svgxml back to canvas\n            canvg(canvas, svgNode.outerHTML, {\n                useCORS: true,\n                ignoreAnimation: true,\n                ignoreMouse: true,\n                renderCallback: function renderCallback() {\n                    if (options) {\n                        resizeSVGElement(svgNode, originalOptions.originalSize, originalOptions.originalViewbox);\n                    }\n\n                    resolve(canvas);\n                }\n            });\n        } catch (error) {\n            reject(error);\n        }\n    });\n\n    return generationPromise;\n\n    /**\r\n     * Scales up or down the specified svg element. To scale it, we need to set the viewbox to the current size and change the size of the element itself.\r\n     * @function resizeSVGElement\r\n     * @private\r\n     * @param {Object} element target svg element to be resized\r\n     * @param {Object} targetSize object with target sizes in the form of { width, height }\r\n     *                           width {Number}\r\n     *                           height {Number}\r\n     * @param {Object} targetViewbox [optional = null] target viewbox sizes in the form of { minX, minY, width, height }; if not specified, the original size will be used as the viewbox\r\n     *                           minX {Number}\r\n     *                           minxY {Number}\r\n     *                           width {Number}\r\n     *                           height {Number}\r\n     * @return {Object} returns original size and viewbox of the svg element in the form of { originalSize: { width, height }, originalViewbox: { minX, minY, width, height } }; can be used to restore the element to its original state\r\n     *                          originalSize:\r\n     *                              width {Number}\r\n     *                              height {Number}\r\n     *                          originalViewbox:\r\n     *                              minX {Number}\r\n     *                              minxY {Number}\r\n     *                              width {Number}\r\n     *                              height {Number}\r\n     */\n    function resizeSVGElement(element, targetSize) {\n        var targetViewbox = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n        var originalSize = {\n            width: element.width.baseVal.value,\n            height: element.height.baseVal.value\n        };\n\n        // get the current viewbox sizes\n        // if the viewbox is not defined, the viewbox is assumed to have the same dimensions as the svg element\n        // getAttribute('viewBox') returns a string in the form '{minx} {miny} {width} {height}'\n        // setAttribute('viewBox') accepts a string in the same form\n\n        var _split = (element.getAttribute('viewBox') || '0 0 ' + originalSize.width + ' ' + originalSize.height).split(' ');\n\n        var _split2 = _slicedToArray(_split, 4);\n\n        var ovMinX = _split2[0];\n        var ovMinY = _split2[1];\n        var ovWidth = _split2[2];\n        var ovHeight = _split2[3];\n\n        var originalViewbox = {\n            minX: ovMinX,\n            minY: ovMinY,\n            width: ovWidth,\n            height: ovHeight\n        };\n\n        // set the width/height of the svg element to the target values\n        element.setAttribute('width', targetSize.width);\n        element.setAttribute('height', targetSize.height);\n\n        // set the viewbox width/height of the svg element to the target values; or the values of the original viewbox (if the viewbox wasn't defined before, it is now)\n        element.setAttribute('viewBox', [(targetViewbox || originalViewbox).minX, (targetViewbox || originalViewbox).minY, (targetViewbox || originalViewbox).width, (targetViewbox || originalViewbox).height].join(' '));\n\n        return {\n            originalSize: originalSize,\n            originalViewbox: originalViewbox\n        };\n    }\n}\n\n// Print map related modules\nmodule.exports = function (esriBundle, geoApi) {\n    return {\n        printLocal: function printLocal(map, options) {\n            return generateLocalCanvas(map, options);\n        },\n        printServer: function printServer(map, options) {\n            return generateServerImage(esriBundle, geoApi, map, options);\n        }\n    };\n};\n\n},{\"./shared.js\":162,\"canvg-origin\":4,\"rgbcolor\":134}],160:[function(_dereq_,module,exports){\n'use strict';\nvar proj4 = _dereq_('proj4');\nvar terraformer = _dereq_('terraformer');\nvar teraProj = _dereq_('terraformer-proj4js');\n\n/**\r\n * Reproject a GeoJSON object in place.  This is a wrapper around terraformer-proj4js.\r\n * @param {Object} geojson the GeoJSON to be reprojected, this will be modified in place\r\n * @param {String|Number} outputSpatialReference the target spatial reference,\r\n * 'EPSG:4326' is used by default; if a number is suppied it will be used as an EPSG code\r\n * @param {String|Number} inputSpatialReference same rules as outputSpatialReference if suppied\r\n * if missing it will attempt to find it encoded in the GeoJSON\r\n */\nfunction projectGeojson(geojson, outputSpatialReference, inputSpatialReference) {\n    var converter = teraProj(terraformer, proj4);\n    converter(geojson, outputSpatialReference, inputSpatialReference);\n}\n\n/**\r\n * Convert a projection to an string that is compatible with proj4.  If it is an ESRI SpatialReference or an integer it will be converted.\r\n * @param {Object|Integer|String} proj an ESRI SpatialReference, integer or string.  Strings will be unchanged and unchecked,\r\n * ints and SpatialReference objects will be converted.\r\n * @return {String} A string in the form EPSG:####\r\n * @private\r\n */\nfunction normalizeProj(proj) {\n    if (typeof proj === 'object') {\n        if (proj.wkid) {\n            return 'EPSG:' + proj.wkid;\n        } else if (proj.wkt) {\n            return proj.wkt;\n        }\n    } else if (typeof proj === 'number') {\n        return 'EPSG:' + proj;\n    } else if (typeof proj === 'string') {\n        return proj;\n    }\n    throw new Error('Bad argument type, please provide a string, integer or SpatialReference object.');\n}\n\n/**\r\n * Project a single point.\r\n * @param {Object|Integer|String} srcProj the spatial reference of the point (as ESRI SpatialReference, integer WKID or an EPSG string)\r\n * @param {Object|Integer|String} destProj the spatial reference of the result (as ESRI SpatialReference, integer WKID or an EPSG string)\r\n * @param {Array|Object} point a 2d array or object with {x,y} props containing the coordinates to Reproject\r\n * @return {Array|Object} a 2d array or object containing the projected point\r\n */\nfunction localProjectPoint(srcProj, destProj, point) {\n    return proj4(normalizeProj(srcProj), normalizeProj(destProj), point);\n}\n\n/**\r\n * Project a single point.\r\n * @param {Object|Integer|String} destProj the spatial reference of the result (as ESRI SpatialReference, integer WKID or an EPSG string)\r\n * @param {Object} geometry an object conforming to ESRI Geometry object standards containing the coordinates to Reproject\r\n * @return {Object} an object conforming to ESRI Geomtery object standards containing the input geometry in the destination projection\r\n */\nfunction localProjectGeometry(destProj, geometry) {\n    // FIXME we seem to be really dependant on wkid. ideally enhance to handle all SR types\n\n    // HACK >:'(\n    // terraformer has this undesired behavior where, if your input geometry is in WKID 102100, it will magically\n    // project all your co-ordinates to lat/long when converting between ESRI and GeoJSON formats.\n    // to stop it from ruining us, we temporarily set the spatial reference to nonsense so it will leave it alone\n    var realSR = geometry.spatialReference;\n    geometry.spatialReference = { wkid: 8888 }; // nonsense!\n    var grGeoJ = terraformer.ArcGIS.parse(geometry, { sr: 8888 });\n    geometry.spatialReference = realSR;\n\n    // project json\n    projectGeojson(grGeoJ, normalizeProj(destProj), normalizeProj(realSR));\n\n    // back to esri format\n    var grEsri = terraformer.ArcGIS.convert(grGeoJ);\n\n    // doing this because .convert likes to attach a lat/long spatial reference for fun.\n    grEsri.spatialReference = destProj;\n\n    return grEsri;\n}\n\n/**\r\n * Reproject an EsriExtent object on the client.  Does not require network\r\n * traffic, but may not handle conversion between projection types as well.\r\n * Internally it tests 8 points along each edge and takes the max extent\r\n * of the result.\r\n *\r\n * @param {EsriExtent} extent to reproject\r\n * @param {Object} sr is the target spatial reference (if a number it\r\n *                 will be treated as a WKID)\r\n * @returns {Object} an extent as an unstructured object\r\n */\nfunction localProjectExtent(extent, sr) {\n\n    // interpolates two points by splitting the line in half recursively\n    function interpolate(p0, p1, steps) {\n        if (steps === 0) {\n            return [p0, p1];\n        }\n\n        var mid = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n        if (steps === 1) {\n            return [p0, mid, p1];\n        }\n        if (steps > 1) {\n            var i0 = interpolate(p0, mid, steps - 1);\n            var i1 = interpolate(mid, p1, steps - 1);\n            return i0.concat(i1.slice(1));\n        }\n    }\n\n    var points = [[extent.xmin, extent.ymin], [extent.xmax, extent.ymin], [extent.xmax, extent.ymax], [extent.xmin, extent.ymax], [extent.xmin, extent.ymin]];\n    var interpolatedPoly = [];\n    var srcProj = undefined;\n\n    // interpolate each edge by splitting it in half 3 times (since lines are not guaranteed to project to lines we need to consider\n    // max / min points in the middle of line segments)\n    [0, 1, 2, 3].map(function (i) {\n        return interpolate(points[i], points[i + 1], 3).slice(1);\n    }).forEach(function (seg) {\n        return interpolatedPoly = interpolatedPoly.concat(seg);\n    });\n\n    // find the source extent (either from wkid or wkt)\n    if (extent.spatialReference.wkid) {\n        srcProj = 'EPSG:' + extent.spatialReference.wkid;\n    } else if (extent.spatialReference.wkt) {\n        srcProj = extent.spatialReference.wkt;\n    } else {\n        throw new Error('No WKT or WKID specified on extent.spatialReference');\n    }\n\n    // find the destination extent\n    var destProj = normalizeProj(sr);\n\n    if (extent.spatialReference.wkid && !proj4.defs(srcProj)) {\n        throw new Error('Source projection WKID not recognized by proj4 library');\n    }\n    var projConvert = proj4(srcProj, destProj);\n    var transformed = interpolatedPoly.map(function (x) {\n        return projConvert.forward(x);\n    });\n\n    var xvals = transformed.map(function (x) {\n        return x[0];\n    });\n    var yvals = transformed.map(function (x) {\n        return x[1];\n    });\n\n    var x0 = Math.min.apply(null, xvals);\n    var x1 = Math.max.apply(null, xvals);\n\n    var y0 = Math.min.apply(null, yvals);\n    var y1 = Math.max.apply(null, yvals);\n\n    return { x0: x0, y0: y0, x1: x1, y1: y1, sr: sr };\n}\n\n/**\r\n * Check whether or not a spatialReference is supported by proj4 library.\r\n *\r\n * @param {Object} spatialReference to be checked to see if it's supported by proj4\r\n * @param {Function} epsgLookup an optional lookup function for EPSG codes which are not loaded\r\n * in the proj4 definitions, the function should take a numeric EPSG code and return a Promise\r\n * resolving with a proj4 style definition string\r\n * @returns {Object} with the structure {\r\n *  foundProj: (bool) indicates if the projection was found,\r\n *  message: (string) provides a reason why the projection was not found,\r\n *  lookupPromise: (Promise) an optional promise resolving with true or false if a lookup function was provided and had to be invoked\r\n * }\r\n */\nfunction checkProj(spatialReference, epsgLookup) {\n    var srcProj = undefined;\n\n    // find the source extent (either from wkid or wkt)\n    if (spatialReference.wkid) {\n        srcProj = 'EPSG:' + spatialReference.wkid;\n    } else if (spatialReference.wkt) {\n        srcProj = spatialReference.wkt;\n    } else {\n        return {\n            foundProj: false,\n            message: 'No WKT or WKID specified on extent.spatialReference'\n        };\n    }\n\n    if (spatialReference.wkid && !proj4.defs(srcProj)) {\n        if (epsgLookup) {\n            return {\n                foundProj: false,\n                message: 'Attempting to lookup WKID',\n                lookupPromise: epsgLookup(spatialReference.wkid).then(function (def) {\n                    if (def === null) {\n                        return false;\n                    }\n                    proj4.defs(srcProj, def);\n                    return true;\n                })\n            };\n        }\n        return {\n            foundProj: false,\n            message: 'Source projection in WKID and not recognized by proj4 library'\n        };\n    }\n\n    return {\n        foundProj: true,\n        message: 'Source projection OK.'\n    };\n}\n\nfunction projectEsriExtentBuilder(esriBundle) {\n    return function (extent, sr) {\n        var p = localProjectExtent(extent, sr);\n        return new esriBundle.Extent(p.x0, p.y0, p.x1, p.y1, p.sr);\n    };\n}\n\nfunction esriServiceBuilder(esriBundle) {\n    /**\r\n     * Reproject an esri geometry object on the server. Requires network traffic\r\n     * to esri's Geometry Service, but may be slower than proj4 conversion.\r\n     * Internally it tests 1 point and reprojects it to another spatial reference.\r\n     *\r\n     * @param {url} url for the ESRI Geometry Service\r\n     * @param {geometries} geometries to be projected\r\n     * @param {sr} sr is the target spatial reference\r\n     * @returns {Promise} promise to return reprojected geometries\r\n     */\n    return function (url, geometries, sr) {\n        return new Promise(function (resolve, reject) {\n            var params = new esriBundle.ProjectParameters();\n\n            // connect to esri server\n            var gsvc = new esriBundle.GeometryService(url);\n\n            params.geometries = geometries;\n            params.outSR = sr;\n\n            // call project function from esri server to do conversion\n            gsvc.project(params, function (projectedExtents) {\n                resolve(projectedExtents);\n            }, function (error) {\n                reject(error);\n            });\n        });\n    };\n}\n\n/**\r\n* Checks if two spatial reference objects are equivalent.  Handles both wkid and wkt definitions.\r\n*\r\n* @method isSpatialRefEqual\r\n* @static\r\n* @param {type} sr1 Esri Spatial Reference First to compare\r\n* @param {type} sr2 Esri Spatial Reference Second to compare\r\n* @return {Boolean} true if the two spatial references are equivalent.  False otherwise.\r\n*/\nfunction isSpatialRefEqual(sr1, sr2) {\n    if (sr1.wkid && sr2.wkid) {\n        // both SRs have wkids\n        return sr1.wkid === sr2.wkid;\n    } else if (sr1.wkt && sr2.wkt) {\n        // both SRs have wkt's\n        return sr1.wkt === sr2.wkt;\n    } else {\n        // not enough info provided or mismatch between wkid and wkt.\n        return false;\n    }\n}\n\nmodule.exports = function (esriBundle) {\n    // TODO: Move Point and SpatialReference to its own (geometry) module\n\n    // TODO consider moving this elsewhere.  state is bad, but these are common, and we have no service for esri defs\n    proj4.defs('EPSG:3978', '+proj=lcc +lat_1=49 +lat_2=77 +lat_0=49 ' + '+lon_0=-95 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs');\n    proj4.defs('EPSG:3979', '+proj=lcc +lat_1=49 +lat_2=77 +lat_0=49 +lon_0=-95 ' + '+x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs');\n    proj4.defs('EPSG:54004', '+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +ellps=WGS84 ' + '+datum=WGS84 +units=m +no_defs');\n    proj4.defs('EPSG:102100', proj4.defs('EPSG:3857'));\n\n    return {\n        addProjection: proj4.defs, // straight passthrough at the moment, maybe add arg checking (two args)?\n        checkProj: checkProj,\n        getProjection: proj4.defs, // straight passthrough at the moment, maybe add arg checking (one arg)?\n        esriServerProject: esriServiceBuilder(esriBundle),\n        Graphic: esriBundle.Graphic,\n        graphicsUtils: esriBundle.graphicsUtils,\n        isSpatialRefEqual: isSpatialRefEqual,\n        localProjectExtent: localProjectExtent,\n        localProjectPoint: localProjectPoint,\n        localProjectGeometry: localProjectGeometry,\n        projectGeojson: projectGeojson,\n        Point: esriBundle.Point,\n        projectEsriExtent: projectEsriExtentBuilder(esriBundle),\n        SpatialReference: esriBundle.SpatialReference\n    };\n};\n\n},{\"proj4\":102,\"terraformer\":145,\"terraformer-proj4js\":144}],161:[function(_dereq_,module,exports){\n'use strict';\n\n// functions related to spatial querying\n\nfunction queryGeometryBuilder(esriBundle) {\n\n    /**\r\n    * Fetch attributes from a layer that intersects with the given geometry\r\n    * Accepts the following options:\r\n    *   - geometry: Required. geometry to intersect with the layer.\r\n    *   - url: Required if server based layer. Url to the map service layer to query against. Endpoint must support\r\n    *          ESRI REST query interface. E.g. A feature layer endpoint.\r\n    *   - featureLayer: Required if file based layer. Feature layer to query against\r\n    *   - outFields: Optional. Array of strings containing field names to include in the results. Defaults to all fields.\r\n    *   - where: Optional. A SQL where clause to filter results further. Useful when dealing with more results than the server can return.\r\n    *   - returnGeometry: Optional. A boolean indicating if result geometery should be returned with results.  Defaults to false\r\n    *   - outSpatialReference: Required if returnGeometry is true. The spatial reference the return geometry should be in.\r\n    * @param {Object} options settings to determine if sub layers or certain attributes should be skipped.\r\n    * @return {Promise} resolves with a feature set of features that satisfy the query\r\n    */\n    return function (options) {\n        // create and set the esri query parameters\n\n        var query = new esriBundle.Query();\n\n        query.returnGeometry = options.returnGeometry || false;\n        if (options.returnGeometry) {\n            query.outSpatialReference = options.outSpatialReference;\n        }\n        if (options.outFields) {\n            query.outFields = options.outFields;\n        } else {\n            query.outFields = ['*'];\n        }\n        if (options.where) {\n            query.where = options.where;\n        }\n        query.geometry = options.geometry;\n        query.spatialRelationship = esriBundle.Query.SPATIAL_REL_INTERSECTS; // esriSpatialRelIntersects\n\n        return new Promise(function (resolve, reject) {\n            // run the query. server based layers use a query task. file based layers use the layer's query function.\n            if (options.url) {\n                var queryTask = new esriBundle.QueryTask(options.url);\n\n                // issue the map server query request\n                queryTask.execute(query, function (featureSet) {\n                    resolve(featureSet);\n                }, function (error) {\n                    reject(error);\n                });\n            } else if (options.featureLayer) {\n                // run the query on the layers internal data\n                options.featureLayer.queryFeatures(query, function (featureSet) {\n                    resolve(featureSet);\n                }, function (error) {\n                    reject(error);\n                });\n            }\n        });\n    };\n}\n\nmodule.exports = function (esriBundle) {\n    return {\n        queryGeometry: queryGeometryBuilder(esriBundle)\n    };\n};\n\n},{}],162:[function(_dereq_,module,exports){\n// Common functions for use across other geoApi modules\n'use strict';\n\nfunction getLayerTypeBuilder(esriBundle) {\n    /**\r\n    * Will return a string indicating the type of layer a layer object is.\r\n    * @method getLayerType\r\n    * @param  {Object} layer an ESRI API layer object\r\n    * @return {String} layer type\r\n    */\n    return function (layer) {\n        if (layer instanceof esriBundle.FeatureLayer) {\n            return 'FeatureLayer';\n        } else if (layer instanceof esriBundle.WmsLayer) {\n            return 'WmsLayer';\n        } else if (layer instanceof esriBundle.ArcGISDynamicMapServiceLayer) {\n            return 'ArcGISDynamicMapServiceLayer';\n        } else if (layer instanceof esriBundle.ArcGISTiledMapServiceLayer) {\n            return 'ArcGISTiledMapServiceLayer';\n        } else {\n            // Can add more types above as we support them\n            return 'UNKNOWN';\n        }\n    };\n}\n\n/**\r\n* Get a 'good enough' uuid. For backup purposes if client does not supply its own\r\n* unique layer id\r\n*\r\n* @method  generateUUID\r\n* @returns {String} a uuid\r\n*/\nfunction generateUUID() {\n    var d = Date.now();\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        // do math!\n        /*jslint bitwise: true */\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n        /*jslint bitwise: false */\n    });\n}\n\n/**\r\n* Convert an image to a canvas element\r\n*\r\n* @param {String} url image url to convert (result from the esri print task)\r\n* @param {Object} canvas [optional = null] canvas to draw the image upon; if not supplied, a new canvas will be made\r\n* @param {Boolean} crossOrigin [optional = true] when set, tries to fetch an image with crossOrigin = anonymous\r\n* @return {Promise} conversion promise resolving into a canvas of the image\r\n*/\nfunction convertImageToCanvas(url) {\n    var canvas = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];\n    var crossOrigin = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];\n\n    canvas = canvas || document.createElement('canvas');\n\n    var image = document.createElement('img'); // create image node\n\n    if (crossOrigin) {\n        image.crossOrigin = 'Anonymous'; // configure the CORS request\n    }\n\n    var conversionPromise = new Promise(function (resolve, reject) {\n        image.addEventListener('load', function () {\n\n            canvas.width = image.width; // changing canvas size will clear all previous content\n            canvas.height = image.height;\n            canvas.getContext('2d').drawImage(image, 0, 0); // draw image onto a canvas\n\n            // return canvas\n            resolve(canvas);\n        });\n        image.addEventListener('error', function (error) {\n            return reject(error);\n        });\n    });\n\n    // set image source to the one generated from the print task\n    image.src = url;\n\n    return conversionPromise;\n}\n\n/**\r\n * Loads an image (as crossing) and converts it to dataURL. If a supplied imageUri is already a dataURL, just return it.\r\n * If an image fails to load with the crossing attribute, return the original imageUri\r\n *\r\n * @function convertImagetoDataURL\r\n * @param {String} imageUri url of the image to load and convert\r\n * @param {String} imageType [optional = 'image/png'] format of the image representation\r\n * @return {Promise} promise resolving with the dataURL of the image\r\n */\nfunction convertImagetoDataURL(imageUri) {\n    var imageType = arguments.length <= 1 || arguments[1] === undefined ? 'image/png' : arguments[1];\n\n    // this is already a dataUrl, just return\n    if (imageUri.startsWith('data')) {\n        console.log('ImageUri is already a data url');\n        return Promise.resolve(imageUri);\n    }\n\n    var loadingPromise = convertImageToCanvas(imageUri).then(function (canvas) {\n        console.log('Converting image to dataURL');\n        return canvas.toDataURL(imageType);\n    })['catch'](function (error) {\n        console.error('Failed to load crossorigin image', imageUri, error);\n        return imageUri;\n    });\n\n    return loadingPromise;\n}\n\nmodule.exports = function (esriBundle) {\n    return {\n        getLayerType: getLayerTypeBuilder(esriBundle),\n        generateUUID: generateUUID,\n        convertImageToCanvas: convertImageToCanvas,\n        convertImagetoDataURL: convertImagetoDataURL\n    };\n};\n\n},{}],163:[function(_dereq_,module,exports){\n/* jshint maxcomplexity: false */\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nvar svgjs = _dereq_('svg.js');\nvar shared = _dereq_('./shared.js')();\n\n// Functions for turning ESRI Renderers into images\n// Specifically, converting ESRI \"Simple\" symbols into images,\n// and deriving the appropriate image for a feature based on\n// a renderer\n\n// layer symbology types\nvar SIMPLE = 'simple';\nvar UNIQUE_VALUE = 'uniqueValue';\nvar CLASS_BREAKS = 'classBreaks';\n\nvar CONTAINER_SIZE = 32; // size of the symbology item container\nvar CONTENT_SIZE = 24; // size of the symbology graphic\nvar CONTENT_IMAGE_SIZE = 28; // size of the symbology graphic if it's an image (images tend to already have a white boarder around them)\nvar CONTAINER_CENTER = CONTAINER_SIZE / 2;\nvar CONTENT_PADDING = (CONTAINER_SIZE - CONTENT_SIZE) / 2;\n\n/**\r\n* Will add extra properties to a renderer to support images.\r\n* New properties .svgcode and .defaultsvgcode contains image source\r\n* for app on each renderer item.\r\n*\r\n* @param {Object} renderer an ESRI renderer object in server JSON form. Param is modified in place\r\n* @param {Object} legend object for the layer that maps legend label to data url of legend image\r\n* @return {Promise} resolving when the renderer has been enhanced\r\n*/\nfunction enhanceRenderer(renderer, legend) {\n\n    // TODO note somewhere (user docs) that everything fails if someone publishes a legend with two identical labels\n\n    // quick lookup object of legend names to data URLs.\n    // our legend object is in ESRI format, but was generated by us and only has info for a single layer.\n    // so we just grab item 0, which is the only item.\n    var legendLookup = {};\n\n    // store svgcode in the lookup\n    var legendItemPromises = legend.layers[0].legend.map(function (legItem) {\n        return legItem.then(function (data) {\n            return legendLookup[data.label] = data.svgcode;\n        });\n    });\n\n    // wait until all legend items are resolved and legend lookup is updated\n    return Promise.all(legendItemPromises).then(function () {\n        switch (renderer.type) {\n            case SIMPLE:\n                renderer.svgcode = legendLookup[renderer.label];\n                break;\n\n            case UNIQUE_VALUE:\n                if (renderer.defaultLabel) {\n                    renderer.defaultsvgcode = legendLookup[renderer.defaultLabel];\n                }\n\n                renderer.uniqueValueInfos.forEach(function (uvi) {\n                    uvi.svgcode = legendLookup[uvi.label];\n                });\n\n                break;\n            case CLASS_BREAKS:\n                if (renderer.defaultLabel) {\n                    renderer.defaultsvgcode = legendLookup[renderer.defaultLabel];\n                }\n\n                renderer.classBreakInfos.forEach(function (cbi) {\n                    cbi.svgcode = legendLookup[cbi.label];\n                });\n\n                break;\n            default:\n\n                // Renderer we dont support\n                console.warn('encountered unsupported renderer type: ' + renderer.type);\n        }\n    });\n}\n\n/**\r\n* Given feature attributes, find the renderer node that would draw it\r\n*\r\n* @method searchRenderer\r\n* @param {Object} attributes object of feature attribute key value pairs\r\n* @param {Object} renderer an enhanced renderer (see function enhanceRenderer)\r\n* @return {Object} an Object with svgcode and symbol properties for the matched renderer item\r\n*/\nfunction searchRenderer(attributes, renderer) {\n\n    var svgcode = undefined;\n    var symbol = {};\n\n    switch (renderer.type) {\n        case SIMPLE:\n            svgcode = renderer.svgcode;\n            symbol = renderer.symbol;\n\n            break;\n\n        case UNIQUE_VALUE:\n\n            // make a key value for the graphic in question, using comma-space delimiter if multiple fields\n            // put an empty string when key value is null\n            var graphicKey = attributes[renderer.field1] === null ? '' : attributes[renderer.field1];\n\n            // all key values are stored as strings.  if the attribute is in a numeric column, we must convert it to a string to ensure the === operator still works.\n            if (typeof graphicKey !== 'string') {\n                graphicKey = graphicKey.toString();\n            }\n\n            if (renderer.field2) {\n                graphicKey = graphicKey + ', ' + attributes[renderer.field2];\n                if (renderer.field3) {\n                    graphicKey = graphicKey + ', ' + attributes[renderer.field3];\n                }\n            }\n\n            // search the value maps for a matching entry.  if no match found, use the default image\n            var uvi = renderer.uniqueValueInfos.find(function (uvi) {\n                return uvi.value === graphicKey;\n            });\n            if (uvi) {\n                svgcode = uvi.svgcode;\n                symbol = uvi.symbol;\n            } else {\n                svgcode = renderer.defaultsvgcode;\n                symbol = renderer.defaultSymbol;\n            }\n\n            break;\n\n        case CLASS_BREAKS:\n\n            var gVal = parseFloat(attributes[renderer.field]);\n            var lower = renderer.minValue;\n\n            svgcode = renderer.defaultsvgcode;\n            symbol = renderer.defaultSymbol;\n\n            // check for outside range on the low end\n            if (gVal < lower) {\n                break;\n            }\n\n            // array of minimum values of the ranges in the renderer\n            var minSplits = renderer.classBreakInfos.map(function (cbi) {\n                return cbi.classMaxValue;\n            });\n            minSplits.splice(0, 0, lower - 1); // put lower-1 at the start of the array and shift all other entries by 1\n\n            // attempt to find the range our gVal belongs in\n            var cbi = renderer.classBreakInfos.find(function (cbi, index) {\n                return gVal > minSplits[index] && gVal <= cbi.classMaxValue;\n            });\n            if (!cbi) {\n                // outside of range on the high end\n                break;\n            }\n            svgcode = cbi.svgcode;\n            symbol = cbi.symbol;\n\n            break;\n\n        default:\n\n            // TODO set svgcode to blank image?\n            console.warn('Unknown renderer type encountered - ' + renderer.type);\n\n    }\n\n    // make an empty svg graphic in case nothing is found to avoid undefined inside the filters\n    if (typeof svgcode === 'undefined') {\n        svgcode = svgjs(document.createElement('div')).size(CONTAINER_SIZE, CONTAINER_SIZE).svg();\n    }\n\n    return { svgcode: svgcode, symbol: symbol };\n}\n\n/**\r\n* Given feature attributes, return the image URL for that feature/graphic object.\r\n*\r\n* @method getGraphicIcon\r\n* @param {Object} attributes object of feature attribute key value pairs\r\n* @param {Object} renderer an enhanced renderer (see function enhanceRenderer)\r\n* @return {String} svgcode Url to the features symbology image\r\n*/\nfunction getGraphicIcon(attributes, renderer) {\n    var renderInfo = searchRenderer(attributes, renderer);\n    return renderInfo.svgcode;\n}\n\n/**\r\n* Given feature attributes, return the symbol for that feature/graphic object.\r\n*\r\n* @method getGraphicSymbol\r\n* @param {Object} attributes object of feature attribute key value pairs\r\n* @param {Object} renderer an enhanced renderer (see function enhanceRenderer)\r\n* @return {Object} an ESRI Symbol object in server format\r\n*/\nfunction getGraphicSymbol(attributes, renderer) {\n    var renderInfo = searchRenderer(attributes, renderer);\n    return renderInfo.symbol;\n}\n\n/**\r\n * Generates svg symbology for WMS layers.\r\n * @function generateWMSSymbology\r\n * @param {String} name label for the symbology item (it's not used right now, but is required to be consistent with other symbology generating functions)\r\n * @param {String} imageUri url or dataUrl of the legend image\r\n * @return {Promise} a promise resolving with symbology svg code and its label\r\n */\nfunction generateWMSSymbology(name, imageUri) {\n    var draw = svgjs(window.document.createElement('div')).size(CONTAINER_SIZE, CONTAINER_SIZE).viewbox(0, 0, 0, 0);\n\n    var symbologyItem = {\n        name: name,\n        svgcode: null\n    };\n\n    if (imageUri) {\n\n        var symbologyPromise = shared.convertImagetoDataURL(imageUri).then(function (imageUri) {\n            return svgDrawImage(draw, imageUri);\n        }).then(function (_ref) {\n            var loader = _ref.loader;\n\n            draw.viewbox(0, 0, loader.width, loader.height);\n            symbologyItem.svgcode = draw.svg();\n\n            return symbologyItem;\n        })['catch'](function (err) {\n            console.error('Cannot draw wms legend image; returning empty', err);\n            symbologyItem.svgcode = draw.svg();\n        });\n\n        return symbologyPromise;\n    } else {\n        symbologyItem.svgcode = draw.svg();\n        return Promise.resolve(symbologyItem);\n    }\n}\n\n/**\r\n * Generates a placeholder symbology graphic. Returns a promise for consistency\r\n * @function generatePlaceholderSymbology\r\n * @private\r\n * @param  {String} name label symbology label\r\n * @param  {String} colour colour to use in the graphic\r\n * @return {Promise}       promise resolving with symbology svg code and its label\r\n */\nfunction generatePlaceholderSymbology(name) {\n    var colour = arguments.length <= 1 || arguments[1] === undefined ? '#000' : arguments[1];\n\n    var draw = svgjs(window.document.createElement('div')).size(CONTAINER_SIZE, CONTAINER_SIZE).viewbox(0, 0, CONTAINER_SIZE, CONTAINER_SIZE);\n\n    draw.rect(CONTENT_IMAGE_SIZE, CONTENT_IMAGE_SIZE).center(CONTAINER_CENTER, CONTAINER_CENTER).fill(colour);\n\n    draw.text(name[0].toUpperCase()) // take the first letter\n    .size(23).fill('#fff').attr({\n        'font-weight': 'bold',\n        'font-family': 'Roboto'\n    }).center(CONTAINER_CENTER, CONTAINER_CENTER);\n\n    return Promise.resolve({\n        name: name,\n        svgcode: draw.svg()\n    });\n}\n\n/**\r\n* Generate a legend item for an ESRI symbol.\r\n* @private\r\n* @param  {Object} symbol an ESRI symbol object in server format\r\n* @param  {String} label label of the legend item\r\n* @param  {Object} window reference to the browser window\r\n* @return {Object} a legend object populated with the symbol and label\r\n*/\nfunction symbolToLegend(symbol, label, window) {\n    // create a temporary svg element and add it to the page; if not added, the element's bounding box cannot be calculated correctly\n    var container = window.document.createElement('div');\n    container.setAttribute('style', 'opacity:0;position:fixed;left:100%;top:100%;overflow:hidden');\n    window.document.body.appendChild(container);\n\n    var draw = svgjs(container).size(CONTAINER_SIZE, CONTAINER_SIZE).viewbox(0, 0, CONTAINER_SIZE, CONTAINER_SIZE);\n\n    // functions to draw esri simple marker symbols\n    // jscs doesn't like enhanced object notation\n    // jscs:disable requireSpacesInAnonymousFunctionExpression\n    var esriSimpleMarkerSimbol = {\n        esriSMSPath: function esriSMSPath(_ref2) {\n            var size = _ref2.size;\n            var path = _ref2.path;\n\n            return draw.path(path).size(size);\n        },\n        esriSMSCircle: function esriSMSCircle(_ref3) {\n            var size = _ref3.size;\n\n            return draw.circle(size);\n        },\n        esriSMSCross: function esriSMSCross(_ref4) {\n            var size = _ref4.size;\n\n            return draw.path('M 0,10 L 20,10 M 10,0 L 10,20').size(size);\n        },\n        esriSMSX: function esriSMSX(_ref5) {\n            var size = _ref5.size;\n\n            return draw.path('M 0,0 L 20,20 M 20,0 L 0,20').size(size);\n        },\n        esriSMSTriangle: function esriSMSTriangle(_ref6) {\n            var size = _ref6.size;\n\n            return draw.path('M 20,20 L 10,0 0,20 Z').size(size);\n        },\n        esriSMSDiamond: function esriSMSDiamond(_ref7) {\n            var size = _ref7.size;\n\n            return draw.path('M 20,10 L 10,0 0,10 10,20 Z').size(size);\n        },\n        esriSMSSquare: function esriSMSSquare(_ref8) {\n            var size = _ref8.size;\n\n            return draw.path('M 0,0 20,0 20,20 0,20 Z').size(size);\n        }\n    };\n\n    // jscs:enable requireSpacesInAnonymousFunctionExpression\n\n    // line dash styles\n    var ESRI_DASH_MAPS = {\n        esriSLSSolid: 'none',\n        esriSLSDash: '5.333,4',\n        esriSLSDashDot: '5.333,4,1.333,4',\n        esriSLSLongDashDotDot: '10.666,4,1.333,4,1.333,4',\n        esriSLSDot: '1.333,4',\n        esriSLSLongDash: '10.666,4',\n        esriSLSLongDashDot: '10.666,4,1.333,4',\n        esriSLSShortDash: '5.333,1.333',\n        esriSLSShortDashDot: '5.333,1.333,1.333,1.333',\n        esriSLSShortDashDotDot: '5.333,1.333,1.333,1.333,1.333,1.333',\n        esriSLSShortDot: '1.333,1.333',\n        esriSLSNull: 'none'\n    };\n\n    // default stroke style\n    var DEFAULT_STROKE = {\n        color: '#000',\n        opacity: 1,\n        width: 1,\n        linecap: 'square',\n        linejoin: 'miter',\n        miterlimit: 4\n    };\n\n    // this is a null outline in case a supplied symbol doesn't have one\n    var DEFAULT_OUTLINE = {\n        color: [0, 0, 0, 0],\n        width: 0,\n        style: ESRI_DASH_MAPS.esriSLSNull\n    };\n\n    // 5x5 px patter with coloured diagonal lines\n    var esriSFSFills = {\n        esriSFSSolid: function esriSFSSolid(symbolColour) {\n            return {\n                color: symbolColour.colour,\n                opacity: symbolColour.opacity\n            };\n        },\n        esriSFSNull: function esriSFSNull() {\n            return 'transparent';\n        },\n        esriSFSHorizontal: function esriSFSHorizontal(symbolColour, symbolStroke) {\n            var cellSize = 5;\n\n            // patter fill: horizonal line in a 5x5 px square\n            return draw.pattern(cellSize, cellSize, function (add) {\n                return add.line(0, cellSize / 2, cellSize, cellSize / 2);\n            }).stroke(symbolStroke);\n        },\n        esriSFSVertical: function esriSFSVertical(symbolColour, symbolStroke) {\n            var cellSize = 5;\n\n            // patter fill: vertical line in a 5x5 px square\n            return draw.pattern(cellSize, cellSize, function (add) {\n                return add.line(cellSize / 2, 0, cellSize / 2, cellSize);\n            }).stroke(symbolStroke);\n        },\n        esriSFSForwardDiagonal: function esriSFSForwardDiagonal(symbolColour, symbolStroke) {\n            var cellSize = 5;\n\n            // patter fill: forward diagonal line in a 5x5 px square; two more diagonal lines offset to cover the corners when the main line is cut off\n            return draw.pattern(cellSize, cellSize, function (add) {\n                add.line(0, 0, cellSize, cellSize).stroke(symbolStroke);\n                add.line(0, 0, cellSize, cellSize).move(0, cellSize).stroke(symbolStroke);\n                add.line(0, 0, cellSize, cellSize).move(cellSize, 0).stroke(symbolStroke);\n            });\n        },\n        esriSFSBackwardDiagonal: function esriSFSBackwardDiagonal(symbolColour, symbolStroke) {\n            var cellSize = 5;\n\n            // patter fill: backward diagonal line in a 5x5 px square; two more diagonal lines offset to cover the corners when the main line is cut off\n            return draw.pattern(cellSize, cellSize, function (add) {\n                add.line(cellSize, 0, 0, cellSize).stroke(symbolStroke);\n                add.line(cellSize, 0, 0, cellSize).move(cellSize / 2, cellSize / 2).stroke(symbolStroke);\n                add.line(cellSize, 0, 0, cellSize).move(-cellSize / 2, -cellSize / 2).stroke(symbolStroke);\n            });\n        },\n        esriSFSCross: function esriSFSCross(symbolColour, symbolStroke) {\n            var cellSize = 5;\n\n            // patter fill: horizonal and vertical lines in a 5x5 px square\n            return draw.pattern(cellSize, cellSize, function (add) {\n                add.line(cellSize / 2, 0, cellSize / 2, cellSize).stroke(symbolStroke);\n                add.line(0, cellSize / 2, cellSize, cellSize / 2).stroke(symbolStroke);\n            });\n        },\n        esriSFSDiagonalCross: function esriSFSDiagonalCross(symbolColour, symbolStroke) {\n            var cellSize = 7;\n\n            // patter fill: crossing diagonal lines in a 7x7 px square\n            return draw.pattern(cellSize, cellSize, function (add) {\n                add.line(0, 0, cellSize, cellSize).stroke(symbolStroke);\n                add.line(cellSize, 0, 0, cellSize).stroke(symbolStroke);\n            });\n        }\n    };\n\n    // jscs doesn't like enhanced object notation\n    // jscs:disable requireSpacesInAnonymousFunctionExpression\n    var symbolTypes = {\n        esriSMS: function esriSMS() {\n            // ESRI Simple Marker Symbol\n            var symbolColour = parseEsriColour(symbol.color);\n\n            symbol.outline = symbol.outline || DEFAULT_OUTLINE;\n            var outlineColour = parseEsriColour(symbol.outline.color);\n            var outlineStroke = makeStroke({\n                color: outlineColour.colour,\n                opacity: outlineColour.opacity,\n                width: symbol.outline.width,\n                dasharray: ESRI_DASH_MAPS[symbol.outline.style]\n            });\n\n            // make an ESRI simple symbol and apply fill and outline to it\n            var marker = esriSimpleMarkerSimbol[symbol.style](symbol).fill({\n                color: symbolColour.colour,\n                opacity: symbolColour.opacity\n            }).stroke(outlineStroke).center(CONTAINER_CENTER, CONTAINER_CENTER).rotate(symbol.angle || 0);\n\n            fitInto(marker, CONTENT_SIZE);\n        },\n        esriSLS: function esriSLS() {\n            // ESRI Simple Line Symbol\n            var lineColour = parseEsriColour(symbol.color);\n            var lineStroke = makeStroke({\n                color: lineColour.colour,\n                opacity: lineColour.opacity,\n                width: symbol.width,\n                linecap: 'butt',\n                dasharray: ESRI_DASH_MAPS[symbol.style]\n            });\n\n            var min = CONTENT_PADDING;\n            var max = CONTAINER_SIZE - CONTENT_PADDING;\n            draw.line(min, min, max, max).stroke(lineStroke);\n        },\n        esriCLS: function esriCLS() {\n            // ESRI Fancy Line Symbol\n            this.esriSLS();\n        },\n        esriSFS: function esriSFS() {\n            // ESRI Simple Fill Symbol\n            var symbolColour = parseEsriColour(symbol.color);\n            var symbolStroke = makeStroke({\n                color: symbolColour.colour,\n                opacity: symbolColour.opacity\n            });\n            var symbolFill = esriSFSFills[symbol.style](symbolColour, symbolStroke);\n\n            symbol.outline = symbol.outline || DEFAULT_OUTLINE;\n            var outlineColour = parseEsriColour(symbol.outline.color);\n            var outlineStroke = makeStroke({\n                color: outlineColour.colour,\n                opacity: outlineColour.opacity,\n                width: symbol.outline.width,\n                linecap: 'butt',\n                dasharray: ESRI_DASH_MAPS[symbol.outline.style]\n            });\n\n            draw.rect(CONTENT_SIZE, CONTENT_SIZE).center(CONTAINER_CENTER, CONTAINER_CENTER).fill(symbolFill).stroke(outlineStroke);\n        },\n\n        esriTS: function esriTS() {\n            console.error('no support for feature service legend of text symbols');\n        },\n\n        esriPFS: function esriPFS() {\n            // ESRI Picture Fill Symbol\n            // imageUri can be just an image url is specified or a dataUri string\n            var imageUri = symbol.imageData ? 'data:' + symbol.contentType + ';base64,' + symbol.imageData : symbol.url;\n\n            var imageWidth = symbol.width * symbol.xscale;\n            var imageHeight = symbol.height * symbol.yscale;\n\n            symbol.outline = symbol.outline || DEFAULT_OUTLINE;\n            var outlineColour = parseEsriColour(symbol.outline.color);\n            var outlineStroke = makeStroke({\n                color: outlineColour.colour,\n                opacity: outlineColour.opacity,\n                width: symbol.outline.width,\n                dasharray: ESRI_DASH_MAPS[symbol.outline.style]\n            });\n\n            var picturePromise = shared.convertImagetoDataURL(imageUri).then(function (imageUri) {\n                // make a fill from a tiled image\n                var symbolFill = draw.pattern(imageWidth, imageHeight, function (add) {\n                    return add.image(imageUri, imageWidth, imageHeight, true);\n                });\n\n                draw.rect(CONTENT_SIZE, CONTENT_SIZE).center(CONTAINER_CENTER, CONTAINER_CENTER).fill(symbolFill).stroke(outlineStroke);\n            });\n\n            return picturePromise;\n        },\n\n        esriPMS: function esriPMS() {\n            // ESRI PMS? Picture Marker Symbol\n            // imageUri can be just an image url is specified or a dataUri string\n            var imageUri = symbol.imageData ? 'data:' + symbol.contentType + ';base64,' + symbol.imageData : symbol.url;\n\n            // need to draw the image to get its size (technically not needed if we have a url, but this is simpler)\n            var picturePromise = shared.convertImagetoDataURL(imageUri).then(function (imageUri) {\n                return svgDrawImage(draw, imageUri);\n            }).then(function (_ref9) {\n                var image = _ref9.image;\n\n                image.center(CONTAINER_CENTER, CONTAINER_CENTER).rotate(symbol.angle || 0);\n\n                // scale image to fit into the symbology item container\n                fitInto(image, CONTENT_IMAGE_SIZE);\n            });\n\n            return picturePromise;\n        }\n    };\n\n    // jscs:enable requireSpacesInAnonymousFunctionExpression\n\n    // console.log(symbol.type, label, '--START--');\n    // console.log(symbol);\n\n    return Promise.resolve(symbolTypes[symbol.type]()).then(function () {\n        // console.log(symbol.type, label, '--DONE--');\n\n        // remove element from the page\n        window.document.body.removeChild(container);\n        return { label: label, svgcode: draw.svg() };\n    })['catch'](function (error) {\n        return console.log(error);\n    });\n\n    /**\r\n     * Creates a stroke style by applying custom rules to the default stroke.\r\n     * @param {Object} overrides any custom rules to apply on top of the defaults\r\n     * @return {Object} a stroke object\r\n     * @private\r\n     */\n    function makeStroke(overrides) {\n        return Object.assign({}, DEFAULT_STROKE, overrides);\n    }\n\n    /**\r\n     * Fits svg element in the size specified\r\n     * @param {Ojbect} element svg element to fit\r\n     * @param {Number} CONTAINER_SIZE width/height of a container to fit the element into\r\n     */\n    function fitInto(element, CONTAINER_SIZE) {\n        // const elementRbox = element.rbox();\n        // const elementRbox = element.screenBBox();\n\n        var elementRbox = element.node.getBoundingClientRect(); // marker.rbox(); //rbox doesn't work properly in Chrome for some reason\n        var scale = CONTAINER_SIZE / Math.max(elementRbox.width, elementRbox.height);\n        if (scale < 1) {\n            element.scale(scale);\n        }\n    }\n\n    /**\r\n    * Convert an ESRI colour object to SVG rgb format.\r\n    * @private\r\n    * @param  {Array} c ESRI Colour array\r\n    * @return {Object} colour and opacity in SVG format\r\n    */\n    function parseEsriColour(c) {\n        if (c) {\n            return {\n                colour: 'rgb(' + c[0] + ',' + c[1] + ',' + c[2] + ')',\n                opacity: c[3] / 255\n            };\n        } else {\n            return {\n                colour: 'rgb(0, 0, 0)',\n                opacity: 0\n            };\n        }\n    }\n}\n\n/**\r\n * Renders a specified image on an svg element. This is a helper function that wraps around async `draw.image` call in the svg library.\r\n *\r\n * @function svgDrawImage\r\n * @private\r\n * @param {Object} draw svg element to render the image onto\r\n * @param {String} imageUri image url or dataURL of the image to render\r\n * @param {Number} width [optional = 0] width of the image\r\n * @param {Number} height [optional = 0] height of the image\r\n * @param {Boolean} crossOrigin [optional = true] specifies if the image should be loaded as crossOrigin\r\n * @return {Promise} promise resolving with the loaded image and its loader object (see svg.js http://documentup.com/wout/svg.js#image for details)\r\n */\nfunction svgDrawImage(draw, imageUri) {\n    var width = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n    var height = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];\n    var crossOrigin = arguments.length <= 4 || arguments[4] === undefined ? true : arguments[4];\n\n    var promise = new Promise(function (resolve, reject) {\n        var image = draw.image(imageUri, width, height, crossOrigin).loaded(function (loader) {\n            return resolve({ image: image, loader: loader });\n        }).error(function (err) {\n            reject(err);\n            console.error(err);\n        });\n    });\n\n    return promise;\n}\n\n/**\r\n* Generate an array of legend items for an ESRI unique value or class breaks renderer.\r\n* @private\r\n* @param  {Object} renderer an ESRI unique value or class breaks renderer\r\n* @param  {Array} childList array of children items of the renderer\r\n* @param  {Object} window reference to the browser window\r\n* @return {Array} a legend object populated with the symbol and label\r\n*/\nfunction scrapeListRenderer(renderer, childList, window) {\n    var legend = childList.map(function (child) {\n        return symbolToLegend(child.symbol, child.label, window);\n    });\n\n    if (renderer.defaultSymbol) {\n        // class breaks dont have default label\n        // TODO perhaps put in a default of \"Other\", would need to be in proper language\n        legend.push(symbolToLegend(renderer.defaultSymbol, renderer.defaultLabel || '', window));\n    }\n\n    return legend;\n}\n\nfunction buildRendererToLegend(window) {\n    /**\r\n    * Generate a legend object based on an ESRI renderer.\r\n    * @private\r\n    * @param  {Object} renderer an ESRI renderer object in server JSON form\r\n    * @param  {Integer} index the layer index of this renderer\r\n    * @return {Object} an object matching the form of an ESRI REST API legend\r\n    */\n    return function (renderer, index) {\n        // make basic shell object with .layers array\n        var legend = {\n            layers: [{\n                layerId: index,\n                legend: []\n            }]\n        };\n\n        switch (renderer.type) {\n            case SIMPLE:\n                legend.layers[0].legend.push(symbolToLegend(renderer.symbol, renderer.label, window));\n                break;\n\n            case UNIQUE_VALUE:\n                legend.layers[0].legend = scrapeListRenderer(renderer, renderer.uniqueValueInfos, window);\n                break;\n\n            case CLASS_BREAKS:\n                legend.layers[0].legend = scrapeListRenderer(renderer, renderer.classBreakInfos, window);\n                break;\n\n            default:\n\n                // FIXME make a basic blank entry (error msg as label?) to prevent things from breaking\n                // Renderer we dont support\n                console.error('encountered unsupported renderer legend type: ' + renderer.type);\n        }\n        return legend;\n    };\n}\n\n/**\r\n * Returns the legend information of an ESRI map service.\r\n *\r\n * @function getMapServerLegend\r\n * @private\r\n * @param  {String} layerUrl service url (root service, not indexed endpoint)\r\n * @param  {Object} esriBundle collection of ESRI API objects\r\n * @returns {Promise} resolves in an array of legend data\r\n *\r\n */\nfunction getMapServerLegend(layerUrl, esriBundle) {\n\n    // standard json request with error checking\n    var defService = esriBundle.esriRequest({\n        url: layerUrl + '/legend',\n        content: { f: 'json' },\n        callbackParamName: 'callback',\n        handleAs: 'json'\n    });\n\n    // wrap in promise to contain dojo deferred\n    return new Promise(function (resolve, reject) {\n        defService.then(function (srvResult) {\n\n            if (srvResult.error) {\n                reject(srvResult.error);\n            } else {\n                resolve(srvResult);\n            }\n        }, function (error) {\n            reject(error);\n        });\n    });\n}\n\n/**\r\n * Our symbology engine works off of renderers. When dealing with layers with no renderers,\r\n * we need to take server-side legend and convert it to a fake renderer, which lets us\r\n * leverage all the existing symbology code.\r\n *\r\n * @function mapServerLegendToRenderer\r\n * @private\r\n * @param {Object} serverLegend legend json from an esri map server\r\n * @param {Integer} layerIndex  the index of the layer in the legend we are interested in\r\n * @returns {Object} a fake unique value renderer based off the legend\r\n *\r\n */\nfunction mapServerLegendToRenderer(serverLegend, layerIndex) {\n    var layerLegend = serverLegend.layers.find(function (l) {\n        return l.layerId === layerIndex;\n    });\n\n    // make the mock renderer\n    return {\n        type: 'uniqueValue',\n        uniqueValueInfos: layerLegend.legend.map(function (ll) {\n            return {\n                label: ll.label,\n                symbol: {\n                    type: 'esriPMS',\n                    imageData: ll.imageData,\n                    contentType: ll.contentType\n                }\n            };\n        })\n    };\n}\n\n/**\r\n  * Our symbology engine works off of renderers. When dealing with layers with no renderers,\r\n  * we need to take server-side legend and convert it to a fake renderer, which lets us\r\n  * leverage all the existing symbology code.\r\n  *\r\n  * Same as mapServerLegendToRenderer function but combines all layer renderers.\r\n  *\r\n  * @function mapServerLegendToRendererAll\r\n  * @private\r\n  * @param {Object} serverLegend legend json from an esri map server\r\n  * @returns {Object} a fake unique value renderer based off the legend\r\n  */\n\nfunction mapServerLegendToRendererAll(serverLegend) {\n    var _ref10;\n\n    var layerRenders = serverLegend.layers.map(function (layer) {\n        return layer.legend.map(function (layerLegend) {\n            return {\n                label: layerLegend.label,\n                symbol: {\n                    type: 'esriPMS',\n                    imageData: layerLegend.imageData,\n                    contentType: layerLegend.contentType\n                }\n            };\n        });\n    });\n\n    return {\n        type: 'uniqueValue',\n        uniqueValueInfos: (_ref10 = []).concat.apply(_ref10, _toConsumableArray(layerRenders))\n    };\n}\n\nfunction buildMapServerToLocalLegend(esriBundle, geoApi) {\n    /**\r\n     * Orchestrator function that will:\r\n     * - Fetch a legend from an esri map server\r\n     * - Extract legend for a specific sub layer\r\n     * - Convert server legend to a temporary renderer\r\n     * - Convert temporary renderer to a viewer-formatted legend (return value)\r\n     *\r\n     * @function mapServerToLocalLegend\r\n     * @param {String}    mapServerUrl  service url (root service, not indexed endpoint)\r\n     * @param {Integer}   [layerIndex]    the index of the layer in the legend we are interested in. If not provided, all layers will be collapsed into a single legend\r\n     * @returns {Promise} resolves in a viewer-compatible legend for the given server and layer index\r\n     *\r\n     */\n    return function (mapServerUrl, layerIndex) {\n        // get esri legend from server\n        return getMapServerLegend(mapServerUrl, esriBundle).then(function (serverLegendData) {\n            // derive renderer for specified layer\n            var fakeRenderer = typeof layerIndex === 'undefined' ? mapServerLegendToRendererAll(serverLegendData) : mapServerLegendToRenderer(serverLegendData, layerIndex);\n\n            // convert renderer to viewer specific legend\n            return geoApi.symbology.rendererToLegend(fakeRenderer);\n        });\n    };\n}\n\n// TODO getZoomLevel should probably live in a file not named symbology\n/**\r\n* Takes the lod list and finds level as close to and above scale limit\r\n*\r\n* @param {Array} lods array of esri LODs https://developers.arcgis.com/javascript/jsapi/lod-amd.html\r\n* @param {Integer} maxScale object largest zoom level for said layer\r\n* @returns {Number} current LOD\r\n*/\nfunction getZoomLevel(lods, maxScale) {\n    // Find level as close to and above scaleLimit\n    var scaleLimit = maxScale; // maxScale obj in returned config\n    var found = false;\n    var currentLod = Math.ceil(lods.length / 2);\n    var lowLod = 0;\n    var highLod = lods.length - 1;\n\n    if (maxScale === 0) {\n        return lods.length - 1;\n    }\n\n    // Binary Search\n    while (!found) {\n        if (lods[currentLod].scale >= scaleLimit) {\n            lowLod = currentLod;\n        } else {\n            highLod = currentLod;\n        }\n        currentLod = Math.floor((highLod + lowLod) / 2);\n        if (highLod === lowLod + 1) {\n            found = true;\n        }\n    }\n    return currentLod;\n}\n\nmodule.exports = function (esriBundle, geoApi, window) {\n    return {\n        getGraphicIcon: getGraphicIcon,\n        getGraphicSymbol: getGraphicSymbol,\n        rendererToLegend: buildRendererToLegend(window),\n        generatePlaceholderSymbology: generatePlaceholderSymbology,\n        generateWMSSymbology: generateWMSSymbology,\n        getZoomLevel: getZoomLevel,\n        enhanceRenderer: enhanceRenderer,\n        mapServerToLocalLegend: buildMapServerToLocalLegend(esriBundle, geoApi)\n    };\n};\n\n},{\"./shared.js\":162,\"svg.js\":142}]},{},[152])(152)\n});"]}
